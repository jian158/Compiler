Terminals unused in grammar

   STRUCT
   SPACE
   AERROR
   NULLPTR
   EOL


State 14 conflicts: 1 shift/reduce
State 94 conflicts: 3 shift/reduce, 1 reduce/reduce
State 99 conflicts: 1 reduce/reduce
State 118 conflicts: 20 shift/reduce
State 134 conflicts: 20 shift/reduce, 1 reduce/reduce
State 136 conflicts: 1 shift/reduce, 21 reduce/reduce
State 143 conflicts: 20 shift/reduce
State 146 conflicts: 20 shift/reduce
State 157 conflicts: 1 shift/reduce
State 176 conflicts: 20 shift/reduce
State 177 conflicts: 20 shift/reduce
State 179 conflicts: 20 shift/reduce
State 185 conflicts: 20 shift/reduce
State 193 conflicts: 20 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ClassDefs

    2 ClassDefs: Class
    3          | Class ClassDefs

    4 Class: CLASS ID LC ClassStms RC
    5      | CLASS ID EXTENDS ID LC ClassStms RC

    6 ClassStms: ClassStm ClassStms
    7          | ClassStm

    8 ClassStm: Fun
    9         | DeclareStm

   10 Fun: VarType ID LP Args RP LC BaseStm RC
   11    | STATIC VarType ID LP Args RP LC BaseStm RC
   12    | ID LP Args RP LC BaseStm RC

   13 VarType: TYPE Arrays
   14        | ID Arrays
   15        | TYPE
   16        | ID

   17 Arrays: ARRAY
   18       | ARRAY Arrays

   19 BaseStm: Lines

   20 Lines: Line
   21      | Line Lines

   22 Line: EMPTY
   23     | IfStm
   24     | WhileStm
   25     | VarStm SEMI
   26     | DeclareStm
   27     | ReturnStm
   28     | BreakStm
   29     | ForStm

   30 BreakStm: BREAK SEMI

   31 IfStm: IF LP Exp RP LC BaseStm RC
   32      | IfStm ELIfStm ElseStm

   33 ELIfStm: ELIF LP Exp RP LC BaseStm RC
   34        | EMPTY

   35 ElseStm: ELSE LC BaseStm RC
   36        | EMPTY

   37 WhileStm: WHILE LP Exp RP LC BaseStm RC

   38 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC

   39 DeclareStm: VarType VarStm SEMI
   40           | STATIC VarType VarStm SEMI
   41           | FINAL VarType VarStm SEMI
   42           | STATIC FINAL VarType VarStm SEMI

   43 VarStm: Exp
   44       | Exp COMMA VarStm

   45 ReturnStm: RETURN SEMI
   46          | RETURN Exp SEMI

   47 Args: EMPTY
   48     | Arg

   49 Arg: VarType ID
   50    | VarType ID COMMA Arg

   51 Exp: Constant
   52    | Call
   53    | ID DOT Call
   54    | ID DOT Constant
   55    | ID
   56    | THIS DOT ID
   57    | THIS DOT Call
   58    | Lvalue ASSIGNOP Exp
   59    | Exp PLUS Exp
   60    | Exp MINUS Exp
   61    | Exp AND Exp
   62    | Exp OR Exp
   63    | Exp STAR Exp
   64    | Exp DIV Exp
   65    | Exp RELOP Exp
   66    | LP Exp RP
   67    | MINUS Exp
   68    | NOT Exp
   69    | ID ArrayIndex
   70    | DPLUS ID
   71    | ID DPLUS
   72    | DMINUS ID
   73    | ID DMINUS
   74    | NEW Call
   75    | NEW TYPE ArrayIndex

   76 ArrayIndex: LB Exp RB
   77           | LB Exp RB ArrayIndex

   78 Lvalue: ID

   79 Constant: INT
   80         | FLOAT
   81         | BOOL
   82         | STR

   83 Call: ID LP CallArgs RP

   84 CallArgs: EMPTY
   85         | CallArg

   86 CallArg: Exp
   87        | Exp COMMA CallArg

   88 EMPTY: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
STATIC (258) 11 40 42
ARRAY (259) 17 18
FINAL (260) 41 42
BREAK (261) 30
TYPE (262) 13 15 75
STRUCT (263)
EXTENDS (264) 5
CLASS (265) 4 5
RETURN (266) 45 46
IF (267) 31
ELSE (268) 35
ELIF (269) 33
FOR (270) 38
WHILE (271) 37
ID (272) 4 5 10 11 12 14 16 49 50 53 54 55 56 69 70 71 72 73 78 83
SPACE (273)
SEMI (274) 25 30 38 39 40 41 42 45 46
COMMA (275) 44 50 87
ASSIGNOP (276) 58
RELOP (277) 65
DOT (278) 53 54 56 57
NOT (279) 68
LP (280) 10 11 12 31 33 37 38 66 83
RP (281) 10 11 12 31 33 37 38 66 83
LB (282) 76 77
RB (283) 76 77
LC (284) 4 5 10 11 12 31 33 35 37 38
RC (285) 4 5 10 11 12 31 33 35 37 38
AERROR (286)
DPLUS (287) 70 71
DMINUS (288) 72 73
INT (289) 79
FLOAT (290) 80
NULLPTR (291)
STR (292) 82
BOOL (293) 81
PLUS (294) 59
MINUS (295) 60 67
STAR (296) 63
DIV (297) 64
OR (298) 62
AND (299) 61
EOL (300)
NEW (301) 74 75
THIS (302) 56 57


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
ClassDefs (50)
    on left: 2 3, on right: 1 3
Class (51)
    on left: 4 5, on right: 2 3
ClassStms (52)
    on left: 6 7, on right: 4 5 6
ClassStm (53)
    on left: 8 9, on right: 6 7
Fun (54)
    on left: 10 11 12, on right: 8
VarType (55)
    on left: 13 14 15 16, on right: 10 11 39 40 41 42 49 50
Arrays (56)
    on left: 17 18, on right: 13 14 18
BaseStm (57)
    on left: 19, on right: 10 11 12 31 33 35 37 38
Lines (58)
    on left: 20 21, on right: 19 21
Line (59)
    on left: 22 23 24 25 26 27 28 29, on right: 20 21
BreakStm (60)
    on left: 30, on right: 28
IfStm (61)
    on left: 31 32, on right: 23 32
ELIfStm (62)
    on left: 33 34, on right: 32
ElseStm (63)
    on left: 35 36, on right: 32
WhileStm (64)
    on left: 37, on right: 24
ForStm (65)
    on left: 38, on right: 29
DeclareStm (66)
    on left: 39 40 41 42, on right: 9 26
VarStm (67)
    on left: 43 44, on right: 25 39 40 41 42 44
ReturnStm (68)
    on left: 45 46, on right: 27
Args (69)
    on left: 47 48, on right: 10 11 12
Arg (70)
    on left: 49 50, on right: 48 50
Exp (71)
    on left: 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
    69 70 71 72 73 74 75, on right: 31 33 37 38 43 44 46 58 59 60 61
    62 63 64 65 66 67 68 76 77 86 87
ArrayIndex (72)
    on left: 76 77, on right: 69 75 77
Lvalue (73)
    on left: 78, on right: 58
Constant (74)
    on left: 79 80 81 82, on right: 51 54
Call (75)
    on left: 83, on right: 52 53 57 74
CallArgs (76)
    on left: 84 85, on right: 83
CallArg (77)
    on left: 86 87, on right: 85 87
EMPTY (78)
    on left: 88, on right: 22 34 36 47 84


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    ClassDefs  go to state 3
    Class      go to state 4


State 1

    4 Class: CLASS . ID LC ClassStms RC
    5      | CLASS . ID EXTENDS ID LC ClassStms RC

    ID  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: ClassDefs .

    $default  reduce using rule 1 (Program)


State 4

    2 ClassDefs: Class .
    3          | Class . ClassDefs

    CLASS  shift, and go to state 1

    $default  reduce using rule 2 (ClassDefs)

    ClassDefs  go to state 7
    Class      go to state 4


State 5

    4 Class: CLASS ID . LC ClassStms RC
    5      | CLASS ID . EXTENDS ID LC ClassStms RC

    EXTENDS  shift, and go to state 8
    LC       shift, and go to state 9


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 ClassDefs: Class ClassDefs .

    $default  reduce using rule 3 (ClassDefs)


State 8

    5 Class: CLASS ID EXTENDS . ID LC ClassStms RC

    ID  shift, and go to state 10


State 9

    4 Class: CLASS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    ClassStms   go to state 15
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19


State 10

    5 Class: CLASS ID EXTENDS ID . LC ClassStms RC

    LC  shift, and go to state 20


State 11

   11 Fun: STATIC . VarType ID LP Args RP LC BaseStm RC
   40 DeclareStm: STATIC . VarType VarStm SEMI
   42           | STATIC . FINAL VarType VarStm SEMI

    FINAL  shift, and go to state 21
    TYPE   shift, and go to state 13
    ID     shift, and go to state 22

    VarType  go to state 23


State 12

   41 DeclareStm: FINAL . VarType VarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  go to state 24


State 13

   13 VarType: TYPE . Arrays
   15        | TYPE .

    ARRAY  shift, and go to state 25

    $default  reduce using rule 15 (VarType)

    Arrays  go to state 26


State 14

   12 Fun: ID . LP Args RP LC BaseStm RC
   14 VarType: ID . Arrays
   16        | ID .

    ARRAY  shift, and go to state 25
    LP     shift, and go to state 27

    LP        [reduce using rule 16 (VarType)]
    $default  reduce using rule 16 (VarType)

    Arrays  go to state 28


State 15

    4 Class: CLASS ID LC ClassStms . RC

    RC  shift, and go to state 29


State 16

    6 ClassStms: ClassStm . ClassStms
    7          | ClassStm .

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    $default  reduce using rule 7 (ClassStms)

    ClassStms   go to state 30
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19


State 17

    8 ClassStm: Fun .

    $default  reduce using rule 8 (ClassStm)


State 18

   10 Fun: VarType . ID LP Args RP LC BaseStm RC
   39 DeclareStm: VarType . VarStm SEMI

    ID      shift, and go to state 31
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 43
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 19

    9 ClassStm: DeclareStm .

    $default  reduce using rule 9 (ClassStm)


State 20

    5 Class: CLASS ID EXTENDS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    ClassStms   go to state 48
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19


State 21

   42 DeclareStm: STATIC FINAL . VarType VarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  go to state 49


State 22

   14 VarType: ID . Arrays
   16        | ID .

    ARRAY  shift, and go to state 25

    $default  reduce using rule 16 (VarType)

    Arrays  go to state 28


State 23

   11 Fun: STATIC VarType . ID LP Args RP LC BaseStm RC
   40 DeclareStm: STATIC VarType . VarStm SEMI

    ID      shift, and go to state 50
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 51
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 24

   41 DeclareStm: FINAL VarType . VarStm SEMI

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 53
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 25

   17 Arrays: ARRAY .
   18       | ARRAY . Arrays

    ARRAY  shift, and go to state 25

    $default  reduce using rule 17 (Arrays)

    Arrays  go to state 54


State 26

   13 VarType: TYPE Arrays .

    $default  reduce using rule 13 (VarType)


State 27

   12 Fun: ID LP . Args RP LC BaseStm RC

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    $default  reduce using rule 88 (EMPTY)

    VarType  go to state 55
    Args     go to state 56
    Arg      go to state 57
    EMPTY    go to state 58


State 28

   14 VarType: ID Arrays .

    $default  reduce using rule 14 (VarType)


State 29

    4 Class: CLASS ID LC ClassStms RC .

    $default  reduce using rule 4 (Class)


State 30

    6 ClassStms: ClassStm ClassStms .

    $default  reduce using rule 6 (ClassStms)


State 31

   10 Fun: VarType ID . LP Args RP LC BaseStm RC
   53 Exp: ID . DOT Call
   54    | ID . DOT Constant
   55    | ID .
   69    | ID . ArrayIndex
   71    | ID . DPLUS
   73    | ID . DMINUS
   78 Lvalue: ID .
   83 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 59
    LP      shift, and go to state 60
    LB      shift, and go to state 61
    DPLUS   shift, and go to state 62
    DMINUS  shift, and go to state 63

    ASSIGNOP  reduce using rule 78 (Lvalue)
    $default  reduce using rule 55 (Exp)

    ArrayIndex  go to state 64


State 32

   68 Exp: NOT . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 65
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 33

   66 Exp: LP . Exp RP

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 66
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 34

   70 Exp: DPLUS . ID

    ID  shift, and go to state 67


State 35

   72 Exp: DMINUS . ID

    ID  shift, and go to state 68


State 36

   79 Constant: INT .

    $default  reduce using rule 79 (Constant)


State 37

   80 Constant: FLOAT .

    $default  reduce using rule 80 (Constant)


State 38

   82 Constant: STR .

    $default  reduce using rule 82 (Constant)


State 39

   81 Constant: BOOL .

    $default  reduce using rule 81 (Constant)


State 40

   67 Exp: MINUS . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 69
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 41

   74 Exp: NEW . Call
   75    | NEW . TYPE ArrayIndex

    TYPE  shift, and go to state 70
    ID    shift, and go to state 71

    Call  go to state 72


State 42

   56 Exp: THIS . DOT ID
   57    | THIS . DOT Call

    DOT  shift, and go to state 73


State 43

   39 DeclareStm: VarType VarStm . SEMI

    SEMI  shift, and go to state 74


State 44

   43 VarStm: Exp .
   44       | Exp . COMMA VarStm
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    COMMA  shift, and go to state 75
    RELOP  shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82

    $default  reduce using rule 43 (VarStm)


State 45

   58 Exp: Lvalue . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 83


State 46

   51 Exp: Constant .

    $default  reduce using rule 51 (Exp)


State 47

   52 Exp: Call .

    $default  reduce using rule 52 (Exp)


State 48

    5 Class: CLASS ID EXTENDS ID LC ClassStms . RC

    RC  shift, and go to state 84


State 49

   42 DeclareStm: STATIC FINAL VarType . VarStm SEMI

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 85
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 50

   11 Fun: STATIC VarType ID . LP Args RP LC BaseStm RC
   53 Exp: ID . DOT Call
   54    | ID . DOT Constant
   55    | ID .
   69    | ID . ArrayIndex
   71    | ID . DPLUS
   73    | ID . DMINUS
   78 Lvalue: ID .
   83 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 59
    LP      shift, and go to state 86
    LB      shift, and go to state 61
    DPLUS   shift, and go to state 62
    DMINUS  shift, and go to state 63

    ASSIGNOP  reduce using rule 78 (Lvalue)
    $default  reduce using rule 55 (Exp)

    ArrayIndex  go to state 64


State 51

   40 DeclareStm: STATIC VarType VarStm . SEMI

    SEMI  shift, and go to state 87


State 52

   53 Exp: ID . DOT Call
   54    | ID . DOT Constant
   55    | ID .
   69    | ID . ArrayIndex
   71    | ID . DPLUS
   73    | ID . DMINUS
   78 Lvalue: ID .
   83 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 59
    LP      shift, and go to state 88
    LB      shift, and go to state 61
    DPLUS   shift, and go to state 62
    DMINUS  shift, and go to state 63

    ASSIGNOP  reduce using rule 78 (Lvalue)
    $default  reduce using rule 55 (Exp)

    ArrayIndex  go to state 64


State 53

   41 DeclareStm: FINAL VarType VarStm . SEMI

    SEMI  shift, and go to state 89


State 54

   18 Arrays: ARRAY Arrays .

    $default  reduce using rule 18 (Arrays)


State 55

   49 Arg: VarType . ID
   50    | VarType . ID COMMA Arg

    ID  shift, and go to state 90


State 56

   12 Fun: ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 91


State 57

   48 Args: Arg .

    $default  reduce using rule 48 (Args)


State 58

   47 Args: EMPTY .

    $default  reduce using rule 47 (Args)


State 59

   53 Exp: ID DOT . Call
   54    | ID DOT . Constant

    ID     shift, and go to state 71
    INT    shift, and go to state 36
    FLOAT  shift, and go to state 37
    STR    shift, and go to state 38
    BOOL   shift, and go to state 39

    Constant  go to state 92
    Call      go to state 93


State 60

   10 Fun: VarType ID LP . Args RP LC BaseStm RC
   83 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 13
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 88 (EMPTY)

    VarType   go to state 55
    Args      go to state 95
    Arg       go to state 57
    Exp       go to state 96
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArgs  go to state 97
    CallArg   go to state 98
    EMPTY     go to state 99


State 61

   76 ArrayIndex: LB . Exp RB
   77           | LB . Exp RB ArrayIndex

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 100
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 62

   71 Exp: ID DPLUS .

    $default  reduce using rule 71 (Exp)


State 63

   73 Exp: ID DMINUS .

    $default  reduce using rule 73 (Exp)


State 64

   69 Exp: ID ArrayIndex .

    $default  reduce using rule 69 (Exp)


State 65

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp
   68    | NOT Exp .

    $default  reduce using rule 68 (Exp)


State 66

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp
   66    | LP Exp . RP

    RELOP  shift, and go to state 76
    RP     shift, and go to state 101
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 67

   70 Exp: DPLUS ID .

    $default  reduce using rule 70 (Exp)


State 68

   72 Exp: DMINUS ID .

    $default  reduce using rule 72 (Exp)


State 69

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp
   67    | MINUS Exp .

    STAR  shift, and go to state 79
    DIV   shift, and go to state 80

    $default  reduce using rule 67 (Exp)


State 70

   75 Exp: NEW TYPE . ArrayIndex

    LB  shift, and go to state 61

    ArrayIndex  go to state 102


State 71

   83 Call: ID . LP CallArgs RP

    LP  shift, and go to state 88


State 72

   74 Exp: NEW Call .

    $default  reduce using rule 74 (Exp)


State 73

   56 Exp: THIS DOT . ID
   57    | THIS DOT . Call

    ID  shift, and go to state 103

    Call  go to state 104


State 74

   39 DeclareStm: VarType VarStm SEMI .

    $default  reduce using rule 39 (DeclareStm)


State 75

   44 VarStm: Exp COMMA . VarStm

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 105
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 76

   65 Exp: Exp RELOP . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 106
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 77

   59 Exp: Exp PLUS . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 107
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 78

   60 Exp: Exp MINUS . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 108
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 79

   63 Exp: Exp STAR . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 109
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 80

   64 Exp: Exp DIV . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 110
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 81

   62 Exp: Exp OR . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 111
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 82

   61 Exp: Exp AND . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 112
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 83

   58 Exp: Lvalue ASSIGNOP . Exp

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 113
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 84

    5 Class: CLASS ID EXTENDS ID LC ClassStms RC .

    $default  reduce using rule 5 (Class)


State 85

   42 DeclareStm: STATIC FINAL VarType VarStm . SEMI

    SEMI  shift, and go to state 114


State 86

   11 Fun: STATIC VarType ID LP . Args RP LC BaseStm RC
   83 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 13
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 88 (EMPTY)

    VarType   go to state 55
    Args      go to state 115
    Arg       go to state 57
    Exp       go to state 96
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArgs  go to state 97
    CallArg   go to state 98
    EMPTY     go to state 99


State 87

   40 DeclareStm: STATIC VarType VarStm SEMI .

    $default  reduce using rule 40 (DeclareStm)


State 88

   83 Call: ID LP . CallArgs RP

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 88 (EMPTY)

    Exp       go to state 96
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArgs  go to state 97
    CallArg   go to state 98
    EMPTY     go to state 116


State 89

   41 DeclareStm: FINAL VarType VarStm SEMI .

    $default  reduce using rule 41 (DeclareStm)


State 90

   49 Arg: VarType ID .
   50    | VarType ID . COMMA Arg

    COMMA  shift, and go to state 117

    $default  reduce using rule 49 (Arg)


State 91

   12 Fun: ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 118


State 92

   54 Exp: ID DOT Constant .

    $default  reduce using rule 54 (Exp)


State 93

   53 Exp: ID DOT Call .

    $default  reduce using rule 53 (Exp)


State 94

   14 VarType: ID . Arrays
   16        | ID .
   53 Exp: ID . DOT Call
   54    | ID . DOT Constant
   55    | ID .
   69    | ID . ArrayIndex
   71    | ID . DPLUS
   73    | ID . DMINUS
   78 Lvalue: ID .
   83 Call: ID . LP CallArgs RP

    ARRAY   shift, and go to state 25
    DOT     shift, and go to state 59
    LP      shift, and go to state 88
    LB      shift, and go to state 61
    DPLUS   shift, and go to state 62
    DMINUS  shift, and go to state 63

    SEMI      reduce using rule 55 (Exp)
    COMMA     reduce using rule 55 (Exp)
    ASSIGNOP  reduce using rule 78 (Lvalue)
    RELOP     reduce using rule 55 (Exp)
    LP        [reduce using rule 16 (VarType)]
    RP        reduce using rule 55 (Exp)
    DPLUS     [reduce using rule 16 (VarType)]
    DMINUS    [reduce using rule 16 (VarType)]
    PLUS      reduce using rule 55 (Exp)
    MINUS     reduce using rule 16 (VarType)
    MINUS     [reduce using rule 55 (Exp)]
    STAR      reduce using rule 55 (Exp)
    DIV       reduce using rule 55 (Exp)
    OR        reduce using rule 55 (Exp)
    AND       reduce using rule 55 (Exp)
    $default  reduce using rule 16 (VarType)

    Arrays      go to state 28
    ArrayIndex  go to state 64


State 95

   10 Fun: VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 119


State 96

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp
   86 CallArg: Exp .
   87        | Exp . COMMA CallArg

    COMMA  shift, and go to state 120
    RELOP  shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82

    $default  reduce using rule 86 (CallArg)


State 97

   83 Call: ID LP CallArgs . RP

    RP  shift, and go to state 121


State 98

   85 CallArgs: CallArg .

    $default  reduce using rule 85 (CallArgs)


State 99

   47 Args: EMPTY .
   84 CallArgs: EMPTY .

    RP        reduce using rule 47 (Args)
    RP        [reduce using rule 84 (CallArgs)]
    $default  reduce using rule 47 (Args)


State 100

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp
   76 ArrayIndex: LB Exp . RB
   77           | LB Exp . RB ArrayIndex

    RELOP  shift, and go to state 76
    RB     shift, and go to state 122
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 101

   66 Exp: LP Exp RP .

    $default  reduce using rule 66 (Exp)


State 102

   75 Exp: NEW TYPE ArrayIndex .

    $default  reduce using rule 75 (Exp)


State 103

   56 Exp: THIS DOT ID .
   83 Call: ID . LP CallArgs RP

    LP  shift, and go to state 88

    $default  reduce using rule 56 (Exp)


State 104

   57 Exp: THIS DOT Call .

    $default  reduce using rule 57 (Exp)


State 105

   44 VarStm: Exp COMMA VarStm .

    $default  reduce using rule 44 (VarStm)


State 106

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp
   65    | Exp RELOP Exp .

    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80

    $default  reduce using rule 65 (Exp)


State 107

   59 Exp: Exp . PLUS Exp
   59    | Exp PLUS Exp .
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    STAR  shift, and go to state 79
    DIV   shift, and go to state 80

    $default  reduce using rule 59 (Exp)


State 108

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   60    | Exp MINUS Exp .
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    STAR  shift, and go to state 79
    DIV   shift, and go to state 80

    $default  reduce using rule 60 (Exp)


State 109

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   63    | Exp STAR Exp .
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    $default  reduce using rule 63 (Exp)


State 110

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   64    | Exp DIV Exp .
   65    | Exp . RELOP Exp

    $default  reduce using rule 64 (Exp)


State 111

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   62    | Exp OR Exp .
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    RELOP  shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    AND    shift, and go to state 82

    $default  reduce using rule 62 (Exp)


State 112

   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   61    | Exp AND Exp .
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    RELOP  shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80

    $default  reduce using rule 61 (Exp)


State 113

   58 Exp: Lvalue ASSIGNOP Exp .
   59    | Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    RELOP  shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82

    $default  reduce using rule 58 (Exp)


State 114

   42 DeclareStm: STATIC FINAL VarType VarStm SEMI .

    $default  reduce using rule 42 (DeclareStm)


State 115

   11 Fun: STATIC VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 123


State 116

   84 CallArgs: EMPTY .

    $default  reduce using rule 84 (CallArgs)


State 117

   50 Arg: VarType ID COMMA . Arg

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  go to state 55
    Arg      go to state 124


State 118

   12 Fun: ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 131
    BaseStm     go to state 132
    Lines       go to state 133
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 119

   10 Fun: VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 143


State 120

   87 CallArg: Exp COMMA . CallArg

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 96
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArg   go to state 144


State 121

   83 Call: ID LP CallArgs RP .

    $default  reduce using rule 83 (Call)


State 122

   76 ArrayIndex: LB Exp RB .
   77           | LB Exp RB . ArrayIndex

    LB  shift, and go to state 61

    $default  reduce using rule 76 (ArrayIndex)

    ArrayIndex  go to state 145


State 123

   11 Fun: STATIC VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 146


State 124

   50 Arg: VarType ID COMMA Arg .

    $default  reduce using rule 50 (Arg)


State 125

   40 DeclareStm: STATIC . VarType VarStm SEMI
   42           | STATIC . FINAL VarType VarStm SEMI

    FINAL  shift, and go to state 21
    TYPE   shift, and go to state 13
    ID     shift, and go to state 22

    VarType  go to state 147


State 126

   30 BreakStm: BREAK . SEMI

    SEMI  shift, and go to state 148


State 127

   45 ReturnStm: RETURN . SEMI
   46          | RETURN . Exp SEMI

    ID      shift, and go to state 52
    SEMI    shift, and go to state 149
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 150
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 128

   31 IfStm: IF . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 151


State 129

   38 ForStm: FOR . LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC

    LP  shift, and go to state 152


State 130

   37 WhileStm: WHILE . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 153


State 131

   39 DeclareStm: VarType . VarStm SEMI

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 43
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 132

   12 Fun: ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 154


State 133

   19 BaseStm: Lines .

    $default  reduce using rule 19 (BaseStm)


State 134

   20 Lines: Line .
   21      | Line . Lines

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    RC        reduce using rule 20 (Lines)
    RC        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 20 (Lines)

    VarType     go to state 131
    Lines       go to state 155
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 135

   28 Line: BreakStm .

    $default  reduce using rule 28 (Line)


State 136

   23 Line: IfStm .
   32 IfStm: IfStm . ELIfStm ElseStm

    ELIF  shift, and go to state 156

    STATIC    reduce using rule 23 (Line)
    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     reduce using rule 23 (Line)
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     reduce using rule 23 (Line)
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      reduce using rule 23 (Line)
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    reduce using rule 23 (Line)
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        reduce using rule 23 (Line)
    IF        [reduce using rule 88 (EMPTY)]
    ELSE      reduce using rule 88 (EMPTY)
    ELIF      [reduce using rule 88 (EMPTY)]
    FOR       reduce using rule 23 (Line)
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     reduce using rule 23 (Line)
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        reduce using rule 23 (Line)
    ID        [reduce using rule 88 (EMPTY)]
    NOT       reduce using rule 23 (Line)
    NOT       [reduce using rule 88 (EMPTY)]
    LP        reduce using rule 23 (Line)
    LP        [reduce using rule 88 (EMPTY)]
    RC        reduce using rule 23 (Line)
    RC        [reduce using rule 88 (EMPTY)]
    DPLUS     reduce using rule 23 (Line)
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    reduce using rule 23 (Line)
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       reduce using rule 23 (Line)
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     reduce using rule 23 (Line)
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       reduce using rule 23 (Line)
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      reduce using rule 23 (Line)
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     reduce using rule 23 (Line)
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       reduce using rule 23 (Line)
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      reduce using rule 23 (Line)
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 23 (Line)

    ELIfStm  go to state 157
    EMPTY    go to state 158


State 137

   24 Line: WhileStm .

    $default  reduce using rule 24 (Line)


State 138

   29 Line: ForStm .

    $default  reduce using rule 29 (Line)


State 139

   26 Line: DeclareStm .

    $default  reduce using rule 26 (Line)


State 140

   25 Line: VarStm . SEMI

    SEMI  shift, and go to state 159


State 141

   27 Line: ReturnStm .

    $default  reduce using rule 27 (Line)


State 142

   22 Line: EMPTY .

    $default  reduce using rule 22 (Line)


State 143

   10 Fun: VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 131
    BaseStm     go to state 160
    Lines       go to state 133
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 144

   87 CallArg: Exp COMMA CallArg .

    $default  reduce using rule 87 (CallArg)


State 145

   77 ArrayIndex: LB Exp RB ArrayIndex .

    $default  reduce using rule 77 (ArrayIndex)


State 146

   11 Fun: STATIC VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 131
    BaseStm     go to state 161
    Lines       go to state 133
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 147

   40 DeclareStm: STATIC VarType . VarStm SEMI

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 51
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 148

   30 BreakStm: BREAK SEMI .

    $default  reduce using rule 30 (BreakStm)


State 149

   45 ReturnStm: RETURN SEMI .

    $default  reduce using rule 45 (ReturnStm)


State 150

   46 ReturnStm: RETURN Exp . SEMI
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    SEMI   shift, and go to state 162
    RELOP  shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 151

   31 IfStm: IF LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 163
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 152

   38 ForStm: FOR LP . Exp SEMI Exp SEMI Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 164
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 153

   37 WhileStm: WHILE LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 165
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 154

   12 Fun: ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 12 (Fun)


State 155

   21 Lines: Line Lines .

    $default  reduce using rule 21 (Lines)


State 156

   33 ELIfStm: ELIF . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 166


State 157

   32 IfStm: IfStm ELIfStm . ElseStm

    ELSE  shift, and go to state 167

    ELSE      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    ElseStm  go to state 168
    EMPTY    go to state 169


State 158

   34 ELIfStm: EMPTY .

    $default  reduce using rule 34 (ELIfStm)


State 159

   25 Line: VarStm SEMI .

    $default  reduce using rule 25 (Line)


State 160

   10 Fun: VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 170


State 161

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 171


State 162

   46 ReturnStm: RETURN Exp SEMI .

    $default  reduce using rule 46 (ReturnStm)


State 163

   31 IfStm: IF LP Exp . RP LC BaseStm RC
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    RELOP  shift, and go to state 76
    RP     shift, and go to state 172
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 164

   38 ForStm: FOR LP Exp . SEMI Exp SEMI Exp RP LC BaseStm RC
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    SEMI   shift, and go to state 173
    RELOP  shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 165

   37 WhileStm: WHILE LP Exp . RP LC BaseStm RC
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    RELOP  shift, and go to state 76
    RP     shift, and go to state 174
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 166

   33 ELIfStm: ELIF LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 175
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 167

   35 ElseStm: ELSE . LC BaseStm RC

    LC  shift, and go to state 176


State 168

   32 IfStm: IfStm ELIfStm ElseStm .

    $default  reduce using rule 32 (IfStm)


State 169

   36 ElseStm: EMPTY .

    $default  reduce using rule 36 (ElseStm)


State 170

   10 Fun: VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 10 (Fun)


State 171

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 11 (Fun)


State 172

   31 IfStm: IF LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 177


State 173

   38 ForStm: FOR LP Exp SEMI . Exp SEMI Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 178
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 174

   37 WhileStm: WHILE LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 179


State 175

   33 ELIfStm: ELIF LP Exp . RP LC BaseStm RC
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    RELOP  shift, and go to state 76
    RP     shift, and go to state 180
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 176

   35 ElseStm: ELSE LC . BaseStm RC

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 131
    BaseStm     go to state 181
    Lines       go to state 133
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 177

   31 IfStm: IF LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 131
    BaseStm     go to state 182
    Lines       go to state 133
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 178

   38 ForStm: FOR LP Exp SEMI Exp . SEMI Exp RP LC BaseStm RC
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    SEMI   shift, and go to state 183
    RELOP  shift, and go to state 76
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 179

   37 WhileStm: WHILE LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 131
    BaseStm     go to state 184
    Lines       go to state 133
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 180

   33 ELIfStm: ELIF LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 185


State 181

   35 ElseStm: ELSE LC BaseStm . RC

    RC  shift, and go to state 186


State 182

   31 IfStm: IF LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 187


State 183

   38 ForStm: FOR LP Exp SEMI Exp SEMI . Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 188
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 184

   37 WhileStm: WHILE LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 189


State 185

   33 ELIfStm: ELIF LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 131
    BaseStm     go to state 190
    Lines       go to state 133
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 186

   35 ElseStm: ELSE LC BaseStm RC .

    $default  reduce using rule 35 (ElseStm)


State 187

   31 IfStm: IF LP Exp RP LC BaseStm RC .

    $default  reduce using rule 31 (IfStm)


State 188

   38 ForStm: FOR LP Exp SEMI Exp SEMI Exp . RP LC BaseStm RC
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . STAR Exp
   64    | Exp . DIV Exp
   65    | Exp . RELOP Exp

    RELOP  shift, and go to state 76
    RP     shift, and go to state 191
    PLUS   shift, and go to state 77
    MINUS  shift, and go to state 78
    STAR   shift, and go to state 79
    DIV    shift, and go to state 80
    OR     shift, and go to state 81
    AND    shift, and go to state 82


State 189

   37 WhileStm: WHILE LP Exp RP LC BaseStm RC .

    $default  reduce using rule 37 (WhileStm)


State 190

   33 ELIfStm: ELIF LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 192


State 191

   38 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP . LC BaseStm RC

    LC  shift, and go to state 193


State 192

   33 ELIfStm: ELIF LP Exp RP LC BaseStm RC .

    $default  reduce using rule 33 (ELIfStm)


State 193

   38 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 125
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 126
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 127
    IF      shift, and go to state 128
    FOR     shift, and go to state 129
    WHILE   shift, and go to state 130
    ID      shift, and go to state 94
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    STR       [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 131
    BaseStm     go to state 194
    Lines       go to state 133
    Line        go to state 134
    BreakStm    go to state 135
    IfStm       go to state 136
    WhileStm    go to state 137
    ForStm      go to state 138
    DeclareStm  go to state 139
    VarStm      go to state 140
    ReturnStm   go to state 141
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 142


State 194

   38 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm . RC

    RC  shift, and go to state 195


State 195

   38 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC .

    $default  reduce using rule 38 (ForStm)
