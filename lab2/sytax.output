Terminals unused in grammar

   STRUCT
   SPACE
   AERROR
   NULLPTR
   STR
   EOL


State 9 conflicts: 4 shift/reduce
State 14 conflicts: 1 shift/reduce
State 16 conflicts: 4 shift/reduce, 1 reduce/reduce
State 21 conflicts: 4 shift/reduce
State 32 conflicts: 1 shift/reduce
State 47 conflicts: 1 shift/reduce
State 50 conflicts: 1 shift/reduce
State 52 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 96 conflicts: 4 shift/reduce, 1 reduce/reduce
State 101 conflicts: 1 reduce/reduce
State 122 conflicts: 19 shift/reduce
State 140 conflicts: 19 shift/reduce, 1 reduce/reduce
State 142 conflicts: 1 shift/reduce, 20 reduce/reduce
State 149 conflicts: 19 shift/reduce
State 153 conflicts: 19 shift/reduce
State 164 conflicts: 1 shift/reduce
State 184 conflicts: 19 shift/reduce
State 185 conflicts: 19 shift/reduce
State 187 conflicts: 19 shift/reduce
State 193 conflicts: 19 shift/reduce
State 201 conflicts: 19 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ClassDefs

    2 ClassDefs: Class
    3          | Class ClassDefs

    4 Class: CLASS ID LC ClassStms RC
    5      | CLASS ID EXTENDS ID LC ClassStms RC

    6 ClassStms: ClassStm ClassStms
    7          | ClassStm

    8 ClassStm: Fun
    9         | DeclareStm

   10 Fun: VarType ID LP Args RP LC BaseStm RC
   11    | STATIC VarType ID LP Args RP LC BaseStm RC
   12    | ID LP Args RP LC BaseStm RC
   13    | EMPTY

   14 VarType: TYPE Arrays
   15        | ID Arrays
   16        | TYPE
   17        | ID

   18 Arrays: ARRAY
   19       | ARRAY Arrays

   20 BaseStm: Lines

   21 Lines: Line
   22      | Line Lines

   23 Line: EMPTY
   24     | IfStm
   25     | WhileStm
   26     | VarStm SEMI
   27     | DeclareStm
   28     | ReturnStm
   29     | BreakStm
   30     | ForStm

   31 BreakStm: BREAK SEMI

   32 IfStm: IF LP Exp RP LC BaseStm RC
   33      | IfStm ELIfStm ElseStm

   34 ELIfStm: ELIF LP Exp RP LC BaseStm RC
   35        | EMPTY

   36 ElseStm: ELSE LC BaseStm RC
   37        | EMPTY

   38 WhileStm: WHILE LP Exp RP LC BaseStm RC

   39 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC

   40 DeclareStm: VarType VarStm SEMI
   41           | STATIC VarType VarStm SEMI
   42           | FINAL VarType VarStm SEMI
   43           | STATIC FINAL VarType VarStm SEMI

   44 VarStm: Exp
   45       | Exp COMMA VarStm

   46 ReturnStm: RETURN SEMI
   47          | RETURN Exp SEMI

   48 Args: EMPTY
   49     | Arg

   50 Arg: VarType ID
   51    | VarType ID COMMA Arg

   52 Exp: Constant
   53    | Call
   54    | ID DOT Call
   55    | ID DOT Constant
   56    | THIS DOT Constant
   57    | THIS DOT Call
   58    | Exp PLUS Exp
   59    | Exp MINUS Exp
   60    | Lvalue ASSIGNOP Exp
   61    | Exp AND Exp
   62    | Exp OR Exp
   63    | Exp RELOP Exp
   64    | Exp STAR Exp
   65    | Exp DIV Exp
   66    | LP Exp RP
   67    | MINUS Exp
   68    | NOT Exp
   69    | Exp LB Exp RB
   70    | DPLUS ID
   71    | ID DPLUS
   72    | DMINUS ID
   73    | ID DMINUS
   74    | NEW Call
   75    | NEW TYPE LB Exp RB

   76 Lvalue: ID
   77       | Exp LB Exp RB
   78       | Exp DOT ID

   79 Constant: ID
   80         | INT
   81         | FLOAT
   82         | BOOL

   83 Call: ID LP CallArgs RP
   84     | Call DOT ID
   85     | Call DOT ID LP CallArgs RP

   86 CallArgs: EMPTY
   87         | CallArg

   88 CallArg: Exp
   89        | Exp COMMA CallArg

   90 EMPTY: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
STATIC (258) 11 41 43
ARRAY (259) 18 19
FINAL (260) 42 43
BREAK (261) 31
TYPE (262) 14 16 75
STRUCT (263)
EXTENDS (264) 5
CLASS (265) 4 5
RETURN (266) 46 47
IF (267) 32
ELSE (268) 36
ELIF (269) 34
FOR (270) 39
WHILE (271) 38
ID (272) 4 5 10 11 12 15 17 50 51 54 55 70 71 72 73 76 78 79 83 84
    85
SPACE (273)
SEMI (274) 26 31 39 40 41 42 43 46 47
COMMA (275) 45 51 89
ASSIGNOP (276) 60
RELOP (277) 63
PLUS (278) 58
MINUS (279) 59 67
STAR (280) 64
DIV (281) 65
AND (282) 61
OR (283) 62
DOT (284) 54 55 56 57 78 84 85
NOT (285) 68
LP (286) 10 11 12 32 34 38 39 66 83 85
RP (287) 10 11 12 32 34 38 39 66 83 85
LB (288) 69 75 77
RB (289) 69 75 77
LC (290) 4 5 10 11 12 32 34 36 38 39
RC (291) 4 5 10 11 12 32 34 36 38 39
AERROR (292)
DPLUS (293) 70 71
DMINUS (294) 72 73
INT (295) 80
FLOAT (296) 81
NULLPTR (297)
STR (298)
BOOL (299) 82
EOL (300)
NEW (301) 74 75
THIS (302) 56 57


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
ClassDefs (50)
    on left: 2 3, on right: 1 3
Class (51)
    on left: 4 5, on right: 2 3
ClassStms (52)
    on left: 6 7, on right: 4 5 6
ClassStm (53)
    on left: 8 9, on right: 6 7
Fun (54)
    on left: 10 11 12 13, on right: 8
VarType (55)
    on left: 14 15 16 17, on right: 10 11 40 41 42 43 50 51
Arrays (56)
    on left: 18 19, on right: 14 15 19
BaseStm (57)
    on left: 20, on right: 10 11 12 32 34 36 38 39
Lines (58)
    on left: 21 22, on right: 20 22
Line (59)
    on left: 23 24 25 26 27 28 29 30, on right: 21 22
BreakStm (60)
    on left: 31, on right: 29
IfStm (61)
    on left: 32 33, on right: 24 33
ELIfStm (62)
    on left: 34 35, on right: 33
ElseStm (63)
    on left: 36 37, on right: 33
WhileStm (64)
    on left: 38, on right: 25
ForStm (65)
    on left: 39, on right: 30
DeclareStm (66)
    on left: 40 41 42 43, on right: 9 27
VarStm (67)
    on left: 44 45, on right: 26 40 41 42 43 45
ReturnStm (68)
    on left: 46 47, on right: 28
Args (69)
    on left: 48 49, on right: 10 11 12
Arg (70)
    on left: 50 51, on right: 49 51
Exp (71)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 75, on right: 32 34 38 39 44 45 47 58 59 60 61 62
    63 64 65 66 67 68 69 75 77 78 88 89
Lvalue (72)
    on left: 76 77 78, on right: 60
Constant (73)
    on left: 79 80 81 82, on right: 52 55 56
Call (74)
    on left: 83 84 85, on right: 53 54 57 74 84 85
CallArgs (75)
    on left: 86 87, on right: 83 85
CallArg (76)
    on left: 88 89, on right: 87 89
EMPTY (77)
    on left: 90, on right: 13 23 35 37 48 86


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    ClassDefs  go to state 3
    Class      go to state 4


State 1

    4 Class: CLASS . ID LC ClassStms RC
    5      | CLASS . ID EXTENDS ID LC ClassStms RC

    ID  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: ClassDefs .

    $default  reduce using rule 1 (Program)


State 4

    2 ClassDefs: Class .
    3          | Class . ClassDefs

    CLASS  shift, and go to state 1

    $default  reduce using rule 2 (ClassDefs)

    ClassDefs  go to state 7
    Class      go to state 4


State 5

    4 Class: CLASS ID . LC ClassStms RC
    5      | CLASS ID . EXTENDS ID LC ClassStms RC

    EXTENDS  shift, and go to state 8
    LC       shift, and go to state 9


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 ClassDefs: Class ClassDefs .

    $default  reduce using rule 3 (ClassDefs)


State 8

    5 Class: CLASS ID EXTENDS . ID LC ClassStms RC

    ID  shift, and go to state 10


State 9

    4 Class: CLASS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    ClassStms   go to state 15
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19
    EMPTY       go to state 20


State 10

    5 Class: CLASS ID EXTENDS ID . LC ClassStms RC

    LC  shift, and go to state 21


State 11

   11 Fun: STATIC . VarType ID LP Args RP LC BaseStm RC
   41 DeclareStm: STATIC . VarType VarStm SEMI
   43           | STATIC . FINAL VarType VarStm SEMI

    FINAL  shift, and go to state 22
    TYPE   shift, and go to state 13
    ID     shift, and go to state 23

    VarType  go to state 24


State 12

   42 DeclareStm: FINAL . VarType VarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 23

    VarType  go to state 25


State 13

   14 VarType: TYPE . Arrays
   16        | TYPE .

    ARRAY  shift, and go to state 26

    $default  reduce using rule 16 (VarType)

    Arrays  go to state 27


State 14

   12 Fun: ID . LP Args RP LC BaseStm RC
   15 VarType: ID . Arrays
   17        | ID .

    ARRAY  shift, and go to state 26
    LP     shift, and go to state 28

    LP        [reduce using rule 17 (VarType)]
    $default  reduce using rule 17 (VarType)

    Arrays  go to state 29


State 15

    4 Class: CLASS ID LC ClassStms . RC

    RC  shift, and go to state 30


State 16

    6 ClassStms: ClassStm . ClassStms
    7          | ClassStm .

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    RC        reduce using rule 7 (ClassStms)
    RC        [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 7 (ClassStms)

    ClassStms   go to state 31
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19
    EMPTY       go to state 20


State 17

    8 ClassStm: Fun .

    $default  reduce using rule 8 (ClassStm)


State 18

   10 Fun: VarType . ID LP Args RP LC BaseStm RC
   40 DeclareStm: VarType . VarStm SEMI

    ID      shift, and go to state 32
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 43
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 19

    9 ClassStm: DeclareStm .

    $default  reduce using rule 9 (ClassStm)


State 20

   13 Fun: EMPTY .

    $default  reduce using rule 13 (Fun)


State 21

    5 Class: CLASS ID EXTENDS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    ClassStms   go to state 48
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19
    EMPTY       go to state 20


State 22

   43 DeclareStm: STATIC FINAL . VarType VarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 23

    VarType  go to state 49


State 23

   15 VarType: ID . Arrays
   17        | ID .

    ARRAY  shift, and go to state 26

    $default  reduce using rule 17 (VarType)

    Arrays  go to state 29


State 24

   11 Fun: STATIC VarType . ID LP Args RP LC BaseStm RC
   41 DeclareStm: STATIC VarType . VarStm SEMI

    ID      shift, and go to state 50
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 51
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 25

   42 DeclareStm: FINAL VarType . VarStm SEMI

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 53
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 26

   18 Arrays: ARRAY .
   19       | ARRAY . Arrays

    ARRAY  shift, and go to state 26

    $default  reduce using rule 18 (Arrays)

    Arrays  go to state 54


State 27

   14 VarType: TYPE Arrays .

    $default  reduce using rule 14 (VarType)


State 28

   12 Fun: ID LP . Args RP LC BaseStm RC

    TYPE  shift, and go to state 13
    ID    shift, and go to state 23

    $default  reduce using rule 90 (EMPTY)

    VarType  go to state 55
    Args     go to state 56
    Arg      go to state 57
    EMPTY    go to state 58


State 29

   15 VarType: ID Arrays .

    $default  reduce using rule 15 (VarType)


State 30

    4 Class: CLASS ID LC ClassStms RC .

    $default  reduce using rule 4 (Class)


State 31

    6 ClassStms: ClassStm ClassStms .

    $default  reduce using rule 6 (ClassStms)


State 32

   10 Fun: VarType ID . LP Args RP LC BaseStm RC
   54 Exp: ID . DOT Call
   55    | ID . DOT Constant
   71    | ID . DPLUS
   73    | ID . DMINUS
   76 Lvalue: ID .
   79 Constant: ID .
   83 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 59
    LP      shift, and go to state 60
    DPLUS   shift, and go to state 61
    DMINUS  shift, and go to state 62

    ASSIGNOP  reduce using rule 76 (Lvalue)
    DOT       [reduce using rule 79 (Constant)]
    $default  reduce using rule 79 (Constant)


State 33

   67 Exp: MINUS . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 63
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 34

   68 Exp: NOT . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 64
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 35

   66 Exp: LP . Exp RP

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 65
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 36

   70 Exp: DPLUS . ID

    ID  shift, and go to state 66


State 37

   72 Exp: DMINUS . ID

    ID  shift, and go to state 67


State 38

   80 Constant: INT .

    $default  reduce using rule 80 (Constant)


State 39

   81 Constant: FLOAT .

    $default  reduce using rule 81 (Constant)


State 40

   82 Constant: BOOL .

    $default  reduce using rule 82 (Constant)


State 41

   74 Exp: NEW . Call
   75    | NEW . TYPE LB Exp RB

    TYPE  shift, and go to state 68
    ID    shift, and go to state 69

    Call  go to state 70


State 42

   56 Exp: THIS . DOT Constant
   57    | THIS . DOT Call

    DOT  shift, and go to state 71


State 43

   40 DeclareStm: VarType VarStm . SEMI

    SEMI  shift, and go to state 72


State 44

   44 VarStm: Exp .
   45       | Exp . COMMA VarStm
   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    COMMA  shift, and go to state 73
    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    LB     shift, and go to state 82

    $default  reduce using rule 44 (VarStm)


State 45

   60 Exp: Lvalue . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 83


State 46

   52 Exp: Constant .

    $default  reduce using rule 52 (Exp)


State 47

   53 Exp: Call .
   84 Call: Call . DOT ID
   85     | Call . DOT ID LP CallArgs RP

    DOT  shift, and go to state 84

    DOT       [reduce using rule 53 (Exp)]
    $default  reduce using rule 53 (Exp)


State 48

    5 Class: CLASS ID EXTENDS ID LC ClassStms . RC

    RC  shift, and go to state 85


State 49

   43 DeclareStm: STATIC FINAL VarType . VarStm SEMI

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 86
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 50

   11 Fun: STATIC VarType ID . LP Args RP LC BaseStm RC
   54 Exp: ID . DOT Call
   55    | ID . DOT Constant
   71    | ID . DPLUS
   73    | ID . DMINUS
   76 Lvalue: ID .
   79 Constant: ID .
   83 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 59
    LP      shift, and go to state 87
    DPLUS   shift, and go to state 61
    DMINUS  shift, and go to state 62

    ASSIGNOP  reduce using rule 76 (Lvalue)
    DOT       [reduce using rule 79 (Constant)]
    $default  reduce using rule 79 (Constant)


State 51

   41 DeclareStm: STATIC VarType VarStm . SEMI

    SEMI  shift, and go to state 88


State 52

   54 Exp: ID . DOT Call
   55    | ID . DOT Constant
   71    | ID . DPLUS
   73    | ID . DMINUS
   76 Lvalue: ID .
   79 Constant: ID .
   83 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 59
    LP      shift, and go to state 89
    DPLUS   shift, and go to state 61
    DMINUS  shift, and go to state 62

    ASSIGNOP  reduce using rule 76 (Lvalue)
    DOT       [reduce using rule 79 (Constant)]
    $default  reduce using rule 79 (Constant)


State 53

   42 DeclareStm: FINAL VarType VarStm . SEMI

    SEMI  shift, and go to state 90


State 54

   19 Arrays: ARRAY Arrays .

    $default  reduce using rule 19 (Arrays)


State 55

   50 Arg: VarType . ID
   51    | VarType . ID COMMA Arg

    ID  shift, and go to state 91


State 56

   12 Fun: ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 92


State 57

   49 Args: Arg .

    $default  reduce using rule 49 (Args)


State 58

   48 Args: EMPTY .

    $default  reduce using rule 48 (Args)


State 59

   54 Exp: ID DOT . Call
   55    | ID DOT . Constant

    ID     shift, and go to state 93
    INT    shift, and go to state 38
    FLOAT  shift, and go to state 39
    BOOL   shift, and go to state 40

    Constant  go to state 94
    Call      go to state 95


State 60

   10 Fun: VarType ID LP . Args RP LC BaseStm RC
   83 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 13
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 90 (EMPTY)

    VarType   go to state 55
    Args      go to state 97
    Arg       go to state 57
    Exp       go to state 98
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArgs  go to state 99
    CallArg   go to state 100
    EMPTY     go to state 101


State 61

   71 Exp: ID DPLUS .

    $default  reduce using rule 71 (Exp)


State 62

   73 Exp: ID DMINUS .

    $default  reduce using rule 73 (Exp)


State 63

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   67    | MINUS Exp .
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    STAR  shift, and go to state 77
    DIV   shift, and go to state 78
    DOT   shift, and go to state 81
    LB    shift, and go to state 82

    $default  reduce using rule 67 (Exp)


State 64

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   68    | NOT Exp .
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    DOT  shift, and go to state 81
    LB   shift, and go to state 82

    $default  reduce using rule 68 (Exp)


State 65

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   66    | LP Exp . RP
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    RP     shift, and go to state 102
    LB     shift, and go to state 82


State 66

   70 Exp: DPLUS ID .

    $default  reduce using rule 70 (Exp)


State 67

   72 Exp: DMINUS ID .

    $default  reduce using rule 72 (Exp)


State 68

   75 Exp: NEW TYPE . LB Exp RB

    LB  shift, and go to state 103


State 69

   83 Call: ID . LP CallArgs RP

    LP  shift, and go to state 89


State 70

   74 Exp: NEW Call .
   84 Call: Call . DOT ID
   85     | Call . DOT ID LP CallArgs RP

    DOT  shift, and go to state 84

    DOT       [reduce using rule 74 (Exp)]
    $default  reduce using rule 74 (Exp)


State 71

   56 Exp: THIS DOT . Constant
   57    | THIS DOT . Call

    ID     shift, and go to state 93
    INT    shift, and go to state 38
    FLOAT  shift, and go to state 39
    BOOL   shift, and go to state 40

    Constant  go to state 104
    Call      go to state 105


State 72

   40 DeclareStm: VarType VarStm SEMI .

    $default  reduce using rule 40 (DeclareStm)


State 73

   45 VarStm: Exp COMMA . VarStm

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 106
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 74

   63 Exp: Exp RELOP . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 107
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 75

   58 Exp: Exp PLUS . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 108
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 76

   59 Exp: Exp MINUS . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 109
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 77

   64 Exp: Exp STAR . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 110
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 78

   65 Exp: Exp DIV . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 111
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 79

   61 Exp: Exp AND . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 112
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 80

   62 Exp: Exp OR . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 113
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 81

   78 Lvalue: Exp DOT . ID

    ID  shift, and go to state 114


State 82

   69 Exp: Exp LB . Exp RB
   77 Lvalue: Exp LB . Exp RB

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 115
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 83

   60 Exp: Lvalue ASSIGNOP . Exp

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 116
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 84

   84 Call: Call DOT . ID
   85     | Call DOT . ID LP CallArgs RP

    ID  shift, and go to state 117


State 85

    5 Class: CLASS ID EXTENDS ID LC ClassStms RC .

    $default  reduce using rule 5 (Class)


State 86

   43 DeclareStm: STATIC FINAL VarType VarStm . SEMI

    SEMI  shift, and go to state 118


State 87

   11 Fun: STATIC VarType ID LP . Args RP LC BaseStm RC
   83 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 13
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 90 (EMPTY)

    VarType   go to state 55
    Args      go to state 119
    Arg       go to state 57
    Exp       go to state 98
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArgs  go to state 99
    CallArg   go to state 100
    EMPTY     go to state 101


State 88

   41 DeclareStm: STATIC VarType VarStm SEMI .

    $default  reduce using rule 41 (DeclareStm)


State 89

   83 Call: ID LP . CallArgs RP

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 90 (EMPTY)

    Exp       go to state 98
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArgs  go to state 99
    CallArg   go to state 100
    EMPTY     go to state 120


State 90

   42 DeclareStm: FINAL VarType VarStm SEMI .

    $default  reduce using rule 42 (DeclareStm)


State 91

   50 Arg: VarType ID .
   51    | VarType ID . COMMA Arg

    COMMA  shift, and go to state 121

    $default  reduce using rule 50 (Arg)


State 92

   12 Fun: ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 122


State 93

   79 Constant: ID .
   83 Call: ID . LP CallArgs RP

    LP  shift, and go to state 89

    $default  reduce using rule 79 (Constant)


State 94

   55 Exp: ID DOT Constant .

    $default  reduce using rule 55 (Exp)


State 95

   54 Exp: ID DOT Call .
   84 Call: Call . DOT ID
   85     | Call . DOT ID LP CallArgs RP

    $default  reduce using rule 54 (Exp)


State 96

   15 VarType: ID . Arrays
   17        | ID .
   54 Exp: ID . DOT Call
   55    | ID . DOT Constant
   71    | ID . DPLUS
   73    | ID . DMINUS
   76 Lvalue: ID .
   79 Constant: ID .
   83 Call: ID . LP CallArgs RP

    ARRAY   shift, and go to state 26
    DOT     shift, and go to state 59
    LP      shift, and go to state 89
    DPLUS   shift, and go to state 61
    DMINUS  shift, and go to state 62

    ID        reduce using rule 17 (VarType)
    ASSIGNOP  reduce using rule 76 (Lvalue)
    MINUS     reduce using rule 17 (VarType)
    MINUS     [reduce using rule 79 (Constant)]
    DOT       [reduce using rule 79 (Constant)]
    NOT       reduce using rule 17 (VarType)
    LP        [reduce using rule 17 (VarType)]
    DPLUS     [reduce using rule 17 (VarType)]
    DMINUS    [reduce using rule 17 (VarType)]
    INT       reduce using rule 17 (VarType)
    FLOAT     reduce using rule 17 (VarType)
    BOOL      reduce using rule 17 (VarType)
    NEW       reduce using rule 17 (VarType)
    THIS      reduce using rule 17 (VarType)
    $default  reduce using rule 79 (Constant)

    Arrays  go to state 29


State 97

   10 Fun: VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 123


State 98

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID
   88 CallArg: Exp .
   89        | Exp . COMMA CallArg

    COMMA  shift, and go to state 124
    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    LB     shift, and go to state 82

    $default  reduce using rule 88 (CallArg)


State 99

   83 Call: ID LP CallArgs . RP

    RP  shift, and go to state 125


State 100

   87 CallArgs: CallArg .

    $default  reduce using rule 87 (CallArgs)


State 101

   48 Args: EMPTY .
   86 CallArgs: EMPTY .

    RP        reduce using rule 48 (Args)
    RP        [reduce using rule 86 (CallArgs)]
    $default  reduce using rule 48 (Args)


State 102

   66 Exp: LP Exp RP .

    $default  reduce using rule 66 (Exp)


State 103

   75 Exp: NEW TYPE LB . Exp RB

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 126
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 104

   56 Exp: THIS DOT Constant .

    $default  reduce using rule 56 (Exp)


State 105

   57 Exp: THIS DOT Call .
   84 Call: Call . DOT ID
   85     | Call . DOT ID LP CallArgs RP

    $default  reduce using rule 57 (Exp)


State 106

   45 VarStm: Exp COMMA VarStm .

    $default  reduce using rule 45 (VarStm)


State 107

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   63    | Exp RELOP Exp .
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    DOT    shift, and go to state 81
    LB     shift, and go to state 82

    $default  reduce using rule 63 (Exp)


State 108

   58 Exp: Exp . PLUS Exp
   58    | Exp PLUS Exp .
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    STAR  shift, and go to state 77
    DIV   shift, and go to state 78
    DOT   shift, and go to state 81
    LB    shift, and go to state 82

    $default  reduce using rule 58 (Exp)


State 109

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   59    | Exp MINUS Exp .
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    STAR  shift, and go to state 77
    DIV   shift, and go to state 78
    DOT   shift, and go to state 81
    LB    shift, and go to state 82

    $default  reduce using rule 59 (Exp)


State 110

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   64    | Exp STAR Exp .
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    DOT  shift, and go to state 81
    LB   shift, and go to state 82

    $default  reduce using rule 64 (Exp)


State 111

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   65    | Exp DIV Exp .
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    DOT  shift, and go to state 81
    LB   shift, and go to state 82

    $default  reduce using rule 65 (Exp)


State 112

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   61    | Exp AND Exp .
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    DOT    shift, and go to state 81
    LB     shift, and go to state 82

    $default  reduce using rule 61 (Exp)


State 113

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   62    | Exp OR Exp .
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    DOT    shift, and go to state 81
    LB     shift, and go to state 82

    $default  reduce using rule 62 (Exp)


State 114

   78 Lvalue: Exp DOT ID .

    $default  reduce using rule 78 (Lvalue)


State 115

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   69    | Exp LB Exp . RB
   77 Lvalue: Exp . LB Exp RB
   77       | Exp LB Exp . RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    LB     shift, and go to state 82
    RB     shift, and go to state 127


State 116

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   60    | Lvalue ASSIGNOP Exp .
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    LB     shift, and go to state 82

    $default  reduce using rule 60 (Exp)


State 117

   84 Call: Call DOT ID .
   85     | Call DOT ID . LP CallArgs RP

    LP  shift, and go to state 128

    $default  reduce using rule 84 (Call)


State 118

   43 DeclareStm: STATIC FINAL VarType VarStm SEMI .

    $default  reduce using rule 43 (DeclareStm)


State 119

   11 Fun: STATIC VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 129


State 120

   86 CallArgs: EMPTY .

    $default  reduce using rule 86 (CallArgs)


State 121

   51 Arg: VarType ID COMMA . Arg

    TYPE  shift, and go to state 13
    ID    shift, and go to state 23

    VarType  go to state 55
    Arg      go to state 130


State 122

   12 Fun: ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    VarType     go to state 137
    BaseStm     go to state 138
    Lines       go to state 139
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 123

   10 Fun: VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 149


State 124

   89 CallArg: Exp COMMA . CallArg

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 98
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArg   go to state 150


State 125

   83 Call: ID LP CallArgs RP .

    $default  reduce using rule 83 (Call)


State 126

   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   75    | NEW TYPE LB Exp . RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    LB     shift, and go to state 82
    RB     shift, and go to state 151


State 127

   69 Exp: Exp LB Exp RB .
   77 Lvalue: Exp LB Exp RB .

    ASSIGNOP  reduce using rule 77 (Lvalue)
    $default  reduce using rule 69 (Exp)


State 128

   85 Call: Call DOT ID LP . CallArgs RP

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 90 (EMPTY)

    Exp       go to state 98
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47
    CallArgs  go to state 152
    CallArg   go to state 100
    EMPTY     go to state 120


State 129

   11 Fun: STATIC VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 153


State 130

   51 Arg: VarType ID COMMA Arg .

    $default  reduce using rule 51 (Arg)


State 131

   41 DeclareStm: STATIC . VarType VarStm SEMI
   43           | STATIC . FINAL VarType VarStm SEMI

    FINAL  shift, and go to state 22
    TYPE   shift, and go to state 13
    ID     shift, and go to state 23

    VarType  go to state 154


State 132

   31 BreakStm: BREAK . SEMI

    SEMI  shift, and go to state 155


State 133

   46 ReturnStm: RETURN . SEMI
   47          | RETURN . Exp SEMI

    ID      shift, and go to state 52
    SEMI    shift, and go to state 156
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 157
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 134

   32 IfStm: IF . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 158


State 135

   39 ForStm: FOR . LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC

    LP  shift, and go to state 159


State 136

   38 WhileStm: WHILE . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 160


State 137

   40 DeclareStm: VarType . VarStm SEMI

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 43
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 138

   12 Fun: ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 161


State 139

   20 BaseStm: Lines .

    $default  reduce using rule 20 (BaseStm)


State 140

   21 Lines: Line .
   22      | Line . Lines

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    RC        reduce using rule 21 (Lines)
    RC        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 21 (Lines)

    VarType     go to state 137
    Lines       go to state 162
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 141

   29 Line: BreakStm .

    $default  reduce using rule 29 (Line)


State 142

   24 Line: IfStm .
   33 IfStm: IfStm . ELIfStm ElseStm

    ELIF  shift, and go to state 163

    STATIC    reduce using rule 24 (Line)
    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     reduce using rule 24 (Line)
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     reduce using rule 24 (Line)
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      reduce using rule 24 (Line)
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    reduce using rule 24 (Line)
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        reduce using rule 24 (Line)
    IF        [reduce using rule 90 (EMPTY)]
    ELSE      reduce using rule 90 (EMPTY)
    ELIF      [reduce using rule 90 (EMPTY)]
    FOR       reduce using rule 24 (Line)
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     reduce using rule 24 (Line)
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        reduce using rule 24 (Line)
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     reduce using rule 24 (Line)
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       reduce using rule 24 (Line)
    NOT       [reduce using rule 90 (EMPTY)]
    LP        reduce using rule 24 (Line)
    LP        [reduce using rule 90 (EMPTY)]
    RC        reduce using rule 24 (Line)
    RC        [reduce using rule 90 (EMPTY)]
    DPLUS     reduce using rule 24 (Line)
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    reduce using rule 24 (Line)
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       reduce using rule 24 (Line)
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     reduce using rule 24 (Line)
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      reduce using rule 24 (Line)
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       reduce using rule 24 (Line)
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      reduce using rule 24 (Line)
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 24 (Line)

    ELIfStm  go to state 164
    EMPTY    go to state 165


State 143

   25 Line: WhileStm .

    $default  reduce using rule 25 (Line)


State 144

   30 Line: ForStm .

    $default  reduce using rule 30 (Line)


State 145

   27 Line: DeclareStm .

    $default  reduce using rule 27 (Line)


State 146

   26 Line: VarStm . SEMI

    SEMI  shift, and go to state 166


State 147

   28 Line: ReturnStm .

    $default  reduce using rule 28 (Line)


State 148

   23 Line: EMPTY .

    $default  reduce using rule 23 (Line)


State 149

   10 Fun: VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    VarType     go to state 137
    BaseStm     go to state 167
    Lines       go to state 139
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 150

   89 CallArg: Exp COMMA CallArg .

    $default  reduce using rule 89 (CallArg)


State 151

   75 Exp: NEW TYPE LB Exp RB .

    $default  reduce using rule 75 (Exp)


State 152

   85 Call: Call DOT ID LP CallArgs . RP

    RP  shift, and go to state 168


State 153

   11 Fun: STATIC VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    VarType     go to state 137
    BaseStm     go to state 169
    Lines       go to state 139
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 154

   41 DeclareStm: STATIC VarType . VarStm SEMI

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 51
    Exp       go to state 44
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 155

   31 BreakStm: BREAK SEMI .

    $default  reduce using rule 31 (BreakStm)


State 156

   46 ReturnStm: RETURN SEMI .

    $default  reduce using rule 46 (ReturnStm)


State 157

   47 ReturnStm: RETURN Exp . SEMI
   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    SEMI   shift, and go to state 170
    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    LB     shift, and go to state 82


State 158

   32 IfStm: IF LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 171
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 159

   39 ForStm: FOR LP . Exp SEMI Exp SEMI Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 172
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 160

   38 WhileStm: WHILE LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 173
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 161

   12 Fun: ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 12 (Fun)


State 162

   22 Lines: Line Lines .

    $default  reduce using rule 22 (Lines)


State 163

   34 ELIfStm: ELIF . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 174


State 164

   33 IfStm: IfStm ELIfStm . ElseStm

    ELSE  shift, and go to state 175

    ELSE      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    ElseStm  go to state 176
    EMPTY    go to state 177


State 165

   35 ELIfStm: EMPTY .

    $default  reduce using rule 35 (ELIfStm)


State 166

   26 Line: VarStm SEMI .

    $default  reduce using rule 26 (Line)


State 167

   10 Fun: VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 178


State 168

   85 Call: Call DOT ID LP CallArgs RP .

    $default  reduce using rule 85 (Call)


State 169

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 179


State 170

   47 ReturnStm: RETURN Exp SEMI .

    $default  reduce using rule 47 (ReturnStm)


State 171

   32 IfStm: IF LP Exp . RP LC BaseStm RC
   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    RP     shift, and go to state 180
    LB     shift, and go to state 82


State 172

   39 ForStm: FOR LP Exp . SEMI Exp SEMI Exp RP LC BaseStm RC
   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    SEMI   shift, and go to state 181
    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    LB     shift, and go to state 82


State 173

   38 WhileStm: WHILE LP Exp . RP LC BaseStm RC
   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    RP     shift, and go to state 182
    LB     shift, and go to state 82


State 174

   34 ELIfStm: ELIF LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 183
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 175

   36 ElseStm: ELSE . LC BaseStm RC

    LC  shift, and go to state 184


State 176

   33 IfStm: IfStm ELIfStm ElseStm .

    $default  reduce using rule 33 (IfStm)


State 177

   37 ElseStm: EMPTY .

    $default  reduce using rule 37 (ElseStm)


State 178

   10 Fun: VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 10 (Fun)


State 179

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 11 (Fun)


State 180

   32 IfStm: IF LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 185


State 181

   39 ForStm: FOR LP Exp SEMI . Exp SEMI Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 186
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 182

   38 WhileStm: WHILE LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 187


State 183

   34 ELIfStm: ELIF LP Exp . RP LC BaseStm RC
   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    RP     shift, and go to state 188
    LB     shift, and go to state 82


State 184

   36 ElseStm: ELSE LC . BaseStm RC

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    VarType     go to state 137
    BaseStm     go to state 189
    Lines       go to state 139
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 185

   32 IfStm: IF LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    VarType     go to state 137
    BaseStm     go to state 190
    Lines       go to state 139
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 186

   39 ForStm: FOR LP Exp SEMI Exp . SEMI Exp RP LC BaseStm RC
   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    SEMI   shift, and go to state 191
    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    LB     shift, and go to state 82


State 187

   38 WhileStm: WHILE LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    VarType     go to state 137
    BaseStm     go to state 192
    Lines       go to state 139
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 188

   34 ELIfStm: ELIF LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 193


State 189

   36 ElseStm: ELSE LC BaseStm . RC

    RC  shift, and go to state 194


State 190

   32 IfStm: IF LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 195


State 191

   39 ForStm: FOR LP Exp SEMI Exp SEMI . Exp RP LC BaseStm RC

    ID      shift, and go to state 52
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    Exp       go to state 196
    Lvalue    go to state 45
    Constant  go to state 46
    Call      go to state 47


State 192

   38 WhileStm: WHILE LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 197


State 193

   34 ELIfStm: ELIF LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    VarType     go to state 137
    BaseStm     go to state 198
    Lines       go to state 139
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 194

   36 ElseStm: ELSE LC BaseStm RC .

    $default  reduce using rule 36 (ElseStm)


State 195

   32 IfStm: IF LP Exp RP LC BaseStm RC .

    $default  reduce using rule 32 (IfStm)


State 196

   39 ForStm: FOR LP Exp SEMI Exp SEMI Exp . RP LC BaseStm RC
   58 Exp: Exp . PLUS Exp
   59    | Exp . MINUS Exp
   61    | Exp . AND Exp
   62    | Exp . OR Exp
   63    | Exp . RELOP Exp
   64    | Exp . STAR Exp
   65    | Exp . DIV Exp
   69    | Exp . LB Exp RB
   77 Lvalue: Exp . LB Exp RB
   78       | Exp . DOT ID

    RELOP  shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    STAR   shift, and go to state 77
    DIV    shift, and go to state 78
    AND    shift, and go to state 79
    OR     shift, and go to state 80
    DOT    shift, and go to state 81
    RP     shift, and go to state 199
    LB     shift, and go to state 82


State 197

   38 WhileStm: WHILE LP Exp RP LC BaseStm RC .

    $default  reduce using rule 38 (WhileStm)


State 198

   34 ELIfStm: ELIF LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 200


State 199

   39 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP . LC BaseStm RC

    LC  shift, and go to state 201


State 200

   34 ELIfStm: ELIF LP Exp RP LC BaseStm RC .

    $default  reduce using rule 34 (ELIfStm)


State 201

   39 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 131
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 132
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 133
    IF      shift, and go to state 134
    FOR     shift, and go to state 135
    WHILE   shift, and go to state 136
    ID      shift, and go to state 96
    MINUS   shift, and go to state 33
    NOT     shift, and go to state 34
    LP      shift, and go to state 35
    DPLUS   shift, and go to state 36
    DMINUS  shift, and go to state 37
    INT     shift, and go to state 38
    FLOAT   shift, and go to state 39
    BOOL    shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 90 (EMPTY)]
    FINAL     [reduce using rule 90 (EMPTY)]
    BREAK     [reduce using rule 90 (EMPTY)]
    TYPE      [reduce using rule 90 (EMPTY)]
    RETURN    [reduce using rule 90 (EMPTY)]
    IF        [reduce using rule 90 (EMPTY)]
    FOR       [reduce using rule 90 (EMPTY)]
    WHILE     [reduce using rule 90 (EMPTY)]
    ID        [reduce using rule 90 (EMPTY)]
    MINUS     [reduce using rule 90 (EMPTY)]
    NOT       [reduce using rule 90 (EMPTY)]
    LP        [reduce using rule 90 (EMPTY)]
    DPLUS     [reduce using rule 90 (EMPTY)]
    DMINUS    [reduce using rule 90 (EMPTY)]
    INT       [reduce using rule 90 (EMPTY)]
    FLOAT     [reduce using rule 90 (EMPTY)]
    BOOL      [reduce using rule 90 (EMPTY)]
    NEW       [reduce using rule 90 (EMPTY)]
    THIS      [reduce using rule 90 (EMPTY)]
    $default  reduce using rule 90 (EMPTY)

    VarType     go to state 137
    BaseStm     go to state 202
    Lines       go to state 139
    Line        go to state 140
    BreakStm    go to state 141
    IfStm       go to state 142
    WhileStm    go to state 143
    ForStm      go to state 144
    DeclareStm  go to state 145
    VarStm      go to state 146
    ReturnStm   go to state 147
    Exp         go to state 44
    Lvalue      go to state 45
    Constant    go to state 46
    Call        go to state 47
    EMPTY       go to state 148


State 202

   39 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm . RC

    RC  shift, and go to state 203


State 203

   39 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC .

    $default  reduce using rule 39 (ForStm)
