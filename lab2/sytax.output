Terminals unused in grammar

   STRUCT
   SPACE
   AERROR
   NULLPTR
   EOL


State 14 conflicts: 1 shift/reduce
State 95 conflicts: 3 shift/reduce, 1 reduce/reduce
State 100 conflicts: 1 reduce/reduce
State 119 conflicts: 20 shift/reduce
State 135 conflicts: 20 shift/reduce, 1 reduce/reduce
State 137 conflicts: 1 shift/reduce, 21 reduce/reduce
State 144 conflicts: 20 shift/reduce
State 147 conflicts: 20 shift/reduce
State 158 conflicts: 1 shift/reduce
State 178 conflicts: 20 shift/reduce
State 179 conflicts: 20 shift/reduce
State 181 conflicts: 20 shift/reduce
State 187 conflicts: 20 shift/reduce
State 195 conflicts: 20 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ClassDefs

    2 ClassDefs: Class
    3          | Class ClassDefs

    4 Class: CLASS ID LC ClassStms RC
    5      | CLASS ID EXTENDS ID LC ClassStms RC

    6 ClassStms: ClassStm ClassStms
    7          | ClassStm

    8 ClassStm: Fun
    9         | DeclareStm

   10 Fun: VarType ID LP Args RP LC BaseStm RC
   11    | STATIC VarType ID LP Args RP LC BaseStm RC
   12    | ID LP Args RP LC BaseStm RC

   13 VarType: TYPE Arrays
   14        | ID Arrays
   15        | TYPE
   16        | ID

   17 Arrays: ARRAY
   18       | ARRAY Arrays

   19 BaseStm: Lines

   20 Lines: Line
   21      | Line Lines

   22 Line: EMPTY
   23     | IfStm
   24     | WhileStm
   25     | VarStm SEMI
   26     | DeclareStm
   27     | ReturnStm
   28     | BreakStm
   29     | ForStm

   30 BreakStm: BREAK SEMI

   31 IfStm: IF LP BoolExp RP LC BaseStm RC
   32      | IfStm ELIfStm ElseStm

   33 ELIfStm: ELIF LP Exp RP LC BaseStm RC
   34        | EMPTY

   35 ElseStm: ELSE LC BaseStm RC
   36        | EMPTY

   37 WhileStm: WHILE LP BoolExp RP LC BaseStm RC

   38 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP LC BaseStm RC

   39 DeclareStm: VarType VarStm SEMI
   40           | STATIC VarType VarStm SEMI
   41           | FINAL VarType VarStm SEMI
   42           | STATIC FINAL VarType VarStm SEMI

   43 VarStm: Exp
   44       | Exp COMMA VarStm

   45 ReturnStm: RETURN SEMI
   46          | RETURN Exp SEMI

   47 Args: EMPTY
   48     | Arg

   49 Arg: VarType ID
   50    | VarType ID COMMA Arg

   51 BoolExp: Exp RELOP Exp
   52        | Exp AND Exp
   53        | Exp OR Exp

   54 Exp: Constant
   55    | Call
   56    | ID DOT Call
   57    | ID DOT ID
   58    | ID
   59    | THIS DOT ID
   60    | THIS DOT Call
   61    | Lvalue ASSIGNOP Exp
   62    | Exp PLUS Exp
   63    | Exp MINUS Exp
   64    | BoolExp
   65    | Exp STAR Exp
   66    | Exp DIV Exp
   67    | LP Exp RP
   68    | MINUS Exp
   69    | NOT Exp
   70    | ID ArrayIndex
   71    | DPLUS ID
   72    | ID DPLUS
   73    | DMINUS ID
   74    | ID DMINUS
   75    | NEW Call
   76    | NEW TYPE ArrayIndex

   77 ArrayIndex: LB Exp RB
   78           | LB Exp RB ArrayIndex

   79 Lvalue: ID

   80 Constant: INT
   81         | FLOAT
   82         | BOOL
   83         | STR

   84 Call: ID LP CallArgs RP

   85 CallArgs: EMPTY
   86         | CallArg

   87 CallArg: Exp
   88        | Exp COMMA CallArg

   89 EMPTY: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
STATIC (258) 11 40 42
ARRAY (259) 17 18
FINAL (260) 41 42
BREAK (261) 30
TYPE (262) 13 15 76
STRUCT (263)
EXTENDS (264) 5
CLASS (265) 4 5
RETURN (266) 45 46
IF (267) 31
ELSE (268) 35
ELIF (269) 33
FOR (270) 38
WHILE (271) 37
ID (272) 4 5 10 11 12 14 16 49 50 56 57 58 59 70 71 72 73 74 79 84
SPACE (273)
SEMI (274) 25 30 38 39 40 41 42 45 46
COMMA (275) 44 50 88
ASSIGNOP (276) 61
RELOP (277) 51
DOT (278) 56 57 59 60
NOT (279) 69
LP (280) 10 11 12 31 33 37 38 67 84
RP (281) 10 11 12 31 33 37 38 67 84
LB (282) 77 78
RB (283) 77 78
LC (284) 4 5 10 11 12 31 33 35 37 38
RC (285) 4 5 10 11 12 31 33 35 37 38
AERROR (286)
DPLUS (287) 71 72
DMINUS (288) 73 74
INT (289) 80
FLOAT (290) 81
NULLPTR (291)
STR (292) 83
BOOL (293) 82
PLUS (294) 62
MINUS (295) 63 68
STAR (296) 65
DIV (297) 66
OR (298) 53
AND (299) 52
EOL (300)
NEW (301) 75 76
THIS (302) 59 60


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
ClassDefs (50)
    on left: 2 3, on right: 1 3
Class (51)
    on left: 4 5, on right: 2 3
ClassStms (52)
    on left: 6 7, on right: 4 5 6
ClassStm (53)
    on left: 8 9, on right: 6 7
Fun (54)
    on left: 10 11 12, on right: 8
VarType (55)
    on left: 13 14 15 16, on right: 10 11 39 40 41 42 49 50
Arrays (56)
    on left: 17 18, on right: 13 14 18
BaseStm (57)
    on left: 19, on right: 10 11 12 31 33 35 37 38
Lines (58)
    on left: 20 21, on right: 19 21
Line (59)
    on left: 22 23 24 25 26 27 28 29, on right: 20 21
BreakStm (60)
    on left: 30, on right: 28
IfStm (61)
    on left: 31 32, on right: 23 32
ELIfStm (62)
    on left: 33 34, on right: 32
ElseStm (63)
    on left: 35 36, on right: 32
WhileStm (64)
    on left: 37, on right: 24
ForStm (65)
    on left: 38, on right: 29
DeclareStm (66)
    on left: 39 40 41 42, on right: 9 26
VarStm (67)
    on left: 43 44, on right: 25 39 40 41 42 44
ReturnStm (68)
    on left: 45 46, on right: 27
Args (69)
    on left: 47 48, on right: 10 11 12
Arg (70)
    on left: 49 50, on right: 48 50
BoolExp (71)
    on left: 51 52 53, on right: 31 37 38 64
Exp (72)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71
    72 73 74 75 76, on right: 33 38 43 44 46 51 52 53 61 62 63 65 66
    67 68 69 77 78 87 88
ArrayIndex (73)
    on left: 77 78, on right: 70 76 78
Lvalue (74)
    on left: 79, on right: 61
Constant (75)
    on left: 80 81 82 83, on right: 54
Call (76)
    on left: 84, on right: 55 56 60 75
CallArgs (77)
    on left: 85 86, on right: 84
CallArg (78)
    on left: 87 88, on right: 86 88
EMPTY (79)
    on left: 89, on right: 22 34 36 47 85


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    ClassDefs  go to state 3
    Class      go to state 4


State 1

    4 Class: CLASS . ID LC ClassStms RC
    5      | CLASS . ID EXTENDS ID LC ClassStms RC

    ID  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: ClassDefs .

    $default  reduce using rule 1 (Program)


State 4

    2 ClassDefs: Class .
    3          | Class . ClassDefs

    CLASS  shift, and go to state 1

    $default  reduce using rule 2 (ClassDefs)

    ClassDefs  go to state 7
    Class      go to state 4


State 5

    4 Class: CLASS ID . LC ClassStms RC
    5      | CLASS ID . EXTENDS ID LC ClassStms RC

    EXTENDS  shift, and go to state 8
    LC       shift, and go to state 9


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 ClassDefs: Class ClassDefs .

    $default  reduce using rule 3 (ClassDefs)


State 8

    5 Class: CLASS ID EXTENDS . ID LC ClassStms RC

    ID  shift, and go to state 10


State 9

    4 Class: CLASS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    ClassStms   go to state 15
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19


State 10

    5 Class: CLASS ID EXTENDS ID . LC ClassStms RC

    LC  shift, and go to state 20


State 11

   11 Fun: STATIC . VarType ID LP Args RP LC BaseStm RC
   40 DeclareStm: STATIC . VarType VarStm SEMI
   42           | STATIC . FINAL VarType VarStm SEMI

    FINAL  shift, and go to state 21
    TYPE   shift, and go to state 13
    ID     shift, and go to state 22

    VarType  go to state 23


State 12

   41 DeclareStm: FINAL . VarType VarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  go to state 24


State 13

   13 VarType: TYPE . Arrays
   15        | TYPE .

    ARRAY  shift, and go to state 25

    $default  reduce using rule 15 (VarType)

    Arrays  go to state 26


State 14

   12 Fun: ID . LP Args RP LC BaseStm RC
   14 VarType: ID . Arrays
   16        | ID .

    ARRAY  shift, and go to state 25
    LP     shift, and go to state 27

    LP        [reduce using rule 16 (VarType)]
    $default  reduce using rule 16 (VarType)

    Arrays  go to state 28


State 15

    4 Class: CLASS ID LC ClassStms . RC

    RC  shift, and go to state 29


State 16

    6 ClassStms: ClassStm . ClassStms
    7          | ClassStm .

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    $default  reduce using rule 7 (ClassStms)

    ClassStms   go to state 30
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19


State 17

    8 ClassStm: Fun .

    $default  reduce using rule 8 (ClassStm)


State 18

   10 Fun: VarType . ID LP Args RP LC BaseStm RC
   39 DeclareStm: VarType . VarStm SEMI

    ID      shift, and go to state 31
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 43
    BoolExp   go to state 44
    Exp       go to state 45
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 19

    9 ClassStm: DeclareStm .

    $default  reduce using rule 9 (ClassStm)


State 20

    5 Class: CLASS ID EXTENDS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    ClassStms   go to state 49
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19


State 21

   42 DeclareStm: STATIC FINAL . VarType VarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  go to state 50


State 22

   14 VarType: ID . Arrays
   16        | ID .

    ARRAY  shift, and go to state 25

    $default  reduce using rule 16 (VarType)

    Arrays  go to state 28


State 23

   11 Fun: STATIC VarType . ID LP Args RP LC BaseStm RC
   40 DeclareStm: STATIC VarType . VarStm SEMI

    ID      shift, and go to state 51
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 52
    BoolExp   go to state 44
    Exp       go to state 45
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 24

   41 DeclareStm: FINAL VarType . VarStm SEMI

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 54
    BoolExp   go to state 44
    Exp       go to state 45
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 25

   17 Arrays: ARRAY .
   18       | ARRAY . Arrays

    ARRAY  shift, and go to state 25

    $default  reduce using rule 17 (Arrays)

    Arrays  go to state 55


State 26

   13 VarType: TYPE Arrays .

    $default  reduce using rule 13 (VarType)


State 27

   12 Fun: ID LP . Args RP LC BaseStm RC

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    $default  reduce using rule 89 (EMPTY)

    VarType  go to state 56
    Args     go to state 57
    Arg      go to state 58
    EMPTY    go to state 59


State 28

   14 VarType: ID Arrays .

    $default  reduce using rule 14 (VarType)


State 29

    4 Class: CLASS ID LC ClassStms RC .

    $default  reduce using rule 4 (Class)


State 30

    6 ClassStms: ClassStm ClassStms .

    $default  reduce using rule 6 (ClassStms)


State 31

   10 Fun: VarType ID . LP Args RP LC BaseStm RC
   56 Exp: ID . DOT Call
   57    | ID . DOT ID
   58    | ID .
   70    | ID . ArrayIndex
   72    | ID . DPLUS
   74    | ID . DMINUS
   79 Lvalue: ID .
   84 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 60
    LP      shift, and go to state 61
    LB      shift, and go to state 62
    DPLUS   shift, and go to state 63
    DMINUS  shift, and go to state 64

    ASSIGNOP  reduce using rule 79 (Lvalue)
    $default  reduce using rule 58 (Exp)

    ArrayIndex  go to state 65


State 32

   69 Exp: NOT . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 66
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 33

   67 Exp: LP . Exp RP

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 67
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 34

   71 Exp: DPLUS . ID

    ID  shift, and go to state 68


State 35

   73 Exp: DMINUS . ID

    ID  shift, and go to state 69


State 36

   80 Constant: INT .

    $default  reduce using rule 80 (Constant)


State 37

   81 Constant: FLOAT .

    $default  reduce using rule 81 (Constant)


State 38

   83 Constant: STR .

    $default  reduce using rule 83 (Constant)


State 39

   82 Constant: BOOL .

    $default  reduce using rule 82 (Constant)


State 40

   68 Exp: MINUS . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 70
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 41

   75 Exp: NEW . Call
   76    | NEW . TYPE ArrayIndex

    TYPE  shift, and go to state 71
    ID    shift, and go to state 72

    Call  go to state 73


State 42

   59 Exp: THIS . DOT ID
   60    | THIS . DOT Call

    DOT  shift, and go to state 74


State 43

   39 DeclareStm: VarType VarStm . SEMI

    SEMI  shift, and go to state 75


State 44

   64 Exp: BoolExp .

    $default  reduce using rule 64 (Exp)


State 45

   43 VarStm: Exp .
   44       | Exp . COMMA VarStm
   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    COMMA  shift, and go to state 76
    RELOP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83

    $default  reduce using rule 43 (VarStm)


State 46

   61 Exp: Lvalue . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 84


State 47

   54 Exp: Constant .

    $default  reduce using rule 54 (Exp)


State 48

   55 Exp: Call .

    $default  reduce using rule 55 (Exp)


State 49

    5 Class: CLASS ID EXTENDS ID LC ClassStms . RC

    RC  shift, and go to state 85


State 50

   42 DeclareStm: STATIC FINAL VarType . VarStm SEMI

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 86
    BoolExp   go to state 44
    Exp       go to state 45
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 51

   11 Fun: STATIC VarType ID . LP Args RP LC BaseStm RC
   56 Exp: ID . DOT Call
   57    | ID . DOT ID
   58    | ID .
   70    | ID . ArrayIndex
   72    | ID . DPLUS
   74    | ID . DMINUS
   79 Lvalue: ID .
   84 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 60
    LP      shift, and go to state 87
    LB      shift, and go to state 62
    DPLUS   shift, and go to state 63
    DMINUS  shift, and go to state 64

    ASSIGNOP  reduce using rule 79 (Lvalue)
    $default  reduce using rule 58 (Exp)

    ArrayIndex  go to state 65


State 52

   40 DeclareStm: STATIC VarType VarStm . SEMI

    SEMI  shift, and go to state 88


State 53

   56 Exp: ID . DOT Call
   57    | ID . DOT ID
   58    | ID .
   70    | ID . ArrayIndex
   72    | ID . DPLUS
   74    | ID . DMINUS
   79 Lvalue: ID .
   84 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 60
    LP      shift, and go to state 89
    LB      shift, and go to state 62
    DPLUS   shift, and go to state 63
    DMINUS  shift, and go to state 64

    ASSIGNOP  reduce using rule 79 (Lvalue)
    $default  reduce using rule 58 (Exp)

    ArrayIndex  go to state 65


State 54

   41 DeclareStm: FINAL VarType VarStm . SEMI

    SEMI  shift, and go to state 90


State 55

   18 Arrays: ARRAY Arrays .

    $default  reduce using rule 18 (Arrays)


State 56

   49 Arg: VarType . ID
   50    | VarType . ID COMMA Arg

    ID  shift, and go to state 91


State 57

   12 Fun: ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 92


State 58

   48 Args: Arg .

    $default  reduce using rule 48 (Args)


State 59

   47 Args: EMPTY .

    $default  reduce using rule 47 (Args)


State 60

   56 Exp: ID DOT . Call
   57    | ID DOT . ID

    ID  shift, and go to state 93

    Call  go to state 94


State 61

   10 Fun: VarType ID LP . Args RP LC BaseStm RC
   84 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 13
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 89 (EMPTY)

    VarType   go to state 56
    Args      go to state 96
    Arg       go to state 58
    BoolExp   go to state 44
    Exp       go to state 97
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48
    CallArgs  go to state 98
    CallArg   go to state 99
    EMPTY     go to state 100


State 62

   77 ArrayIndex: LB . Exp RB
   78           | LB . Exp RB ArrayIndex

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 101
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 63

   72 Exp: ID DPLUS .

    $default  reduce using rule 72 (Exp)


State 64

   74 Exp: ID DMINUS .

    $default  reduce using rule 74 (Exp)


State 65

   70 Exp: ID ArrayIndex .

    $default  reduce using rule 70 (Exp)


State 66

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   69    | NOT Exp .

    $default  reduce using rule 69 (Exp)


State 67

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   67    | LP Exp . RP

    RELOP  shift, and go to state 77
    RP     shift, and go to state 102
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83


State 68

   71 Exp: DPLUS ID .

    $default  reduce using rule 71 (Exp)


State 69

   73 Exp: DMINUS ID .

    $default  reduce using rule 73 (Exp)


State 70

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   68    | MINUS Exp .

    STAR  shift, and go to state 80
    DIV   shift, and go to state 81

    $default  reduce using rule 68 (Exp)


State 71

   76 Exp: NEW TYPE . ArrayIndex

    LB  shift, and go to state 62

    ArrayIndex  go to state 103


State 72

   84 Call: ID . LP CallArgs RP

    LP  shift, and go to state 89


State 73

   75 Exp: NEW Call .

    $default  reduce using rule 75 (Exp)


State 74

   59 Exp: THIS DOT . ID
   60    | THIS DOT . Call

    ID  shift, and go to state 104

    Call  go to state 105


State 75

   39 DeclareStm: VarType VarStm SEMI .

    $default  reduce using rule 39 (DeclareStm)


State 76

   44 VarStm: Exp COMMA . VarStm

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 106
    BoolExp   go to state 44
    Exp       go to state 45
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 77

   51 BoolExp: Exp RELOP . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 107
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 78

   62 Exp: Exp PLUS . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 108
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 79

   63 Exp: Exp MINUS . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 109
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 80

   65 Exp: Exp STAR . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 110
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 81

   66 Exp: Exp DIV . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 111
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 82

   53 BoolExp: Exp OR . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 112
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 83

   52 BoolExp: Exp AND . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 113
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 84

   61 Exp: Lvalue ASSIGNOP . Exp

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 114
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 85

    5 Class: CLASS ID EXTENDS ID LC ClassStms RC .

    $default  reduce using rule 5 (Class)


State 86

   42 DeclareStm: STATIC FINAL VarType VarStm . SEMI

    SEMI  shift, and go to state 115


State 87

   11 Fun: STATIC VarType ID LP . Args RP LC BaseStm RC
   84 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 13
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 89 (EMPTY)

    VarType   go to state 56
    Args      go to state 116
    Arg       go to state 58
    BoolExp   go to state 44
    Exp       go to state 97
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48
    CallArgs  go to state 98
    CallArg   go to state 99
    EMPTY     go to state 100


State 88

   40 DeclareStm: STATIC VarType VarStm SEMI .

    $default  reduce using rule 40 (DeclareStm)


State 89

   84 Call: ID LP . CallArgs RP

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    $default  reduce using rule 89 (EMPTY)

    BoolExp   go to state 44
    Exp       go to state 97
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48
    CallArgs  go to state 98
    CallArg   go to state 99
    EMPTY     go to state 117


State 90

   41 DeclareStm: FINAL VarType VarStm SEMI .

    $default  reduce using rule 41 (DeclareStm)


State 91

   49 Arg: VarType ID .
   50    | VarType ID . COMMA Arg

    COMMA  shift, and go to state 118

    $default  reduce using rule 49 (Arg)


State 92

   12 Fun: ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 119


State 93

   57 Exp: ID DOT ID .
   84 Call: ID . LP CallArgs RP

    LP  shift, and go to state 89

    $default  reduce using rule 57 (Exp)


State 94

   56 Exp: ID DOT Call .

    $default  reduce using rule 56 (Exp)


State 95

   14 VarType: ID . Arrays
   16        | ID .
   56 Exp: ID . DOT Call
   57    | ID . DOT ID
   58    | ID .
   70    | ID . ArrayIndex
   72    | ID . DPLUS
   74    | ID . DMINUS
   79 Lvalue: ID .
   84 Call: ID . LP CallArgs RP

    ARRAY   shift, and go to state 25
    DOT     shift, and go to state 60
    LP      shift, and go to state 89
    LB      shift, and go to state 62
    DPLUS   shift, and go to state 63
    DMINUS  shift, and go to state 64

    SEMI      reduce using rule 58 (Exp)
    COMMA     reduce using rule 58 (Exp)
    ASSIGNOP  reduce using rule 79 (Lvalue)
    RELOP     reduce using rule 58 (Exp)
    LP        [reduce using rule 16 (VarType)]
    RP        reduce using rule 58 (Exp)
    DPLUS     [reduce using rule 16 (VarType)]
    DMINUS    [reduce using rule 16 (VarType)]
    PLUS      reduce using rule 58 (Exp)
    MINUS     reduce using rule 16 (VarType)
    MINUS     [reduce using rule 58 (Exp)]
    STAR      reduce using rule 58 (Exp)
    DIV       reduce using rule 58 (Exp)
    OR        reduce using rule 58 (Exp)
    AND       reduce using rule 58 (Exp)
    $default  reduce using rule 16 (VarType)

    Arrays      go to state 28
    ArrayIndex  go to state 65


State 96

   10 Fun: VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 120


State 97

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   87 CallArg: Exp .
   88        | Exp . COMMA CallArg

    COMMA  shift, and go to state 121
    RELOP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83

    $default  reduce using rule 87 (CallArg)


State 98

   84 Call: ID LP CallArgs . RP

    RP  shift, and go to state 122


State 99

   86 CallArgs: CallArg .

    $default  reduce using rule 86 (CallArgs)


State 100

   47 Args: EMPTY .
   85 CallArgs: EMPTY .

    RP        reduce using rule 47 (Args)
    RP        [reduce using rule 85 (CallArgs)]
    $default  reduce using rule 47 (Args)


State 101

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   77 ArrayIndex: LB Exp . RB
   78           | LB Exp . RB ArrayIndex

    RELOP  shift, and go to state 77
    RB     shift, and go to state 123
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83


State 102

   67 Exp: LP Exp RP .

    $default  reduce using rule 67 (Exp)


State 103

   76 Exp: NEW TYPE ArrayIndex .

    $default  reduce using rule 76 (Exp)


State 104

   59 Exp: THIS DOT ID .
   84 Call: ID . LP CallArgs RP

    LP  shift, and go to state 89

    $default  reduce using rule 59 (Exp)


State 105

   60 Exp: THIS DOT Call .

    $default  reduce using rule 60 (Exp)


State 106

   44 VarStm: Exp COMMA VarStm .

    $default  reduce using rule 44 (VarStm)


State 107

   51 BoolExp: Exp . RELOP Exp
   51        | Exp RELOP Exp .
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81

    $default  reduce using rule 51 (BoolExp)


State 108

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   62    | Exp PLUS Exp .
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    STAR  shift, and go to state 80
    DIV   shift, and go to state 81

    $default  reduce using rule 62 (Exp)


State 109

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   63    | Exp MINUS Exp .
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    STAR  shift, and go to state 80
    DIV   shift, and go to state 81

    $default  reduce using rule 63 (Exp)


State 110

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   65    | Exp STAR Exp .
   66    | Exp . DIV Exp

    $default  reduce using rule 65 (Exp)


State 111

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp
   66    | Exp DIV Exp .

    $default  reduce using rule 66 (Exp)


State 112

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   53        | Exp OR Exp .
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    RELOP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    AND    shift, and go to state 83

    $default  reduce using rule 53 (BoolExp)


State 113

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   52        | Exp AND Exp .
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    RELOP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81

    $default  reduce using rule 52 (BoolExp)


State 114

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   61 Exp: Lvalue ASSIGNOP Exp .
   62    | Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    RELOP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83

    $default  reduce using rule 61 (Exp)


State 115

   42 DeclareStm: STATIC FINAL VarType VarStm SEMI .

    $default  reduce using rule 42 (DeclareStm)


State 116

   11 Fun: STATIC VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 124


State 117

   85 CallArgs: EMPTY .

    $default  reduce using rule 85 (CallArgs)


State 118

   50 Arg: VarType ID COMMA . Arg

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  go to state 56
    Arg      go to state 125


State 119

   12 Fun: ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    VarType     go to state 132
    BaseStm     go to state 133
    Lines       go to state 134
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 120

   10 Fun: VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 144


State 121

   88 CallArg: Exp COMMA . CallArg

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 97
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48
    CallArg   go to state 145


State 122

   84 Call: ID LP CallArgs RP .

    $default  reduce using rule 84 (Call)


State 123

   77 ArrayIndex: LB Exp RB .
   78           | LB Exp RB . ArrayIndex

    LB  shift, and go to state 62

    $default  reduce using rule 77 (ArrayIndex)

    ArrayIndex  go to state 146


State 124

   11 Fun: STATIC VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 147


State 125

   50 Arg: VarType ID COMMA Arg .

    $default  reduce using rule 50 (Arg)


State 126

   40 DeclareStm: STATIC . VarType VarStm SEMI
   42           | STATIC . FINAL VarType VarStm SEMI

    FINAL  shift, and go to state 21
    TYPE   shift, and go to state 13
    ID     shift, and go to state 22

    VarType  go to state 148


State 127

   30 BreakStm: BREAK . SEMI

    SEMI  shift, and go to state 149


State 128

   45 ReturnStm: RETURN . SEMI
   46          | RETURN . Exp SEMI

    ID      shift, and go to state 53
    SEMI    shift, and go to state 150
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 151
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 129

   31 IfStm: IF . LP BoolExp RP LC BaseStm RC

    LP  shift, and go to state 152


State 130

   38 ForStm: FOR . LP Exp SEMI BoolExp SEMI Exp RP LC BaseStm RC

    LP  shift, and go to state 153


State 131

   37 WhileStm: WHILE . LP BoolExp RP LC BaseStm RC

    LP  shift, and go to state 154


State 132

   39 DeclareStm: VarType . VarStm SEMI

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 43
    BoolExp   go to state 44
    Exp       go to state 45
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 133

   12 Fun: ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 155


State 134

   19 BaseStm: Lines .

    $default  reduce using rule 19 (BaseStm)


State 135

   20 Lines: Line .
   21      | Line . Lines

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    RC        reduce using rule 20 (Lines)
    RC        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 20 (Lines)

    VarType     go to state 132
    Lines       go to state 156
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 136

   28 Line: BreakStm .

    $default  reduce using rule 28 (Line)


State 137

   23 Line: IfStm .
   32 IfStm: IfStm . ELIfStm ElseStm

    ELIF  shift, and go to state 157

    STATIC    reduce using rule 23 (Line)
    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     reduce using rule 23 (Line)
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     reduce using rule 23 (Line)
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      reduce using rule 23 (Line)
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    reduce using rule 23 (Line)
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        reduce using rule 23 (Line)
    IF        [reduce using rule 89 (EMPTY)]
    ELSE      reduce using rule 89 (EMPTY)
    ELIF      [reduce using rule 89 (EMPTY)]
    FOR       reduce using rule 23 (Line)
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     reduce using rule 23 (Line)
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        reduce using rule 23 (Line)
    ID        [reduce using rule 89 (EMPTY)]
    NOT       reduce using rule 23 (Line)
    NOT       [reduce using rule 89 (EMPTY)]
    LP        reduce using rule 23 (Line)
    LP        [reduce using rule 89 (EMPTY)]
    RC        reduce using rule 23 (Line)
    RC        [reduce using rule 89 (EMPTY)]
    DPLUS     reduce using rule 23 (Line)
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    reduce using rule 23 (Line)
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       reduce using rule 23 (Line)
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     reduce using rule 23 (Line)
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       reduce using rule 23 (Line)
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      reduce using rule 23 (Line)
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     reduce using rule 23 (Line)
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       reduce using rule 23 (Line)
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      reduce using rule 23 (Line)
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 23 (Line)

    ELIfStm  go to state 158
    EMPTY    go to state 159


State 138

   24 Line: WhileStm .

    $default  reduce using rule 24 (Line)


State 139

   29 Line: ForStm .

    $default  reduce using rule 29 (Line)


State 140

   26 Line: DeclareStm .

    $default  reduce using rule 26 (Line)


State 141

   25 Line: VarStm . SEMI

    SEMI  shift, and go to state 160


State 142

   27 Line: ReturnStm .

    $default  reduce using rule 27 (Line)


State 143

   22 Line: EMPTY .

    $default  reduce using rule 22 (Line)


State 144

   10 Fun: VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    VarType     go to state 132
    BaseStm     go to state 161
    Lines       go to state 134
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 145

   88 CallArg: Exp COMMA CallArg .

    $default  reduce using rule 88 (CallArg)


State 146

   78 ArrayIndex: LB Exp RB ArrayIndex .

    $default  reduce using rule 78 (ArrayIndex)


State 147

   11 Fun: STATIC VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    VarType     go to state 132
    BaseStm     go to state 162
    Lines       go to state 134
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 148

   40 DeclareStm: STATIC VarType . VarStm SEMI

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    VarStm    go to state 52
    BoolExp   go to state 44
    Exp       go to state 45
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 149

   30 BreakStm: BREAK SEMI .

    $default  reduce using rule 30 (BreakStm)


State 150

   45 ReturnStm: RETURN SEMI .

    $default  reduce using rule 45 (ReturnStm)


State 151

   46 ReturnStm: RETURN Exp . SEMI
   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    SEMI   shift, and go to state 163
    RELOP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83


State 152

   31 IfStm: IF LP . BoolExp RP LC BaseStm RC

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 164
    Exp       go to state 165
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 153

   38 ForStm: FOR LP . Exp SEMI BoolExp SEMI Exp RP LC BaseStm RC

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 166
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 154

   37 WhileStm: WHILE LP . BoolExp RP LC BaseStm RC

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 167
    Exp       go to state 165
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 155

   12 Fun: ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 12 (Fun)


State 156

   21 Lines: Line Lines .

    $default  reduce using rule 21 (Lines)


State 157

   33 ELIfStm: ELIF . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 168


State 158

   32 IfStm: IfStm ELIfStm . ElseStm

    ELSE  shift, and go to state 169

    ELSE      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    ElseStm  go to state 170
    EMPTY    go to state 171


State 159

   34 ELIfStm: EMPTY .

    $default  reduce using rule 34 (ELIfStm)


State 160

   25 Line: VarStm SEMI .

    $default  reduce using rule 25 (Line)


State 161

   10 Fun: VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 172


State 162

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 173


State 163

   46 ReturnStm: RETURN Exp SEMI .

    $default  reduce using rule 46 (ReturnStm)


State 164

   31 IfStm: IF LP BoolExp . RP LC BaseStm RC
   64 Exp: BoolExp .

    RP  shift, and go to state 174

    $default  reduce using rule 64 (Exp)


State 165

   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    RELOP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83


State 166

   38 ForStm: FOR LP Exp . SEMI BoolExp SEMI Exp RP LC BaseStm RC
   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    SEMI   shift, and go to state 175
    RELOP  shift, and go to state 77
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83


State 167

   37 WhileStm: WHILE LP BoolExp . RP LC BaseStm RC
   64 Exp: BoolExp .

    RP  shift, and go to state 176

    $default  reduce using rule 64 (Exp)


State 168

   33 ELIfStm: ELIF LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 177
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 169

   35 ElseStm: ELSE . LC BaseStm RC

    LC  shift, and go to state 178


State 170

   32 IfStm: IfStm ELIfStm ElseStm .

    $default  reduce using rule 32 (IfStm)


State 171

   36 ElseStm: EMPTY .

    $default  reduce using rule 36 (ElseStm)


State 172

   10 Fun: VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 10 (Fun)


State 173

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 11 (Fun)


State 174

   31 IfStm: IF LP BoolExp RP . LC BaseStm RC

    LC  shift, and go to state 179


State 175

   38 ForStm: FOR LP Exp SEMI . BoolExp SEMI Exp RP LC BaseStm RC

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 180
    Exp       go to state 165
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 176

   37 WhileStm: WHILE LP BoolExp RP . LC BaseStm RC

    LC  shift, and go to state 181


State 177

   33 ELIfStm: ELIF LP Exp . RP LC BaseStm RC
   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    RELOP  shift, and go to state 77
    RP     shift, and go to state 182
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83


State 178

   35 ElseStm: ELSE LC . BaseStm RC

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    VarType     go to state 132
    BaseStm     go to state 183
    Lines       go to state 134
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 179

   31 IfStm: IF LP BoolExp RP LC . BaseStm RC

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    VarType     go to state 132
    BaseStm     go to state 184
    Lines       go to state 134
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 180

   38 ForStm: FOR LP Exp SEMI BoolExp . SEMI Exp RP LC BaseStm RC
   64 Exp: BoolExp .

    SEMI  shift, and go to state 185

    $default  reduce using rule 64 (Exp)


State 181

   37 WhileStm: WHILE LP BoolExp RP LC . BaseStm RC

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    VarType     go to state 132
    BaseStm     go to state 186
    Lines       go to state 134
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 182

   33 ELIfStm: ELIF LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 187


State 183

   35 ElseStm: ELSE LC BaseStm . RC

    RC  shift, and go to state 188


State 184

   31 IfStm: IF LP BoolExp RP LC BaseStm . RC

    RC  shift, and go to state 189


State 185

   38 ForStm: FOR LP Exp SEMI BoolExp SEMI . Exp RP LC BaseStm RC

    ID      shift, and go to state 53
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    BoolExp   go to state 44
    Exp       go to state 190
    Lvalue    go to state 46
    Constant  go to state 47
    Call      go to state 48


State 186

   37 WhileStm: WHILE LP BoolExp RP LC BaseStm . RC

    RC  shift, and go to state 191


State 187

   33 ELIfStm: ELIF LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    VarType     go to state 132
    BaseStm     go to state 192
    Lines       go to state 134
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 188

   35 ElseStm: ELSE LC BaseStm RC .

    $default  reduce using rule 35 (ElseStm)


State 189

   31 IfStm: IF LP BoolExp RP LC BaseStm RC .

    $default  reduce using rule 31 (IfStm)


State 190

   38 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp . RP LC BaseStm RC
   51 BoolExp: Exp . RELOP Exp
   52        | Exp . AND Exp
   53        | Exp . OR Exp
   62 Exp: Exp . PLUS Exp
   63    | Exp . MINUS Exp
   65    | Exp . STAR Exp
   66    | Exp . DIV Exp

    RELOP  shift, and go to state 77
    RP     shift, and go to state 193
    PLUS   shift, and go to state 78
    MINUS  shift, and go to state 79
    STAR   shift, and go to state 80
    DIV    shift, and go to state 81
    OR     shift, and go to state 82
    AND    shift, and go to state 83


State 191

   37 WhileStm: WHILE LP BoolExp RP LC BaseStm RC .

    $default  reduce using rule 37 (WhileStm)


State 192

   33 ELIfStm: ELIF LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 194


State 193

   38 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP . LC BaseStm RC

    LC  shift, and go to state 195


State 194

   33 ELIfStm: ELIF LP Exp RP LC BaseStm RC .

    $default  reduce using rule 33 (ELIfStm)


State 195

   38 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 126
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 127
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 128
    IF      shift, and go to state 129
    FOR     shift, and go to state 130
    WHILE   shift, and go to state 131
    ID      shift, and go to state 95
    NOT     shift, and go to state 32
    LP      shift, and go to state 33
    DPLUS   shift, and go to state 34
    DMINUS  shift, and go to state 35
    INT     shift, and go to state 36
    FLOAT   shift, and go to state 37
    STR     shift, and go to state 38
    BOOL    shift, and go to state 39
    MINUS   shift, and go to state 40
    NEW     shift, and go to state 41
    THIS    shift, and go to state 42

    STATIC    [reduce using rule 89 (EMPTY)]
    FINAL     [reduce using rule 89 (EMPTY)]
    BREAK     [reduce using rule 89 (EMPTY)]
    TYPE      [reduce using rule 89 (EMPTY)]
    RETURN    [reduce using rule 89 (EMPTY)]
    IF        [reduce using rule 89 (EMPTY)]
    FOR       [reduce using rule 89 (EMPTY)]
    WHILE     [reduce using rule 89 (EMPTY)]
    ID        [reduce using rule 89 (EMPTY)]
    NOT       [reduce using rule 89 (EMPTY)]
    LP        [reduce using rule 89 (EMPTY)]
    DPLUS     [reduce using rule 89 (EMPTY)]
    DMINUS    [reduce using rule 89 (EMPTY)]
    INT       [reduce using rule 89 (EMPTY)]
    FLOAT     [reduce using rule 89 (EMPTY)]
    STR       [reduce using rule 89 (EMPTY)]
    BOOL      [reduce using rule 89 (EMPTY)]
    MINUS     [reduce using rule 89 (EMPTY)]
    NEW       [reduce using rule 89 (EMPTY)]
    THIS      [reduce using rule 89 (EMPTY)]
    $default  reduce using rule 89 (EMPTY)

    VarType     go to state 132
    BaseStm     go to state 196
    Lines       go to state 134
    Line        go to state 135
    BreakStm    go to state 136
    IfStm       go to state 137
    WhileStm    go to state 138
    ForStm      go to state 139
    DeclareStm  go to state 140
    VarStm      go to state 141
    ReturnStm   go to state 142
    BoolExp     go to state 44
    Exp         go to state 45
    Lvalue      go to state 46
    Constant    go to state 47
    Call        go to state 48
    EMPTY       go to state 143


State 196

   38 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP LC BaseStm . RC

    RC  shift, and go to state 197


State 197

   38 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP LC BaseStm RC .

    $default  reduce using rule 38 (ForStm)
