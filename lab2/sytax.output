Terminals unused in grammar

   STRUCT
   SPACE
   AERROR
   NULLPTR
   STR
   EOL


State 9 conflicts: 4 shift/reduce
State 16 conflicts: 4 shift/reduce, 1 reduce/reduce
State 21 conflicts: 4 shift/reduce
State 31 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 49 conflicts: 1 shift/reduce
State 51 conflicts: 1 shift/reduce
State 53 conflicts: 11 reduce/reduce
State 65 conflicts: 1 shift/reduce
State 90 conflicts: 5 shift/reduce, 1 reduce/reduce
State 97 conflicts: 1 reduce/reduce
State 126 conflicts: 19 shift/reduce
State 130 conflicts: 19 shift/reduce
State 141 conflicts: 19 shift/reduce, 1 reduce/reduce
State 143 conflicts: 1 shift/reduce, 20 reduce/reduce
State 162 conflicts: 1 shift/reduce
State 178 conflicts: 19 shift/reduce
State 179 conflicts: 19 shift/reduce
State 181 conflicts: 19 shift/reduce
State 187 conflicts: 19 shift/reduce
State 195 conflicts: 19 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ClassDefs

    2 ClassDefs: Class
    3          | Class ClassDefs

    4 Class: CLASS ID LC ClassStms RC
    5      | CLASS ID EXTENDS ID LC ClassStms RC

    6 ClassStms: ClassStm ClassStms
    7          | ClassStm

    8 ClassStm: Fun
    9         | DeclareStm

   10 Fun: VarType ID LP Args RP LC BaseStm RC
   11    | STATIC VarType ID LP Args RP LC BaseStm RC
   12    | EMPTY

   13 VarType: TYPE Arrays
   14        | ID Arrays

   15 Arrays: EMPTY
   16       | LB RB
   17       | LB RB Arrays

   18 BaseStm: Lines

   19 Lines: Line
   20      | Line Lines

   21 Line: EMPTY
   22     | IfStm
   23     | WhileStm
   24     | VarStm SEMI
   25     | DeclareStm
   26     | ReturnStm
   27     | BreakStm
   28     | ForStm

   29 BreakStm: BREAK SEMI

   30 IfStm: IF LP Exp RP LC BaseStm RC
   31      | IfStm ELIfStm ElseStm

   32 ELIfStm: ELIF LP Exp RP LC BaseStm RC
   33        | EMPTY

   34 ElseStm: ELSE LC BaseStm RC
   35        | EMPTY

   36 WhileStm: WHILE LP Exp RP LC BaseStm RC

   37 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC

   38 DeclareStm: VarType VarStm SEMI
   39           | STATIC VarType VarStm SEMI
   40           | FINAL VarType VarStm SEMI
   41           | STATIC FINAL VarType VarStm SEMI

   42 VarStm: Exp
   43       | Exp COMMA VarStm

   44 ReturnStm: RETURN SEMI
   45          | RETURN Exp SEMI

   46 Args: EMPTY
   47     | Arg

   48 Arg: VarType ID
   49    | VarType ID COMMA Arg

   50 Exp: Constant
   51    | Call
   52    | ID DOT Call
   53    | ID DOT Constant
   54    | THIS DOT Constant
   55    | THIS DOT Call
   56    | Exp PLUS Exp
   57    | Exp MINUS Exp
   58    | Lvalue ASSIGNOP Exp
   59    | Exp AND Exp
   60    | Exp OR Exp
   61    | Exp RELOP Exp
   62    | Exp STAR Exp
   63    | Exp DIV Exp
   64    | LP Exp RP
   65    | MINUS Exp
   66    | NOT Exp
   67    | Exp LB Exp RB
   68    | DPLUS ID
   69    | ID DPLUS
   70    | DMINUS ID
   71    | ID DMINUS
   72    | NEW Call
   73    | NEW TYPE LB Exp RB

   74 Lvalue: ID
   75       | Exp LB Exp RB
   76       | Exp DOT ID

   77 Constant: ID
   78         | INT
   79         | FLOAT
   80         | BOOL

   81 Call: ID LP CallArgs RP
   82     | Call DOT ID
   83     | Call DOT ID LP CallArgs RP

   84 CallArgs: EMPTY
   85         | CallArg

   86 CallArg: Exp
   87        | Exp COMMA CallArg

   88 EMPTY: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
STATIC (258) 11 39 41
FINAL (259) 40 41
BREAK (260) 29
TYPE (261) 13 73
STRUCT (262)
EXTENDS (263) 5
CLASS (264) 4 5
RETURN (265) 44 45
IF (266) 30
ELSE (267) 34
ELIF (268) 32
FOR (269) 37
WHILE (270) 36
ID (271) 4 5 10 11 14 48 49 52 53 68 69 70 71 74 76 77 81 82 83
SPACE (272)
SEMI (273) 24 29 37 38 39 40 41 44 45
COMMA (274) 43 49 87
ASSIGNOP (275) 58
RELOP (276) 61
PLUS (277) 56
MINUS (278) 57 65
STAR (279) 62
DIV (280) 63
AND (281) 59
OR (282) 60
DOT (283) 52 53 54 55 76 82 83
NOT (284) 66
LP (285) 10 11 30 32 36 37 64 81 83
RP (286) 10 11 30 32 36 37 64 81 83
LB (287) 16 17 67 73 75
RB (288) 16 17 67 73 75
LC (289) 4 5 10 11 30 32 34 36 37
RC (290) 4 5 10 11 30 32 34 36 37
AERROR (291)
DPLUS (292) 68 69
DMINUS (293) 70 71
INT (294) 78
FLOAT (295) 79
NULLPTR (296)
STR (297)
BOOL (298) 80
EOL (299)
NEW (300) 72 73
THIS (301) 54 55


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
Program (48)
    on left: 1, on right: 0
ClassDefs (49)
    on left: 2 3, on right: 1 3
Class (50)
    on left: 4 5, on right: 2 3
ClassStms (51)
    on left: 6 7, on right: 4 5 6
ClassStm (52)
    on left: 8 9, on right: 6 7
Fun (53)
    on left: 10 11 12, on right: 8
VarType (54)
    on left: 13 14, on right: 10 11 38 39 40 41 48 49
Arrays (55)
    on left: 15 16 17, on right: 13 14 17
BaseStm (56)
    on left: 18, on right: 10 11 30 32 34 36 37
Lines (57)
    on left: 19 20, on right: 18 20
Line (58)
    on left: 21 22 23 24 25 26 27 28, on right: 19 20
BreakStm (59)
    on left: 29, on right: 27
IfStm (60)
    on left: 30 31, on right: 22 31
ELIfStm (61)
    on left: 32 33, on right: 31
ElseStm (62)
    on left: 34 35, on right: 31
WhileStm (63)
    on left: 36, on right: 23
ForStm (64)
    on left: 37, on right: 28
DeclareStm (65)
    on left: 38 39 40 41, on right: 9 25
VarStm (66)
    on left: 42 43, on right: 24 38 39 40 41 43
ReturnStm (67)
    on left: 44 45, on right: 26
Args (68)
    on left: 46 47, on right: 10 11
Arg (69)
    on left: 48 49, on right: 47 49
Exp (70)
    on left: 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
    68 69 70 71 72 73, on right: 30 32 36 37 42 43 45 56 57 58 59 60
    61 62 63 64 65 66 67 73 75 76 86 87
Lvalue (71)
    on left: 74 75 76, on right: 58
Constant (72)
    on left: 77 78 79 80, on right: 50 53 54
Call (73)
    on left: 81 82 83, on right: 51 52 55 72 82 83
CallArgs (74)
    on left: 84 85, on right: 81 83
CallArg (75)
    on left: 86 87, on right: 85 87
EMPTY (76)
    on left: 88, on right: 12 15 21 33 35 46 84


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    ClassDefs  go to state 3
    Class      go to state 4


State 1

    4 Class: CLASS . ID LC ClassStms RC
    5      | CLASS . ID EXTENDS ID LC ClassStms RC

    ID  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: ClassDefs .

    $default  reduce using rule 1 (Program)


State 4

    2 ClassDefs: Class .
    3          | Class . ClassDefs

    CLASS  shift, and go to state 1

    $default  reduce using rule 2 (ClassDefs)

    ClassDefs  go to state 7
    Class      go to state 4


State 5

    4 Class: CLASS ID . LC ClassStms RC
    5      | CLASS ID . EXTENDS ID LC ClassStms RC

    EXTENDS  shift, and go to state 8
    LC       shift, and go to state 9


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 ClassDefs: Class ClassDefs .

    $default  reduce using rule 3 (ClassDefs)


State 8

    5 Class: CLASS ID EXTENDS . ID LC ClassStms RC

    ID  shift, and go to state 10


State 9

    4 Class: CLASS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    ClassStms   go to state 15
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19
    EMPTY       go to state 20


State 10

    5 Class: CLASS ID EXTENDS ID . LC ClassStms RC

    LC  shift, and go to state 21


State 11

   11 Fun: STATIC . VarType ID LP Args RP LC BaseStm RC
   39 DeclareStm: STATIC . VarType VarStm SEMI
   41           | STATIC . FINAL VarType VarStm SEMI

    FINAL  shift, and go to state 22
    TYPE   shift, and go to state 13
    ID     shift, and go to state 14

    VarType  go to state 23


State 12

   40 DeclareStm: FINAL . VarType VarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 14

    VarType  go to state 24


State 13

   13 VarType: TYPE . Arrays

    LB  shift, and go to state 25

    $default  reduce using rule 88 (EMPTY)

    Arrays  go to state 26
    EMPTY   go to state 27


State 14

   14 VarType: ID . Arrays

    LB  shift, and go to state 25

    $default  reduce using rule 88 (EMPTY)

    Arrays  go to state 28
    EMPTY   go to state 27


State 15

    4 Class: CLASS ID LC ClassStms . RC

    RC  shift, and go to state 29


State 16

    6 ClassStms: ClassStm . ClassStms
    7          | ClassStm .

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    RC        reduce using rule 7 (ClassStms)
    RC        [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 7 (ClassStms)

    ClassStms   go to state 30
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19
    EMPTY       go to state 20


State 17

    8 ClassStm: Fun .

    $default  reduce using rule 8 (ClassStm)


State 18

   10 Fun: VarType . ID LP Args RP LC BaseStm RC
   38 DeclareStm: VarType . VarStm SEMI

    ID      shift, and go to state 31
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    VarStm    go to state 42
    Exp       go to state 43
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 19

    9 ClassStm: DeclareStm .

    $default  reduce using rule 9 (ClassStm)


State 20

   12 Fun: EMPTY .

    $default  reduce using rule 12 (Fun)


State 21

    5 Class: CLASS ID EXTENDS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    ClassStms   go to state 47
    ClassStm    go to state 16
    Fun         go to state 17
    VarType     go to state 18
    DeclareStm  go to state 19
    EMPTY       go to state 20


State 22

   41 DeclareStm: STATIC FINAL . VarType VarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 14

    VarType  go to state 48


State 23

   11 Fun: STATIC VarType . ID LP Args RP LC BaseStm RC
   39 DeclareStm: STATIC VarType . VarStm SEMI

    ID      shift, and go to state 49
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    VarStm    go to state 50
    Exp       go to state 43
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 24

   40 DeclareStm: FINAL VarType . VarStm SEMI

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    VarStm    go to state 52
    Exp       go to state 43
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 25

   16 Arrays: LB . RB
   17       | LB . RB Arrays

    RB  shift, and go to state 53


State 26

   13 VarType: TYPE Arrays .

    $default  reduce using rule 13 (VarType)


State 27

   15 Arrays: EMPTY .

    $default  reduce using rule 15 (Arrays)


State 28

   14 VarType: ID Arrays .

    $default  reduce using rule 14 (VarType)


State 29

    4 Class: CLASS ID LC ClassStms RC .

    $default  reduce using rule 4 (Class)


State 30

    6 ClassStms: ClassStm ClassStms .

    $default  reduce using rule 6 (ClassStms)


State 31

   10 Fun: VarType ID . LP Args RP LC BaseStm RC
   52 Exp: ID . DOT Call
   53    | ID . DOT Constant
   69    | ID . DPLUS
   71    | ID . DMINUS
   74 Lvalue: ID .
   77 Constant: ID .
   81 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 54
    LP      shift, and go to state 55
    DPLUS   shift, and go to state 56
    DMINUS  shift, and go to state 57

    ASSIGNOP  reduce using rule 74 (Lvalue)
    DOT       [reduce using rule 77 (Constant)]
    $default  reduce using rule 77 (Constant)


State 32

   65 Exp: MINUS . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 58
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 33

   66 Exp: NOT . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 59
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 34

   64 Exp: LP . Exp RP

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 60
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 35

   68 Exp: DPLUS . ID

    ID  shift, and go to state 61


State 36

   70 Exp: DMINUS . ID

    ID  shift, and go to state 62


State 37

   78 Constant: INT .

    $default  reduce using rule 78 (Constant)


State 38

   79 Constant: FLOAT .

    $default  reduce using rule 79 (Constant)


State 39

   80 Constant: BOOL .

    $default  reduce using rule 80 (Constant)


State 40

   72 Exp: NEW . Call
   73    | NEW . TYPE LB Exp RB

    TYPE  shift, and go to state 63
    ID    shift, and go to state 64

    Call  go to state 65


State 41

   54 Exp: THIS . DOT Constant
   55    | THIS . DOT Call

    DOT  shift, and go to state 66


State 42

   38 DeclareStm: VarType VarStm . SEMI

    SEMI  shift, and go to state 67


State 43

   42 VarStm: Exp .
   43       | Exp . COMMA VarStm
   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    COMMA  shift, and go to state 68
    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    LB     shift, and go to state 77

    $default  reduce using rule 42 (VarStm)


State 44

   58 Exp: Lvalue . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 78


State 45

   50 Exp: Constant .

    $default  reduce using rule 50 (Exp)


State 46

   51 Exp: Call .
   82 Call: Call . DOT ID
   83     | Call . DOT ID LP CallArgs RP

    DOT  shift, and go to state 79

    DOT       [reduce using rule 51 (Exp)]
    $default  reduce using rule 51 (Exp)


State 47

    5 Class: CLASS ID EXTENDS ID LC ClassStms . RC

    RC  shift, and go to state 80


State 48

   41 DeclareStm: STATIC FINAL VarType . VarStm SEMI

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    VarStm    go to state 81
    Exp       go to state 43
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 49

   11 Fun: STATIC VarType ID . LP Args RP LC BaseStm RC
   52 Exp: ID . DOT Call
   53    | ID . DOT Constant
   69    | ID . DPLUS
   71    | ID . DMINUS
   74 Lvalue: ID .
   77 Constant: ID .
   81 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 54
    LP      shift, and go to state 82
    DPLUS   shift, and go to state 56
    DMINUS  shift, and go to state 57

    ASSIGNOP  reduce using rule 74 (Lvalue)
    DOT       [reduce using rule 77 (Constant)]
    $default  reduce using rule 77 (Constant)


State 50

   39 DeclareStm: STATIC VarType VarStm . SEMI

    SEMI  shift, and go to state 83


State 51

   52 Exp: ID . DOT Call
   53    | ID . DOT Constant
   69    | ID . DPLUS
   71    | ID . DMINUS
   74 Lvalue: ID .
   77 Constant: ID .
   81 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 54
    LP      shift, and go to state 84
    DPLUS   shift, and go to state 56
    DMINUS  shift, and go to state 57

    ASSIGNOP  reduce using rule 74 (Lvalue)
    DOT       [reduce using rule 77 (Constant)]
    $default  reduce using rule 77 (Constant)


State 52

   40 DeclareStm: FINAL VarType VarStm . SEMI

    SEMI  shift, and go to state 85


State 53

   16 Arrays: LB RB .
   17       | LB RB . Arrays

    LB  shift, and go to state 25

    ID        reduce using rule 16 (Arrays)
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     reduce using rule 16 (Arrays)
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       reduce using rule 16 (Arrays)
    NOT       [reduce using rule 88 (EMPTY)]
    LP        reduce using rule 16 (Arrays)
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     reduce using rule 16 (Arrays)
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    reduce using rule 16 (Arrays)
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       reduce using rule 16 (Arrays)
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     reduce using rule 16 (Arrays)
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      reduce using rule 16 (Arrays)
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       reduce using rule 16 (Arrays)
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      reduce using rule 16 (Arrays)
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 16 (Arrays)

    Arrays  go to state 86
    EMPTY   go to state 27


State 54

   52 Exp: ID DOT . Call
   53    | ID DOT . Constant

    ID     shift, and go to state 87
    INT    shift, and go to state 37
    FLOAT  shift, and go to state 38
    BOOL   shift, and go to state 39

    Constant  go to state 88
    Call      go to state 89


State 55

   10 Fun: VarType ID LP . Args RP LC BaseStm RC
   81 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 13
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    $default  reduce using rule 88 (EMPTY)

    VarType   go to state 91
    Args      go to state 92
    Arg       go to state 93
    Exp       go to state 94
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46
    CallArgs  go to state 95
    CallArg   go to state 96
    EMPTY     go to state 97


State 56

   69 Exp: ID DPLUS .

    $default  reduce using rule 69 (Exp)


State 57

   71 Exp: ID DMINUS .

    $default  reduce using rule 71 (Exp)


State 58

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   65    | MINUS Exp .
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    STAR  shift, and go to state 72
    DIV   shift, and go to state 73
    DOT   shift, and go to state 76
    LB    shift, and go to state 77

    $default  reduce using rule 65 (Exp)


State 59

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   66    | NOT Exp .
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    DOT  shift, and go to state 76
    LB   shift, and go to state 77

    $default  reduce using rule 66 (Exp)


State 60

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   64    | LP Exp . RP
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    RP     shift, and go to state 98
    LB     shift, and go to state 77


State 61

   68 Exp: DPLUS ID .

    $default  reduce using rule 68 (Exp)


State 62

   70 Exp: DMINUS ID .

    $default  reduce using rule 70 (Exp)


State 63

   73 Exp: NEW TYPE . LB Exp RB

    LB  shift, and go to state 99


State 64

   81 Call: ID . LP CallArgs RP

    LP  shift, and go to state 84


State 65

   72 Exp: NEW Call .
   82 Call: Call . DOT ID
   83     | Call . DOT ID LP CallArgs RP

    DOT  shift, and go to state 79

    DOT       [reduce using rule 72 (Exp)]
    $default  reduce using rule 72 (Exp)


State 66

   54 Exp: THIS DOT . Constant
   55    | THIS DOT . Call

    ID     shift, and go to state 87
    INT    shift, and go to state 37
    FLOAT  shift, and go to state 38
    BOOL   shift, and go to state 39

    Constant  go to state 100
    Call      go to state 101


State 67

   38 DeclareStm: VarType VarStm SEMI .

    $default  reduce using rule 38 (DeclareStm)


State 68

   43 VarStm: Exp COMMA . VarStm

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    VarStm    go to state 102
    Exp       go to state 43
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 69

   61 Exp: Exp RELOP . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 103
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 70

   56 Exp: Exp PLUS . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 104
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 71

   57 Exp: Exp MINUS . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 105
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 72

   62 Exp: Exp STAR . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 106
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 73

   63 Exp: Exp DIV . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 107
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 74

   59 Exp: Exp AND . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 108
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 75

   60 Exp: Exp OR . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 109
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 76

   76 Lvalue: Exp DOT . ID

    ID  shift, and go to state 110


State 77

   67 Exp: Exp LB . Exp RB
   75 Lvalue: Exp LB . Exp RB

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 111
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 78

   58 Exp: Lvalue ASSIGNOP . Exp

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 112
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 79

   82 Call: Call DOT . ID
   83     | Call DOT . ID LP CallArgs RP

    ID  shift, and go to state 113


State 80

    5 Class: CLASS ID EXTENDS ID LC ClassStms RC .

    $default  reduce using rule 5 (Class)


State 81

   41 DeclareStm: STATIC FINAL VarType VarStm . SEMI

    SEMI  shift, and go to state 114


State 82

   11 Fun: STATIC VarType ID LP . Args RP LC BaseStm RC
   81 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 13
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    $default  reduce using rule 88 (EMPTY)

    VarType   go to state 91
    Args      go to state 115
    Arg       go to state 93
    Exp       go to state 94
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46
    CallArgs  go to state 95
    CallArg   go to state 96
    EMPTY     go to state 97


State 83

   39 DeclareStm: STATIC VarType VarStm SEMI .

    $default  reduce using rule 39 (DeclareStm)


State 84

   81 Call: ID LP . CallArgs RP

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    $default  reduce using rule 88 (EMPTY)

    Exp       go to state 94
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46
    CallArgs  go to state 95
    CallArg   go to state 96
    EMPTY     go to state 116


State 85

   40 DeclareStm: FINAL VarType VarStm SEMI .

    $default  reduce using rule 40 (DeclareStm)


State 86

   17 Arrays: LB RB Arrays .

    $default  reduce using rule 17 (Arrays)


State 87

   77 Constant: ID .
   81 Call: ID . LP CallArgs RP

    LP  shift, and go to state 84

    $default  reduce using rule 77 (Constant)


State 88

   53 Exp: ID DOT Constant .

    $default  reduce using rule 53 (Exp)


State 89

   52 Exp: ID DOT Call .
   82 Call: Call . DOT ID
   83     | Call . DOT ID LP CallArgs RP

    $default  reduce using rule 52 (Exp)


State 90

   14 VarType: ID . Arrays
   52 Exp: ID . DOT Call
   53    | ID . DOT Constant
   69    | ID . DPLUS
   71    | ID . DMINUS
   74 Lvalue: ID .
   77 Constant: ID .
   81 Call: ID . LP CallArgs RP

    DOT     shift, and go to state 54
    LP      shift, and go to state 84
    LB      shift, and go to state 25
    DPLUS   shift, and go to state 56
    DMINUS  shift, and go to state 57

    ID        reduce using rule 88 (EMPTY)
    ASSIGNOP  reduce using rule 74 (Lvalue)
    MINUS     reduce using rule 77 (Constant)
    MINUS     [reduce using rule 88 (EMPTY)]
    DOT       [reduce using rule 77 (Constant)]
    NOT       reduce using rule 88 (EMPTY)
    LP        [reduce using rule 88 (EMPTY)]
    LB        [reduce using rule 77 (Constant)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       reduce using rule 88 (EMPTY)
    FLOAT     reduce using rule 88 (EMPTY)
    BOOL      reduce using rule 88 (EMPTY)
    NEW       reduce using rule 88 (EMPTY)
    THIS      reduce using rule 88 (EMPTY)
    $default  reduce using rule 77 (Constant)

    Arrays  go to state 28
    EMPTY   go to state 27


State 91

   48 Arg: VarType . ID
   49    | VarType . ID COMMA Arg

    ID  shift, and go to state 117


State 92

   10 Fun: VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 118


State 93

   47 Args: Arg .

    $default  reduce using rule 47 (Args)


State 94

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID
   86 CallArg: Exp .
   87        | Exp . COMMA CallArg

    COMMA  shift, and go to state 119
    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    LB     shift, and go to state 77

    $default  reduce using rule 86 (CallArg)


State 95

   81 Call: ID LP CallArgs . RP

    RP  shift, and go to state 120


State 96

   85 CallArgs: CallArg .

    $default  reduce using rule 85 (CallArgs)


State 97

   46 Args: EMPTY .
   84 CallArgs: EMPTY .

    RP        reduce using rule 46 (Args)
    RP        [reduce using rule 84 (CallArgs)]
    $default  reduce using rule 46 (Args)


State 98

   64 Exp: LP Exp RP .

    $default  reduce using rule 64 (Exp)


State 99

   73 Exp: NEW TYPE LB . Exp RB

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 121
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 100

   54 Exp: THIS DOT Constant .

    $default  reduce using rule 54 (Exp)


State 101

   55 Exp: THIS DOT Call .
   82 Call: Call . DOT ID
   83     | Call . DOT ID LP CallArgs RP

    $default  reduce using rule 55 (Exp)


State 102

   43 VarStm: Exp COMMA VarStm .

    $default  reduce using rule 43 (VarStm)


State 103

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   61    | Exp RELOP Exp .
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    DOT    shift, and go to state 76
    LB     shift, and go to state 77

    $default  reduce using rule 61 (Exp)


State 104

   56 Exp: Exp . PLUS Exp
   56    | Exp PLUS Exp .
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    STAR  shift, and go to state 72
    DIV   shift, and go to state 73
    DOT   shift, and go to state 76
    LB    shift, and go to state 77

    $default  reduce using rule 56 (Exp)


State 105

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   57    | Exp MINUS Exp .
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    STAR  shift, and go to state 72
    DIV   shift, and go to state 73
    DOT   shift, and go to state 76
    LB    shift, and go to state 77

    $default  reduce using rule 57 (Exp)


State 106

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   62    | Exp STAR Exp .
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    DOT  shift, and go to state 76
    LB   shift, and go to state 77

    $default  reduce using rule 62 (Exp)


State 107

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   63    | Exp DIV Exp .
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    DOT  shift, and go to state 76
    LB   shift, and go to state 77

    $default  reduce using rule 63 (Exp)


State 108

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   59    | Exp AND Exp .
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    DOT    shift, and go to state 76
    LB     shift, and go to state 77

    $default  reduce using rule 59 (Exp)


State 109

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   60    | Exp OR Exp .
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    DOT    shift, and go to state 76
    LB     shift, and go to state 77

    $default  reduce using rule 60 (Exp)


State 110

   76 Lvalue: Exp DOT ID .

    $default  reduce using rule 76 (Lvalue)


State 111

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   67    | Exp LB Exp . RB
   75 Lvalue: Exp . LB Exp RB
   75       | Exp LB Exp . RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    LB     shift, and go to state 77
    RB     shift, and go to state 122


State 112

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   58    | Lvalue ASSIGNOP Exp .
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    LB     shift, and go to state 77

    $default  reduce using rule 58 (Exp)


State 113

   82 Call: Call DOT ID .
   83     | Call DOT ID . LP CallArgs RP

    LP  shift, and go to state 123

    $default  reduce using rule 82 (Call)


State 114

   41 DeclareStm: STATIC FINAL VarType VarStm SEMI .

    $default  reduce using rule 41 (DeclareStm)


State 115

   11 Fun: STATIC VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 124


State 116

   84 CallArgs: EMPTY .

    $default  reduce using rule 84 (CallArgs)


State 117

   48 Arg: VarType ID .
   49    | VarType ID . COMMA Arg

    COMMA  shift, and go to state 125

    $default  reduce using rule 48 (Arg)


State 118

   10 Fun: VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 126


State 119

   87 CallArg: Exp COMMA . CallArg

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 94
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46
    CallArg   go to state 127


State 120

   81 Call: ID LP CallArgs RP .

    $default  reduce using rule 81 (Call)


State 121

   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   73    | NEW TYPE LB Exp . RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    LB     shift, and go to state 77
    RB     shift, and go to state 128


State 122

   67 Exp: Exp LB Exp RB .
   75 Lvalue: Exp LB Exp RB .

    ASSIGNOP  reduce using rule 75 (Lvalue)
    $default  reduce using rule 67 (Exp)


State 123

   83 Call: Call DOT ID LP . CallArgs RP

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    $default  reduce using rule 88 (EMPTY)

    Exp       go to state 94
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46
    CallArgs  go to state 129
    CallArg   go to state 96
    EMPTY     go to state 116


State 124

   11 Fun: STATIC VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 130


State 125

   49 Arg: VarType ID COMMA . Arg

    TYPE  shift, and go to state 13
    ID    shift, and go to state 14

    VarType  go to state 91
    Arg      go to state 131


State 126

   10 Fun: VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 132
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 133
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 134
    IF      shift, and go to state 135
    FOR     shift, and go to state 136
    WHILE   shift, and go to state 137
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 138
    BaseStm     go to state 139
    Lines       go to state 140
    Line        go to state 141
    BreakStm    go to state 142
    IfStm       go to state 143
    WhileStm    go to state 144
    ForStm      go to state 145
    DeclareStm  go to state 146
    VarStm      go to state 147
    ReturnStm   go to state 148
    Exp         go to state 43
    Lvalue      go to state 44
    Constant    go to state 45
    Call        go to state 46
    EMPTY       go to state 149


State 127

   87 CallArg: Exp COMMA CallArg .

    $default  reduce using rule 87 (CallArg)


State 128

   73 Exp: NEW TYPE LB Exp RB .

    $default  reduce using rule 73 (Exp)


State 129

   83 Call: Call DOT ID LP CallArgs . RP

    RP  shift, and go to state 150


State 130

   11 Fun: STATIC VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 132
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 133
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 134
    IF      shift, and go to state 135
    FOR     shift, and go to state 136
    WHILE   shift, and go to state 137
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 138
    BaseStm     go to state 151
    Lines       go to state 140
    Line        go to state 141
    BreakStm    go to state 142
    IfStm       go to state 143
    WhileStm    go to state 144
    ForStm      go to state 145
    DeclareStm  go to state 146
    VarStm      go to state 147
    ReturnStm   go to state 148
    Exp         go to state 43
    Lvalue      go to state 44
    Constant    go to state 45
    Call        go to state 46
    EMPTY       go to state 149


State 131

   49 Arg: VarType ID COMMA Arg .

    $default  reduce using rule 49 (Arg)


State 132

   39 DeclareStm: STATIC . VarType VarStm SEMI
   41           | STATIC . FINAL VarType VarStm SEMI

    FINAL  shift, and go to state 22
    TYPE   shift, and go to state 13
    ID     shift, and go to state 14

    VarType  go to state 152


State 133

   29 BreakStm: BREAK . SEMI

    SEMI  shift, and go to state 153


State 134

   44 ReturnStm: RETURN . SEMI
   45          | RETURN . Exp SEMI

    ID      shift, and go to state 51
    SEMI    shift, and go to state 154
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 155
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 135

   30 IfStm: IF . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 156


State 136

   37 ForStm: FOR . LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC

    LP  shift, and go to state 157


State 137

   36 WhileStm: WHILE . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 158


State 138

   38 DeclareStm: VarType . VarStm SEMI

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    VarStm    go to state 42
    Exp       go to state 43
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 139

   10 Fun: VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 159


State 140

   18 BaseStm: Lines .

    $default  reduce using rule 18 (BaseStm)


State 141

   19 Lines: Line .
   20      | Line . Lines

    STATIC  shift, and go to state 132
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 133
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 134
    IF      shift, and go to state 135
    FOR     shift, and go to state 136
    WHILE   shift, and go to state 137
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    RC        reduce using rule 19 (Lines)
    RC        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 19 (Lines)

    VarType     go to state 138
    Lines       go to state 160
    Line        go to state 141
    BreakStm    go to state 142
    IfStm       go to state 143
    WhileStm    go to state 144
    ForStm      go to state 145
    DeclareStm  go to state 146
    VarStm      go to state 147
    ReturnStm   go to state 148
    Exp         go to state 43
    Lvalue      go to state 44
    Constant    go to state 45
    Call        go to state 46
    EMPTY       go to state 149


State 142

   27 Line: BreakStm .

    $default  reduce using rule 27 (Line)


State 143

   22 Line: IfStm .
   31 IfStm: IfStm . ELIfStm ElseStm

    ELIF  shift, and go to state 161

    STATIC    reduce using rule 22 (Line)
    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     reduce using rule 22 (Line)
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     reduce using rule 22 (Line)
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      reduce using rule 22 (Line)
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    reduce using rule 22 (Line)
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        reduce using rule 22 (Line)
    IF        [reduce using rule 88 (EMPTY)]
    ELSE      reduce using rule 88 (EMPTY)
    ELIF      [reduce using rule 88 (EMPTY)]
    FOR       reduce using rule 22 (Line)
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     reduce using rule 22 (Line)
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        reduce using rule 22 (Line)
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     reduce using rule 22 (Line)
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       reduce using rule 22 (Line)
    NOT       [reduce using rule 88 (EMPTY)]
    LP        reduce using rule 22 (Line)
    LP        [reduce using rule 88 (EMPTY)]
    RC        reduce using rule 22 (Line)
    RC        [reduce using rule 88 (EMPTY)]
    DPLUS     reduce using rule 22 (Line)
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    reduce using rule 22 (Line)
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       reduce using rule 22 (Line)
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     reduce using rule 22 (Line)
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      reduce using rule 22 (Line)
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       reduce using rule 22 (Line)
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      reduce using rule 22 (Line)
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 22 (Line)

    ELIfStm  go to state 162
    EMPTY    go to state 163


State 144

   23 Line: WhileStm .

    $default  reduce using rule 23 (Line)


State 145

   28 Line: ForStm .

    $default  reduce using rule 28 (Line)


State 146

   25 Line: DeclareStm .

    $default  reduce using rule 25 (Line)


State 147

   24 Line: VarStm . SEMI

    SEMI  shift, and go to state 164


State 148

   26 Line: ReturnStm .

    $default  reduce using rule 26 (Line)


State 149

   21 Line: EMPTY .

    $default  reduce using rule 21 (Line)


State 150

   83 Call: Call DOT ID LP CallArgs RP .

    $default  reduce using rule 83 (Call)


State 151

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 165


State 152

   39 DeclareStm: STATIC VarType . VarStm SEMI

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    VarStm    go to state 50
    Exp       go to state 43
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 153

   29 BreakStm: BREAK SEMI .

    $default  reduce using rule 29 (BreakStm)


State 154

   44 ReturnStm: RETURN SEMI .

    $default  reduce using rule 44 (ReturnStm)


State 155

   45 ReturnStm: RETURN Exp . SEMI
   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    SEMI   shift, and go to state 166
    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    LB     shift, and go to state 77


State 156

   30 IfStm: IF LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 167
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 157

   37 ForStm: FOR LP . Exp SEMI Exp SEMI Exp RP LC BaseStm RC

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 168
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 158

   36 WhileStm: WHILE LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 169
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 159

   10 Fun: VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 10 (Fun)


State 160

   20 Lines: Line Lines .

    $default  reduce using rule 20 (Lines)


State 161

   32 ELIfStm: ELIF . LP Exp RP LC BaseStm RC

    LP  shift, and go to state 170


State 162

   31 IfStm: IfStm ELIfStm . ElseStm

    ELSE  shift, and go to state 171

    ELSE      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    ElseStm  go to state 172
    EMPTY    go to state 173


State 163

   33 ELIfStm: EMPTY .

    $default  reduce using rule 33 (ELIfStm)


State 164

   24 Line: VarStm SEMI .

    $default  reduce using rule 24 (Line)


State 165

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 11 (Fun)


State 166

   45 ReturnStm: RETURN Exp SEMI .

    $default  reduce using rule 45 (ReturnStm)


State 167

   30 IfStm: IF LP Exp . RP LC BaseStm RC
   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    RP     shift, and go to state 174
    LB     shift, and go to state 77


State 168

   37 ForStm: FOR LP Exp . SEMI Exp SEMI Exp RP LC BaseStm RC
   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    SEMI   shift, and go to state 175
    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    LB     shift, and go to state 77


State 169

   36 WhileStm: WHILE LP Exp . RP LC BaseStm RC
   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    RP     shift, and go to state 176
    LB     shift, and go to state 77


State 170

   32 ELIfStm: ELIF LP . Exp RP LC BaseStm RC

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 177
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 171

   34 ElseStm: ELSE . LC BaseStm RC

    LC  shift, and go to state 178


State 172

   31 IfStm: IfStm ELIfStm ElseStm .

    $default  reduce using rule 31 (IfStm)


State 173

   35 ElseStm: EMPTY .

    $default  reduce using rule 35 (ElseStm)


State 174

   30 IfStm: IF LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 179


State 175

   37 ForStm: FOR LP Exp SEMI . Exp SEMI Exp RP LC BaseStm RC

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 180
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 176

   36 WhileStm: WHILE LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 181


State 177

   32 ELIfStm: ELIF LP Exp . RP LC BaseStm RC
   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    RP     shift, and go to state 182
    LB     shift, and go to state 77


State 178

   34 ElseStm: ELSE LC . BaseStm RC

    STATIC  shift, and go to state 132
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 133
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 134
    IF      shift, and go to state 135
    FOR     shift, and go to state 136
    WHILE   shift, and go to state 137
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 138
    BaseStm     go to state 183
    Lines       go to state 140
    Line        go to state 141
    BreakStm    go to state 142
    IfStm       go to state 143
    WhileStm    go to state 144
    ForStm      go to state 145
    DeclareStm  go to state 146
    VarStm      go to state 147
    ReturnStm   go to state 148
    Exp         go to state 43
    Lvalue      go to state 44
    Constant    go to state 45
    Call        go to state 46
    EMPTY       go to state 149


State 179

   30 IfStm: IF LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 132
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 133
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 134
    IF      shift, and go to state 135
    FOR     shift, and go to state 136
    WHILE   shift, and go to state 137
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 138
    BaseStm     go to state 184
    Lines       go to state 140
    Line        go to state 141
    BreakStm    go to state 142
    IfStm       go to state 143
    WhileStm    go to state 144
    ForStm      go to state 145
    DeclareStm  go to state 146
    VarStm      go to state 147
    ReturnStm   go to state 148
    Exp         go to state 43
    Lvalue      go to state 44
    Constant    go to state 45
    Call        go to state 46
    EMPTY       go to state 149


State 180

   37 ForStm: FOR LP Exp SEMI Exp . SEMI Exp RP LC BaseStm RC
   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    SEMI   shift, and go to state 185
    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    LB     shift, and go to state 77


State 181

   36 WhileStm: WHILE LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 132
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 133
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 134
    IF      shift, and go to state 135
    FOR     shift, and go to state 136
    WHILE   shift, and go to state 137
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 138
    BaseStm     go to state 186
    Lines       go to state 140
    Line        go to state 141
    BreakStm    go to state 142
    IfStm       go to state 143
    WhileStm    go to state 144
    ForStm      go to state 145
    DeclareStm  go to state 146
    VarStm      go to state 147
    ReturnStm   go to state 148
    Exp         go to state 43
    Lvalue      go to state 44
    Constant    go to state 45
    Call        go to state 46
    EMPTY       go to state 149


State 182

   32 ELIfStm: ELIF LP Exp RP . LC BaseStm RC

    LC  shift, and go to state 187


State 183

   34 ElseStm: ELSE LC BaseStm . RC

    RC  shift, and go to state 188


State 184

   30 IfStm: IF LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 189


State 185

   37 ForStm: FOR LP Exp SEMI Exp SEMI . Exp RP LC BaseStm RC

    ID      shift, and go to state 51
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    Exp       go to state 190
    Lvalue    go to state 44
    Constant  go to state 45
    Call      go to state 46


State 186

   36 WhileStm: WHILE LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 191


State 187

   32 ELIfStm: ELIF LP Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 132
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 133
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 134
    IF      shift, and go to state 135
    FOR     shift, and go to state 136
    WHILE   shift, and go to state 137
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 138
    BaseStm     go to state 192
    Lines       go to state 140
    Line        go to state 141
    BreakStm    go to state 142
    IfStm       go to state 143
    WhileStm    go to state 144
    ForStm      go to state 145
    DeclareStm  go to state 146
    VarStm      go to state 147
    ReturnStm   go to state 148
    Exp         go to state 43
    Lvalue      go to state 44
    Constant    go to state 45
    Call        go to state 46
    EMPTY       go to state 149


State 188

   34 ElseStm: ELSE LC BaseStm RC .

    $default  reduce using rule 34 (ElseStm)


State 189

   30 IfStm: IF LP Exp RP LC BaseStm RC .

    $default  reduce using rule 30 (IfStm)


State 190

   37 ForStm: FOR LP Exp SEMI Exp SEMI Exp . RP LC BaseStm RC
   56 Exp: Exp . PLUS Exp
   57    | Exp . MINUS Exp
   59    | Exp . AND Exp
   60    | Exp . OR Exp
   61    | Exp . RELOP Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   67    | Exp . LB Exp RB
   75 Lvalue: Exp . LB Exp RB
   76       | Exp . DOT ID

    RELOP  shift, and go to state 69
    PLUS   shift, and go to state 70
    MINUS  shift, and go to state 71
    STAR   shift, and go to state 72
    DIV    shift, and go to state 73
    AND    shift, and go to state 74
    OR     shift, and go to state 75
    DOT    shift, and go to state 76
    RP     shift, and go to state 193
    LB     shift, and go to state 77


State 191

   36 WhileStm: WHILE LP Exp RP LC BaseStm RC .

    $default  reduce using rule 36 (WhileStm)


State 192

   32 ELIfStm: ELIF LP Exp RP LC BaseStm . RC

    RC  shift, and go to state 194


State 193

   37 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP . LC BaseStm RC

    LC  shift, and go to state 195


State 194

   32 ELIfStm: ELIF LP Exp RP LC BaseStm RC .

    $default  reduce using rule 32 (ELIfStm)


State 195

   37 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 132
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 133
    TYPE    shift, and go to state 13
    RETURN  shift, and go to state 134
    IF      shift, and go to state 135
    FOR     shift, and go to state 136
    WHILE   shift, and go to state 137
    ID      shift, and go to state 90
    MINUS   shift, and go to state 32
    NOT     shift, and go to state 33
    LP      shift, and go to state 34
    DPLUS   shift, and go to state 35
    DMINUS  shift, and go to state 36
    INT     shift, and go to state 37
    FLOAT   shift, and go to state 38
    BOOL    shift, and go to state 39
    NEW     shift, and go to state 40
    THIS    shift, and go to state 41

    STATIC    [reduce using rule 88 (EMPTY)]
    FINAL     [reduce using rule 88 (EMPTY)]
    BREAK     [reduce using rule 88 (EMPTY)]
    TYPE      [reduce using rule 88 (EMPTY)]
    RETURN    [reduce using rule 88 (EMPTY)]
    IF        [reduce using rule 88 (EMPTY)]
    FOR       [reduce using rule 88 (EMPTY)]
    WHILE     [reduce using rule 88 (EMPTY)]
    ID        [reduce using rule 88 (EMPTY)]
    MINUS     [reduce using rule 88 (EMPTY)]
    NOT       [reduce using rule 88 (EMPTY)]
    LP        [reduce using rule 88 (EMPTY)]
    DPLUS     [reduce using rule 88 (EMPTY)]
    DMINUS    [reduce using rule 88 (EMPTY)]
    INT       [reduce using rule 88 (EMPTY)]
    FLOAT     [reduce using rule 88 (EMPTY)]
    BOOL      [reduce using rule 88 (EMPTY)]
    NEW       [reduce using rule 88 (EMPTY)]
    THIS      [reduce using rule 88 (EMPTY)]
    $default  reduce using rule 88 (EMPTY)

    VarType     go to state 138
    BaseStm     go to state 196
    Lines       go to state 140
    Line        go to state 141
    BreakStm    go to state 142
    IfStm       go to state 143
    WhileStm    go to state 144
    ForStm      go to state 145
    DeclareStm  go to state 146
    VarStm      go to state 147
    ReturnStm   go to state 148
    Exp         go to state 43
    Lvalue      go to state 44
    Constant    go to state 45
    Call        go to state 46
    EMPTY       go to state 149


State 196

   37 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm . RC

    RC  shift, and go to state 197


State 197

   37 ForStm: FOR LP Exp SEMI Exp SEMI Exp RP LC BaseStm RC .

    $default  reduce using rule 37 (ForStm)
