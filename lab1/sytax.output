Terminals unused in grammar

   STRUCT
   RETURN
   SPACE
   AERROR
   NULLPTR
   STR
   EOL
   NEW
   LINECOMMENT
   WEAKCOMMENT


State 9 conflicts: 2 shift/reduce
State 11 conflicts: 2 shift/reduce
State 13 conflicts: 3 shift/reduce
State 17 conflicts: 2 shift/reduce
State 18 conflicts: 2 shift/reduce
State 38 conflicts: 3 shift/reduce
State 62 conflicts: 1 reduce/reduce
State 89 conflicts: 13 shift/reduce
State 96 conflicts: 14 shift/reduce
State 98 conflicts: 1 shift/reduce, 14 reduce/reduce
State 109 conflicts: 1 shift/reduce
State 121 conflicts: 13 shift/reduce
State 122 conflicts: 13 shift/reduce
State 123 conflicts: 13 shift/reduce
State 125 conflicts: 14 shift/reduce
State 126 conflicts: 14 shift/reduce
State 127 conflicts: 14 shift/reduce
State 128 conflicts: 13 shift/reduce
State 132 conflicts: 14 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Classes

    2 Classes: Class
    3        | Classes Class

    4 Class: CLASS ID LC Funs RC
    5      | CLASS ID EXTENDS ID LC Funs RC

    6 Funs: Fun
    7     | DeclareStm
    8     | Funs Fun
    9     | Funs DeclareStm

   10 Fun: ID LP Args RP LC Lines RC
   11    | TYPE Fun
   12    | EMPTY

   13 Lines: Line
   14      | Lines Line

   15 Line: EMPTY
   16     | IfStm
   17     | WhileStm
   18     | VarStm SEMI
   19     | DeclareStm

   20 IfStm: IF LP Exp RP LC Lines RC
   21      | IfStm ELIfStm ElseStm

   22 ELIfStm: ELIF LP Exp RP LC Lines RC
   23        | EMPTY

   24 ElseStm: ELSE LC Lines RC
   25        | EMPTY

   26 WhileStm: WHILE LP Exp RP LC Lines RC

   27 DeclareStm: TYPE VarStm SEMI

   28 VarStm: Exp
   29       | VarStm COMMA Exp

   30 Args: Arg
   31     | EMPTY

   32 Arg: TYPE ID
   33    | TYPE ID COMMA Arg

   34 EMPTY: %empty

   35 Exp: Constant
   36    | Call
   37    | THIS DOT Constant
   38    | THIS DOT Call
   39    | Exp PLUS Exp
   40    | Exp MINUS Exp
   41    | Exp ASSIGNOP Exp
   42    | Exp AND Exp
   43    | Exp OR Exp
   44    | Exp RELOP Exp
   45    | Exp STAR Exp
   46    | Exp DIV Exp
   47    | LP Exp RP
   48    | MINUS Exp
   49    | NOT Exp
   50    | Exp LB Exp RB

   51 Constant: ID
   52         | INT
   53         | INT8
   54         | INT16
   55         | FLOAT
   56         | BOOL

   57 Call: ID LP CallArgs RP
   58     | Call DOT ID
   59     | Call DOT ID LP CallArgs RP

   60 CallArgs: EMPTY
   61         | CallArg

   62 CallArg: Exp
   63        | Exp COMMA CallArg


Terminals, with rules where they appear

$end (0) 0
error (256)
TYPE (258) 11 27 32 33
STRUCT (259)
EXTENDS (260) 5
CLASS (261) 4 5
RETURN (262)
IF (263) 20
ELSE (264) 24
ELIF (265) 22
WHILE (266) 26
ID (267) 4 5 10 32 33 51 57 58 59
SPACE (268)
SEMI (269) 18 27
COMMA (270) 29 33 63
ASSIGNOP (271) 41
RELOP (272) 44
PLUS (273) 39
MINUS (274) 40 48
STAR (275) 45
DIV (276) 46
AND (277) 42
OR (278) 43
DOT (279) 37 38 58 59
NOT (280) 49
LP (281) 10 20 22 26 47 57 59
RP (282) 10 20 22 26 47 57 59
LB (283) 50
RB (284) 50
LC (285) 4 5 10 20 22 24 26
RC (286) 4 5 10 20 22 24 26
AERROR (287)
INT (288) 52
INT8 (289) 53
INT16 (290) 54
FLOAT (291) 55
NULLPTR (292)
STR (293)
BOOL (294) 56
EOL (295)
NEW (296)
THIS (297) 37 38
LINECOMMENT (298)
WEAKCOMMENT (299)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
Program (46)
    on left: 1, on right: 0
Classes (47)
    on left: 2 3, on right: 1 3
Class (48)
    on left: 4 5, on right: 2 3
Funs (49)
    on left: 6 7 8 9, on right: 4 5 8 9
Fun (50)
    on left: 10 11 12, on right: 6 8 11
Lines (51)
    on left: 13 14, on right: 10 14 20 22 24 26
Line (52)
    on left: 15 16 17 18 19, on right: 13 14
IfStm (53)
    on left: 20 21, on right: 16 21
ELIfStm (54)
    on left: 22 23, on right: 21
ElseStm (55)
    on left: 24 25, on right: 21
WhileStm (56)
    on left: 26, on right: 17
DeclareStm (57)
    on left: 27, on right: 7 9 19
VarStm (58)
    on left: 28 29, on right: 18 27 29
Args (59)
    on left: 30 31, on right: 10
Arg (60)
    on left: 32 33, on right: 30 33
EMPTY (61)
    on left: 34, on right: 12 15 23 25 31 60
Exp (62)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50, on right:
    20 22 26 28 29 39 40 41 42 43 44 45 46 47 48 49 50 62 63
Constant (63)
    on left: 51 52 53 54 55 56, on right: 35 37
Call (64)
    on left: 57 58 59, on right: 36 38 58 59
CallArgs (65)
    on left: 60 61, on right: 57 59
CallArg (66)
    on left: 62 63, on right: 61 63


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program  go to state 2
    Classes  go to state 3
    Class    go to state 4


State 1

    4 Class: CLASS . ID LC Funs RC
    5      | CLASS . ID EXTENDS ID LC Funs RC

    ID  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: Classes .
    3 Classes: Classes . Class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    Class  go to state 7


State 4

    2 Classes: Class .

    $default  reduce using rule 2 (Classes)


State 5

    4 Class: CLASS ID . LC Funs RC
    5      | CLASS ID . EXTENDS ID LC Funs RC

    EXTENDS  shift, and go to state 8
    LC       shift, and go to state 9


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 Classes: Classes Class .

    $default  reduce using rule 3 (Classes)


State 8

    5 Class: CLASS ID EXTENDS . ID LC Funs RC

    ID  shift, and go to state 10


State 9

    4 Class: CLASS ID LC . Funs RC

    TYPE  shift, and go to state 11
    ID    shift, and go to state 12

    TYPE      [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Funs        go to state 13
    Fun         go to state 14
    DeclareStm  go to state 15
    EMPTY       go to state 16


State 10

    5 Class: CLASS ID EXTENDS ID . LC Funs RC

    LC  shift, and go to state 17


State 11

   11 Fun: TYPE . Fun
   27 DeclareStm: TYPE . VarStm SEMI

    TYPE   shift, and go to state 18
    ID     shift, and go to state 19
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE      [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Fun       go to state 29
    VarStm    go to state 30
    EMPTY     go to state 16
    Exp       go to state 31
    Constant  go to state 32
    Call      go to state 33


State 12

   10 Fun: ID . LP Args RP LC Lines RC

    LP  shift, and go to state 34


State 13

    4 Class: CLASS ID LC Funs . RC
    8 Funs: Funs . Fun
    9     | Funs . DeclareStm

    TYPE  shift, and go to state 11
    ID    shift, and go to state 12
    RC    shift, and go to state 35

    TYPE  [reduce using rule 34 (EMPTY)]
    ID    [reduce using rule 34 (EMPTY)]
    RC    [reduce using rule 34 (EMPTY)]

    Fun         go to state 36
    DeclareStm  go to state 37
    EMPTY       go to state 16


State 14

    6 Funs: Fun .

    $default  reduce using rule 6 (Funs)


State 15

    7 Funs: DeclareStm .

    $default  reduce using rule 7 (Funs)


State 16

   12 Fun: EMPTY .

    $default  reduce using rule 12 (Fun)


State 17

    5 Class: CLASS ID EXTENDS ID LC . Funs RC

    TYPE  shift, and go to state 11
    ID    shift, and go to state 12

    TYPE      [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Funs        go to state 38
    Fun         go to state 14
    DeclareStm  go to state 15
    EMPTY       go to state 16


State 18

   11 Fun: TYPE . Fun

    TYPE  shift, and go to state 18
    ID    shift, and go to state 12

    TYPE      [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Fun    go to state 29
    EMPTY  go to state 16


State 19

   10 Fun: ID . LP Args RP LC Lines RC
   51 Constant: ID .
   57 Call: ID . LP CallArgs RP

    LP  shift, and go to state 39

    $default  reduce using rule 51 (Constant)


State 20

   48 Exp: MINUS . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 41
    Constant  go to state 32
    Call      go to state 33


State 21

   49 Exp: NOT . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 42
    Constant  go to state 32
    Call      go to state 33


State 22

   47 Exp: LP . Exp RP

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 43
    Constant  go to state 32
    Call      go to state 33


State 23

   52 Constant: INT .

    $default  reduce using rule 52 (Constant)


State 24

   53 Constant: INT8 .

    $default  reduce using rule 53 (Constant)


State 25

   54 Constant: INT16 .

    $default  reduce using rule 54 (Constant)


State 26

   55 Constant: FLOAT .

    $default  reduce using rule 55 (Constant)


State 27

   56 Constant: BOOL .

    $default  reduce using rule 56 (Constant)


State 28

   37 Exp: THIS . DOT Constant
   38    | THIS . DOT Call

    DOT  shift, and go to state 44


State 29

   11 Fun: TYPE Fun .

    $default  reduce using rule 11 (Fun)


State 30

   27 DeclareStm: TYPE VarStm . SEMI
   29 VarStm: VarStm . COMMA Exp

    SEMI   shift, and go to state 45
    COMMA  shift, and go to state 46


State 31

   28 VarStm: Exp .
   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    LB        shift, and go to state 55

    $default  reduce using rule 28 (VarStm)


State 32

   35 Exp: Constant .

    $default  reduce using rule 35 (Exp)


State 33

   36 Exp: Call .
   58 Call: Call . DOT ID
   59     | Call . DOT ID LP CallArgs RP

    DOT  shift, and go to state 56

    $default  reduce using rule 36 (Exp)


State 34

   10 Fun: ID LP . Args RP LC Lines RC

    TYPE  shift, and go to state 57

    $default  reduce using rule 34 (EMPTY)

    Args   go to state 58
    Arg    go to state 59
    EMPTY  go to state 60


State 35

    4 Class: CLASS ID LC Funs RC .

    $default  reduce using rule 4 (Class)


State 36

    8 Funs: Funs Fun .

    $default  reduce using rule 8 (Funs)


State 37

    9 Funs: Funs DeclareStm .

    $default  reduce using rule 9 (Funs)


State 38

    5 Class: CLASS ID EXTENDS ID LC Funs . RC
    8 Funs: Funs . Fun
    9     | Funs . DeclareStm

    TYPE  shift, and go to state 11
    ID    shift, and go to state 12
    RC    shift, and go to state 61

    TYPE  [reduce using rule 34 (EMPTY)]
    ID    [reduce using rule 34 (EMPTY)]
    RC    [reduce using rule 34 (EMPTY)]

    Fun         go to state 36
    DeclareStm  go to state 37
    EMPTY       go to state 16


State 39

   10 Fun: ID LP . Args RP LC Lines RC
   57 Call: ID LP . CallArgs RP

    TYPE   shift, and go to state 57
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    $default  reduce using rule 34 (EMPTY)

    Args      go to state 58
    Arg       go to state 59
    EMPTY     go to state 62
    Exp       go to state 63
    Constant  go to state 32
    Call      go to state 33
    CallArgs  go to state 64
    CallArg   go to state 65


State 40

   51 Constant: ID .
   57 Call: ID . LP CallArgs RP

    LP  shift, and go to state 66

    $default  reduce using rule 51 (Constant)


State 41

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   48    | MINUS Exp .
   50    | Exp . LB Exp RB

    STAR  shift, and go to state 51
    DIV   shift, and go to state 52
    LB    shift, and go to state 55

    $default  reduce using rule 48 (Exp)


State 42

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   49    | NOT Exp .
   50    | Exp . LB Exp RB

    LB  shift, and go to state 55

    $default  reduce using rule 49 (Exp)


State 43

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   47    | LP Exp . RP
   50    | Exp . LB Exp RB

    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    RP        shift, and go to state 67
    LB        shift, and go to state 55


State 44

   37 Exp: THIS DOT . Constant
   38    | THIS DOT . Call

    ID     shift, and go to state 40
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27

    Constant  go to state 68
    Call      go to state 69


State 45

   27 DeclareStm: TYPE VarStm SEMI .

    $default  reduce using rule 27 (DeclareStm)


State 46

   29 VarStm: VarStm COMMA . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 70
    Constant  go to state 32
    Call      go to state 33


State 47

   41 Exp: Exp ASSIGNOP . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 71
    Constant  go to state 32
    Call      go to state 33


State 48

   44 Exp: Exp RELOP . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 72
    Constant  go to state 32
    Call      go to state 33


State 49

   39 Exp: Exp PLUS . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 73
    Constant  go to state 32
    Call      go to state 33


State 50

   40 Exp: Exp MINUS . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 74
    Constant  go to state 32
    Call      go to state 33


State 51

   45 Exp: Exp STAR . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 75
    Constant  go to state 32
    Call      go to state 33


State 52

   46 Exp: Exp DIV . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 76
    Constant  go to state 32
    Call      go to state 33


State 53

   42 Exp: Exp AND . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 77
    Constant  go to state 32
    Call      go to state 33


State 54

   43 Exp: Exp OR . Exp

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 78
    Constant  go to state 32
    Call      go to state 33


State 55

   50 Exp: Exp LB . Exp RB

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 79
    Constant  go to state 32
    Call      go to state 33


State 56

   58 Call: Call DOT . ID
   59     | Call DOT . ID LP CallArgs RP

    ID  shift, and go to state 80


State 57

   32 Arg: TYPE . ID
   33    | TYPE . ID COMMA Arg

    ID  shift, and go to state 81


State 58

   10 Fun: ID LP Args . RP LC Lines RC

    RP  shift, and go to state 82


State 59

   30 Args: Arg .

    $default  reduce using rule 30 (Args)


State 60

   31 Args: EMPTY .

    $default  reduce using rule 31 (Args)


State 61

    5 Class: CLASS ID EXTENDS ID LC Funs RC .

    $default  reduce using rule 5 (Class)


State 62

   31 Args: EMPTY .
   60 CallArgs: EMPTY .

    RP        reduce using rule 31 (Args)
    RP        [reduce using rule 60 (CallArgs)]
    $default  reduce using rule 31 (Args)


State 63

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB
   62 CallArg: Exp .
   63        | Exp . COMMA CallArg

    COMMA     shift, and go to state 83
    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    LB        shift, and go to state 55

    $default  reduce using rule 62 (CallArg)


State 64

   57 Call: ID LP CallArgs . RP

    RP  shift, and go to state 84


State 65

   61 CallArgs: CallArg .

    $default  reduce using rule 61 (CallArgs)


State 66

   57 Call: ID LP . CallArgs RP

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    $default  reduce using rule 34 (EMPTY)

    EMPTY     go to state 85
    Exp       go to state 63
    Constant  go to state 32
    Call      go to state 33
    CallArgs  go to state 64
    CallArg   go to state 65


State 67

   47 Exp: LP Exp RP .

    $default  reduce using rule 47 (Exp)


State 68

   37 Exp: THIS DOT Constant .

    $default  reduce using rule 37 (Exp)


State 69

   38 Exp: THIS DOT Call .
   58 Call: Call . DOT ID
   59     | Call . DOT ID LP CallArgs RP

    DOT  shift, and go to state 56

    $default  reduce using rule 38 (Exp)


State 70

   29 VarStm: VarStm COMMA Exp .
   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    LB        shift, and go to state 55

    $default  reduce using rule 29 (VarStm)


State 71

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   41    | Exp ASSIGNOP Exp .
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    LB        shift, and go to state 55

    $default  reduce using rule 41 (Exp)


State 72

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   44    | Exp RELOP Exp .
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    STAR   shift, and go to state 51
    DIV    shift, and go to state 52
    LB     shift, and go to state 55

    $default  reduce using rule 44 (Exp)


State 73

   39 Exp: Exp . PLUS Exp
   39    | Exp PLUS Exp .
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    STAR  shift, and go to state 51
    DIV   shift, and go to state 52
    LB    shift, and go to state 55

    $default  reduce using rule 39 (Exp)


State 74

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   40    | Exp MINUS Exp .
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    STAR  shift, and go to state 51
    DIV   shift, and go to state 52
    LB    shift, and go to state 55

    $default  reduce using rule 40 (Exp)


State 75

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   45    | Exp STAR Exp .
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    LB  shift, and go to state 55

    $default  reduce using rule 45 (Exp)


State 76

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   46    | Exp DIV Exp .
   50    | Exp . LB Exp RB

    LB  shift, and go to state 55

    $default  reduce using rule 46 (Exp)


State 77

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   42    | Exp AND Exp .
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    RELOP  shift, and go to state 48
    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    STAR   shift, and go to state 51
    DIV    shift, and go to state 52
    LB     shift, and go to state 55

    $default  reduce using rule 42 (Exp)


State 78

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   43    | Exp OR Exp .
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    RELOP  shift, and go to state 48
    PLUS   shift, and go to state 49
    MINUS  shift, and go to state 50
    STAR   shift, and go to state 51
    DIV    shift, and go to state 52
    AND    shift, and go to state 53
    LB     shift, and go to state 55

    $default  reduce using rule 43 (Exp)


State 79

   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB
   50    | Exp LB Exp . RB

    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    LB        shift, and go to state 55
    RB        shift, and go to state 86


State 80

   58 Call: Call DOT ID .
   59     | Call DOT ID . LP CallArgs RP

    LP  shift, and go to state 87

    $default  reduce using rule 58 (Call)


State 81

   32 Arg: TYPE ID .
   33    | TYPE ID . COMMA Arg

    COMMA  shift, and go to state 88

    $default  reduce using rule 32 (Arg)


State 82

   10 Fun: ID LP Args RP . LC Lines RC

    LC  shift, and go to state 89


State 83

   63 CallArg: Exp COMMA . CallArg

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 63
    Constant  go to state 32
    Call      go to state 33
    CallArg   go to state 90


State 84

   57 Call: ID LP CallArgs RP .

    $default  reduce using rule 57 (Call)


State 85

   60 CallArgs: EMPTY .

    $default  reduce using rule 60 (CallArgs)


State 86

   50 Exp: Exp LB Exp RB .

    $default  reduce using rule 50 (Exp)


State 87

   59 Call: Call DOT ID LP . CallArgs RP

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    $default  reduce using rule 34 (EMPTY)

    EMPTY     go to state 85
    Exp       go to state 63
    Constant  go to state 32
    Call      go to state 33
    CallArgs  go to state 91
    CallArg   go to state 65


State 88

   33 Arg: TYPE ID COMMA . Arg

    TYPE  shift, and go to state 57

    Arg  go to state 92


State 89

   10 Fun: ID LP Args RP LC . Lines RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE      [reduce using rule 34 (EMPTY)]
    IF        [reduce using rule 34 (EMPTY)]
    WHILE     [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    MINUS     [reduce using rule 34 (EMPTY)]
    NOT       [reduce using rule 34 (EMPTY)]
    LP        [reduce using rule 34 (EMPTY)]
    INT       [reduce using rule 34 (EMPTY)]
    INT8      [reduce using rule 34 (EMPTY)]
    INT16     [reduce using rule 34 (EMPTY)]
    FLOAT     [reduce using rule 34 (EMPTY)]
    BOOL      [reduce using rule 34 (EMPTY)]
    THIS      [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Lines       go to state 96
    Line        go to state 97
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 90

   63 CallArg: Exp COMMA CallArg .

    $default  reduce using rule 63 (CallArg)


State 91

   59 Call: Call DOT ID LP CallArgs . RP

    RP  shift, and go to state 103


State 92

   33 Arg: TYPE ID COMMA Arg .

    $default  reduce using rule 33 (Arg)


State 93

   27 DeclareStm: TYPE . VarStm SEMI

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    VarStm    go to state 30
    Exp       go to state 31
    Constant  go to state 32
    Call      go to state 33


State 94

   20 IfStm: IF . LP Exp RP LC Lines RC

    LP  shift, and go to state 104


State 95

   26 WhileStm: WHILE . LP Exp RP LC Lines RC

    LP  shift, and go to state 105


State 96

   10 Fun: ID LP Args RP LC Lines . RC
   14 Lines: Lines . Line

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    RC     shift, and go to state 106
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE   [reduce using rule 34 (EMPTY)]
    IF     [reduce using rule 34 (EMPTY)]
    WHILE  [reduce using rule 34 (EMPTY)]
    ID     [reduce using rule 34 (EMPTY)]
    MINUS  [reduce using rule 34 (EMPTY)]
    NOT    [reduce using rule 34 (EMPTY)]
    LP     [reduce using rule 34 (EMPTY)]
    RC     [reduce using rule 34 (EMPTY)]
    INT    [reduce using rule 34 (EMPTY)]
    INT8   [reduce using rule 34 (EMPTY)]
    INT16  [reduce using rule 34 (EMPTY)]
    FLOAT  [reduce using rule 34 (EMPTY)]
    BOOL   [reduce using rule 34 (EMPTY)]
    THIS   [reduce using rule 34 (EMPTY)]

    Line        go to state 107
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 97

   13 Lines: Line .

    $default  reduce using rule 13 (Lines)


State 98

   16 Line: IfStm .
   21 IfStm: IfStm . ELIfStm ElseStm

    ELIF  shift, and go to state 108

    TYPE      reduce using rule 16 (Line)
    TYPE      [reduce using rule 34 (EMPTY)]
    IF        reduce using rule 16 (Line)
    IF        [reduce using rule 34 (EMPTY)]
    ELSE      reduce using rule 34 (EMPTY)
    ELIF      [reduce using rule 34 (EMPTY)]
    WHILE     reduce using rule 16 (Line)
    WHILE     [reduce using rule 34 (EMPTY)]
    ID        reduce using rule 16 (Line)
    ID        [reduce using rule 34 (EMPTY)]
    MINUS     reduce using rule 16 (Line)
    MINUS     [reduce using rule 34 (EMPTY)]
    NOT       reduce using rule 16 (Line)
    NOT       [reduce using rule 34 (EMPTY)]
    LP        reduce using rule 16 (Line)
    LP        [reduce using rule 34 (EMPTY)]
    RC        reduce using rule 16 (Line)
    RC        [reduce using rule 34 (EMPTY)]
    INT       reduce using rule 16 (Line)
    INT       [reduce using rule 34 (EMPTY)]
    INT8      reduce using rule 16 (Line)
    INT8      [reduce using rule 34 (EMPTY)]
    INT16     reduce using rule 16 (Line)
    INT16     [reduce using rule 34 (EMPTY)]
    FLOAT     reduce using rule 16 (Line)
    FLOAT     [reduce using rule 34 (EMPTY)]
    BOOL      reduce using rule 16 (Line)
    BOOL      [reduce using rule 34 (EMPTY)]
    THIS      reduce using rule 16 (Line)
    THIS      [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 16 (Line)

    ELIfStm  go to state 109
    EMPTY    go to state 110


State 99

   17 Line: WhileStm .

    $default  reduce using rule 17 (Line)


State 100

   19 Line: DeclareStm .

    $default  reduce using rule 19 (Line)


State 101

   18 Line: VarStm . SEMI
   29 VarStm: VarStm . COMMA Exp

    SEMI   shift, and go to state 111
    COMMA  shift, and go to state 46


State 102

   15 Line: EMPTY .

    $default  reduce using rule 15 (Line)


State 103

   59 Call: Call DOT ID LP CallArgs RP .

    $default  reduce using rule 59 (Call)


State 104

   20 IfStm: IF LP . Exp RP LC Lines RC

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 112
    Constant  go to state 32
    Call      go to state 33


State 105

   26 WhileStm: WHILE LP . Exp RP LC Lines RC

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 113
    Constant  go to state 32
    Call      go to state 33


State 106

   10 Fun: ID LP Args RP LC Lines RC .

    $default  reduce using rule 10 (Fun)


State 107

   14 Lines: Lines Line .

    $default  reduce using rule 14 (Lines)


State 108

   22 ELIfStm: ELIF . LP Exp RP LC Lines RC

    LP  shift, and go to state 114


State 109

   21 IfStm: IfStm ELIfStm . ElseStm

    ELSE  shift, and go to state 115

    ELSE      [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    ElseStm  go to state 116
    EMPTY    go to state 117


State 110

   23 ELIfStm: EMPTY .

    $default  reduce using rule 23 (ELIfStm)


State 111

   18 Line: VarStm SEMI .

    $default  reduce using rule 18 (Line)


State 112

   20 IfStm: IF LP Exp . RP LC Lines RC
   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    RP        shift, and go to state 118
    LB        shift, and go to state 55


State 113

   26 WhileStm: WHILE LP Exp . RP LC Lines RC
   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    RP        shift, and go to state 119
    LB        shift, and go to state 55


State 114

   22 ELIfStm: ELIF LP . Exp RP LC Lines RC

    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    Exp       go to state 120
    Constant  go to state 32
    Call      go to state 33


State 115

   24 ElseStm: ELSE . LC Lines RC

    LC  shift, and go to state 121


State 116

   21 IfStm: IfStm ELIfStm ElseStm .

    $default  reduce using rule 21 (IfStm)


State 117

   25 ElseStm: EMPTY .

    $default  reduce using rule 25 (ElseStm)


State 118

   20 IfStm: IF LP Exp RP . LC Lines RC

    LC  shift, and go to state 122


State 119

   26 WhileStm: WHILE LP Exp RP . LC Lines RC

    LC  shift, and go to state 123


State 120

   22 ELIfStm: ELIF LP Exp . RP LC Lines RC
   39 Exp: Exp . PLUS Exp
   40    | Exp . MINUS Exp
   41    | Exp . ASSIGNOP Exp
   42    | Exp . AND Exp
   43    | Exp . OR Exp
   44    | Exp . RELOP Exp
   45    | Exp . STAR Exp
   46    | Exp . DIV Exp
   50    | Exp . LB Exp RB

    ASSIGNOP  shift, and go to state 47
    RELOP     shift, and go to state 48
    PLUS      shift, and go to state 49
    MINUS     shift, and go to state 50
    STAR      shift, and go to state 51
    DIV       shift, and go to state 52
    AND       shift, and go to state 53
    OR        shift, and go to state 54
    RP        shift, and go to state 124
    LB        shift, and go to state 55


State 121

   24 ElseStm: ELSE LC . Lines RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE      [reduce using rule 34 (EMPTY)]
    IF        [reduce using rule 34 (EMPTY)]
    WHILE     [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    MINUS     [reduce using rule 34 (EMPTY)]
    NOT       [reduce using rule 34 (EMPTY)]
    LP        [reduce using rule 34 (EMPTY)]
    INT       [reduce using rule 34 (EMPTY)]
    INT8      [reduce using rule 34 (EMPTY)]
    INT16     [reduce using rule 34 (EMPTY)]
    FLOAT     [reduce using rule 34 (EMPTY)]
    BOOL      [reduce using rule 34 (EMPTY)]
    THIS      [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Lines       go to state 125
    Line        go to state 97
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 122

   20 IfStm: IF LP Exp RP LC . Lines RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE      [reduce using rule 34 (EMPTY)]
    IF        [reduce using rule 34 (EMPTY)]
    WHILE     [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    MINUS     [reduce using rule 34 (EMPTY)]
    NOT       [reduce using rule 34 (EMPTY)]
    LP        [reduce using rule 34 (EMPTY)]
    INT       [reduce using rule 34 (EMPTY)]
    INT8      [reduce using rule 34 (EMPTY)]
    INT16     [reduce using rule 34 (EMPTY)]
    FLOAT     [reduce using rule 34 (EMPTY)]
    BOOL      [reduce using rule 34 (EMPTY)]
    THIS      [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Lines       go to state 126
    Line        go to state 97
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 123

   26 WhileStm: WHILE LP Exp RP LC . Lines RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE      [reduce using rule 34 (EMPTY)]
    IF        [reduce using rule 34 (EMPTY)]
    WHILE     [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    MINUS     [reduce using rule 34 (EMPTY)]
    NOT       [reduce using rule 34 (EMPTY)]
    LP        [reduce using rule 34 (EMPTY)]
    INT       [reduce using rule 34 (EMPTY)]
    INT8      [reduce using rule 34 (EMPTY)]
    INT16     [reduce using rule 34 (EMPTY)]
    FLOAT     [reduce using rule 34 (EMPTY)]
    BOOL      [reduce using rule 34 (EMPTY)]
    THIS      [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Lines       go to state 127
    Line        go to state 97
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 124

   22 ELIfStm: ELIF LP Exp RP . LC Lines RC

    LC  shift, and go to state 128


State 125

   14 Lines: Lines . Line
   24 ElseStm: ELSE LC Lines . RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    RC     shift, and go to state 129
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE   [reduce using rule 34 (EMPTY)]
    IF     [reduce using rule 34 (EMPTY)]
    WHILE  [reduce using rule 34 (EMPTY)]
    ID     [reduce using rule 34 (EMPTY)]
    MINUS  [reduce using rule 34 (EMPTY)]
    NOT    [reduce using rule 34 (EMPTY)]
    LP     [reduce using rule 34 (EMPTY)]
    RC     [reduce using rule 34 (EMPTY)]
    INT    [reduce using rule 34 (EMPTY)]
    INT8   [reduce using rule 34 (EMPTY)]
    INT16  [reduce using rule 34 (EMPTY)]
    FLOAT  [reduce using rule 34 (EMPTY)]
    BOOL   [reduce using rule 34 (EMPTY)]
    THIS   [reduce using rule 34 (EMPTY)]

    Line        go to state 107
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 126

   14 Lines: Lines . Line
   20 IfStm: IF LP Exp RP LC Lines . RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    RC     shift, and go to state 130
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE   [reduce using rule 34 (EMPTY)]
    IF     [reduce using rule 34 (EMPTY)]
    WHILE  [reduce using rule 34 (EMPTY)]
    ID     [reduce using rule 34 (EMPTY)]
    MINUS  [reduce using rule 34 (EMPTY)]
    NOT    [reduce using rule 34 (EMPTY)]
    LP     [reduce using rule 34 (EMPTY)]
    RC     [reduce using rule 34 (EMPTY)]
    INT    [reduce using rule 34 (EMPTY)]
    INT8   [reduce using rule 34 (EMPTY)]
    INT16  [reduce using rule 34 (EMPTY)]
    FLOAT  [reduce using rule 34 (EMPTY)]
    BOOL   [reduce using rule 34 (EMPTY)]
    THIS   [reduce using rule 34 (EMPTY)]

    Line        go to state 107
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 127

   14 Lines: Lines . Line
   26 WhileStm: WHILE LP Exp RP LC Lines . RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    RC     shift, and go to state 131
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE   [reduce using rule 34 (EMPTY)]
    IF     [reduce using rule 34 (EMPTY)]
    WHILE  [reduce using rule 34 (EMPTY)]
    ID     [reduce using rule 34 (EMPTY)]
    MINUS  [reduce using rule 34 (EMPTY)]
    NOT    [reduce using rule 34 (EMPTY)]
    LP     [reduce using rule 34 (EMPTY)]
    RC     [reduce using rule 34 (EMPTY)]
    INT    [reduce using rule 34 (EMPTY)]
    INT8   [reduce using rule 34 (EMPTY)]
    INT16  [reduce using rule 34 (EMPTY)]
    FLOAT  [reduce using rule 34 (EMPTY)]
    BOOL   [reduce using rule 34 (EMPTY)]
    THIS   [reduce using rule 34 (EMPTY)]

    Line        go to state 107
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 128

   22 ELIfStm: ELIF LP Exp RP LC . Lines RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE      [reduce using rule 34 (EMPTY)]
    IF        [reduce using rule 34 (EMPTY)]
    WHILE     [reduce using rule 34 (EMPTY)]
    ID        [reduce using rule 34 (EMPTY)]
    MINUS     [reduce using rule 34 (EMPTY)]
    NOT       [reduce using rule 34 (EMPTY)]
    LP        [reduce using rule 34 (EMPTY)]
    INT       [reduce using rule 34 (EMPTY)]
    INT8      [reduce using rule 34 (EMPTY)]
    INT16     [reduce using rule 34 (EMPTY)]
    FLOAT     [reduce using rule 34 (EMPTY)]
    BOOL      [reduce using rule 34 (EMPTY)]
    THIS      [reduce using rule 34 (EMPTY)]
    $default  reduce using rule 34 (EMPTY)

    Lines       go to state 132
    Line        go to state 97
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 129

   24 ElseStm: ELSE LC Lines RC .

    $default  reduce using rule 24 (ElseStm)


State 130

   20 IfStm: IF LP Exp RP LC Lines RC .

    $default  reduce using rule 20 (IfStm)


State 131

   26 WhileStm: WHILE LP Exp RP LC Lines RC .

    $default  reduce using rule 26 (WhileStm)


State 132

   14 Lines: Lines . Line
   22 ELIfStm: ELIF LP Exp RP LC Lines . RC

    TYPE   shift, and go to state 93
    IF     shift, and go to state 94
    WHILE  shift, and go to state 95
    ID     shift, and go to state 40
    MINUS  shift, and go to state 20
    NOT    shift, and go to state 21
    LP     shift, and go to state 22
    RC     shift, and go to state 133
    INT    shift, and go to state 23
    INT8   shift, and go to state 24
    INT16  shift, and go to state 25
    FLOAT  shift, and go to state 26
    BOOL   shift, and go to state 27
    THIS   shift, and go to state 28

    TYPE   [reduce using rule 34 (EMPTY)]
    IF     [reduce using rule 34 (EMPTY)]
    WHILE  [reduce using rule 34 (EMPTY)]
    ID     [reduce using rule 34 (EMPTY)]
    MINUS  [reduce using rule 34 (EMPTY)]
    NOT    [reduce using rule 34 (EMPTY)]
    LP     [reduce using rule 34 (EMPTY)]
    RC     [reduce using rule 34 (EMPTY)]
    INT    [reduce using rule 34 (EMPTY)]
    INT8   [reduce using rule 34 (EMPTY)]
    INT16  [reduce using rule 34 (EMPTY)]
    FLOAT  [reduce using rule 34 (EMPTY)]
    BOOL   [reduce using rule 34 (EMPTY)]
    THIS   [reduce using rule 34 (EMPTY)]

    Line        go to state 107
    IfStm       go to state 98
    WhileStm    go to state 99
    DeclareStm  go to state 100
    VarStm      go to state 101
    EMPTY       go to state 102
    Exp         go to state 31
    Constant    go to state 32
    Call        go to state 33


State 133

   22 ELIfStm: ELIF LP Exp RP LC Lines RC .

    $default  reduce using rule 22 (ELIfStm)
