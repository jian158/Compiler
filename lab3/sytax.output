Terminals unused in grammar

   STRUCT
   ELIF
   SPACE
   AERROR
   NULLPTR
   EOL


状态 78conflicts: 1 shift/reduce
状态 82conflicts: 21 shift/reduce
状态 122conflicts: 21 shift/reduce, 1 reduce/reduce
状态 124conflicts: 1 shift/reduce, 22 reduce/reduce
状态 153conflicts: 21 shift/reduce
状态 154conflicts: 21 shift/reduce
状态 183conflicts: 21 shift/reduce
状态 191conflicts: 21 shift/reduce
状态 193conflicts: 21 shift/reduce
状态 202conflicts: 21 shift/reduce


语法

    0 $accept: Program $end

    1 Program: ClassDefs

    2 ClassDefs: Class
    3          | Class ClassDefs

    4 Class: CLASS ID LC ClassStms RC
    5      | CLASS ID EXTENDS ID LC ClassStms RC

    6 ClassStms: ClassStm ClassStms
    7          | ClassStm

    8 ClassStm: Fun
    9         | DeclareStm

   10 Fun: VarType ID LP Args RP LC BaseStm RC
   11    | STATIC VarType ID LP Args RP LC BaseStm RC
   12    | ID LP Args RP LC BaseStm RC

   13 VarType: TYPE Arrays
   14        | ID Arrays
   15        | TYPE
   16        | ID

   17 Arrays: LB RB

   18 BaseStm: Lines

   19 Lines: Line
   20      | Line Lines

   21 Line: EMPTY
   22     | IfStm
   23     | WhileStm
   24     | VarStm SEMI
   25     | DeclareStm
   26     | ReturnStm
   27     | BreakStm
   28     | ForStm

   29 BreakStm: BREAK SEMI

   30 IfStm: IF LP BoolExp RP LC BaseStm RC
   31      | IfStm ElseStm

   32 ElseStm: ELSE LC BaseStm RC
   33        | EMPTY

   34 WhileStm: WHILE LP BoolExp RP LC BaseStm RC

   35 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP LC BaseStm RC

   36 DeclareStm: VarType DeclareVarStm SEMI
   37           | STATIC VarType DeclareVarStm SEMI
   38           | FINAL VarType DeclareVarStm SEMI
   39           | STATIC FINAL VarType DeclareVarStm SEMI

   40 DeclareVarStm: ID
   41              | ID ASSIGNOP Exp
   42              | DeclareVarStm COMMA DeclareVarStm

   43 VarStm: Exp

   44 ReturnStm: RETURN SEMI
   45          | RETURN Exp SEMI

   46 Args: EMPTY
   47     | Arg

   48 Arg: VarType ID
   49    | VarType ID COMMA Arg

   50 BoolExp: Exp RELOP Exp
   51        | Exp AND Exp
   52        | Exp OR Exp

   53 Exp: Constant
   54    | Call
   55    | ID DOT Call
   56    | ClassPointer DOT Call
   57    | IdStm
   58    | Lvalue ASSIGNOP Exp
   59    | Exp PLUS Exp
   60    | Exp MINUS Exp
   61    | BoolExp
   62    | Exp STAR Exp
   63    | Exp DIV Exp
   64    | LP Exp RP
   65    | MINUS Exp
   66    | NOT Exp
   67    | ArrayIndex
   68    | DPLUS IdStm
   69    | IdStm DPLUS
   70    | DMINUS IdStm
   71    | IdStm DMINUS
   72    | NEW Call
   73    | NEW ArrayIndex

   74 IdStm: ID
   75      | ID DOT ID
   76      | ClassPointer DOT ID

   77 ClassPointer: THIS
   78             | SUPER

   79 ArrayIndex: TYPE LB Exp RB
   80           | ID LB Exp RB

   81 Lvalue: IdStm
   82       | ArrayIndex

   83 Constant: INT
   84         | FLOAT
   85         | BOOL
   86         | STR

   87 Call: ID LP CallArgs RP

   88 CallArgs: EMPTY
   89         | CallArg

   90 CallArg: Exp
   91        | Exp COMMA CallArg

   92 EMPTY: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
STATIC (258) 11 37 39
FINAL (259) 38 39
BREAK (260) 29
TYPE (261) 13 15 79
STRUCT (262)
EXTENDS (263) 5
CLASS (264) 4 5
RETURN (265) 44 45
IF (266) 30
ELSE (267) 32
ELIF (268)
FOR (269) 35
WHILE (270) 34
ID (271) 4 5 10 11 12 14 16 40 41 48 49 55 74 75 76 80 87
SPACE (272)
SEMI (273) 24 29 35 36 37 38 39 44 45
COMMA (274) 42 49 91
ASSIGNOP (275) 41 58
RELOP (276) 50
DOT (277) 55 56 75 76
NOT (278) 66
LP (279) 10 11 12 30 34 35 64 87
RP (280) 10 11 12 30 34 35 64 87
LB (281) 17 79 80
RB (282) 17 79 80
LC (283) 4 5 10 11 12 30 32 34 35
RC (284) 4 5 10 11 12 30 32 34 35
AERROR (285)
DPLUS (286) 68 69
DMINUS (287) 70 71
INT (288) 83
FLOAT (289) 84
NULLPTR (290)
STR (291) 86
BOOL (292) 85
PLUS (293) 59
MINUS (294) 60 65
STAR (295) 62
DIV (296) 63
OR (297) 52
AND (298) 51
EOL (299)
NEW (300) 72 73
THIS (301) 77
SUPER (302) 78


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
Program (49)
    on left: 1, on right: 0
ClassDefs (50)
    on left: 2 3, on right: 1 3
Class (51)
    on left: 4 5, on right: 2 3
ClassStms (52)
    on left: 6 7, on right: 4 5 6
ClassStm (53)
    on left: 8 9, on right: 6 7
Fun (54)
    on left: 10 11 12, on right: 8
VarType (55)
    on left: 13 14 15 16, on right: 10 11 36 37 38 39 48 49
Arrays (56)
    on left: 17, on right: 13 14
BaseStm (57)
    on left: 18, on right: 10 11 12 30 32 34 35
Lines (58)
    on left: 19 20, on right: 18 20
Line (59)
    on left: 21 22 23 24 25 26 27 28, on right: 19 20
BreakStm (60)
    on left: 29, on right: 27
IfStm (61)
    on left: 30 31, on right: 22 31
ElseStm (62)
    on left: 32 33, on right: 31
WhileStm (63)
    on left: 34, on right: 23
ForStm (64)
    on left: 35, on right: 28
DeclareStm (65)
    on left: 36 37 38 39, on right: 9 25
DeclareVarStm (66)
    on left: 40 41 42, on right: 36 37 38 39 42
VarStm (67)
    on left: 43, on right: 24
ReturnStm (68)
    on left: 44 45, on right: 26
Args (69)
    on left: 46 47, on right: 10 11 12
Arg (70)
    on left: 48 49, on right: 47 49
BoolExp (71)
    on left: 50 51 52, on right: 30 34 35 61
Exp (72)
    on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
    71 72 73, on right: 35 41 43 45 50 51 52 58 59 60 62 63 64 65 66
    79 80 90 91
IdStm (73)
    on left: 74 75 76, on right: 57 68 69 70 71 81
ClassPointer (74)
    on left: 77 78, on right: 56 76
ArrayIndex (75)
    on left: 79 80, on right: 67 73 82
Lvalue (76)
    on left: 81 82, on right: 58
Constant (77)
    on left: 83 84 85 86, on right: 53
Call (78)
    on left: 87, on right: 54 55 56 72
CallArgs (79)
    on left: 88 89, on right: 87
CallArg (80)
    on left: 90 91, on right: 89 91
EMPTY (81)
    on left: 92, on right: 21 33 46 88


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    转到状态 2
    ClassDefs  转到状态 3
    Class      转到状态 4


State 1

    4 Class: CLASS . ID LC ClassStms RC
    5      | CLASS . ID EXTENDS ID LC ClassStms RC

    ID  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: ClassDefs .

    $default  reduce using rule 1 (Program)


State 4

    2 ClassDefs: Class .
    3          | Class . ClassDefs

    CLASS  shift, and go to state 1

    $default  reduce using rule 2 (ClassDefs)

    ClassDefs  转到状态 7
    Class      转到状态 4


State 5

    4 Class: CLASS ID . LC ClassStms RC
    5      | CLASS ID . EXTENDS ID LC ClassStms RC

    EXTENDS  shift, and go to state 8
    LC       shift, and go to state 9


State 6

    0 $accept: Program $end .

    $default  接受


State 7

    3 ClassDefs: Class ClassDefs .

    $default  reduce using rule 3 (ClassDefs)


State 8

    5 Class: CLASS ID EXTENDS . ID LC ClassStms RC

    ID  shift, and go to state 10


State 9

    4 Class: CLASS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    ClassStms   转到状态 15
    ClassStm    转到状态 16
    Fun         转到状态 17
    VarType     转到状态 18
    DeclareStm  转到状态 19


State 10

    5 Class: CLASS ID EXTENDS ID . LC ClassStms RC

    LC  shift, and go to state 20


State 11

   11 Fun: STATIC . VarType ID LP Args RP LC BaseStm RC
   37 DeclareStm: STATIC . VarType DeclareVarStm SEMI
   39           | STATIC . FINAL VarType DeclareVarStm SEMI

    FINAL  shift, and go to state 21
    TYPE   shift, and go to state 13
    ID     shift, and go to state 22

    VarType  转到状态 23


State 12

   38 DeclareStm: FINAL . VarType DeclareVarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  转到状态 24


State 13

   13 VarType: TYPE . Arrays
   15        | TYPE .

    LB  shift, and go to state 25

    $default  reduce using rule 15 (VarType)

    Arrays  转到状态 26


State 14

   12 Fun: ID . LP Args RP LC BaseStm RC
   14 VarType: ID . Arrays
   16        | ID .

    LP  shift, and go to state 27
    LB  shift, and go to state 25

    $default  reduce using rule 16 (VarType)

    Arrays  转到状态 28


State 15

    4 Class: CLASS ID LC ClassStms . RC

    RC  shift, and go to state 29


State 16

    6 ClassStms: ClassStm . ClassStms
    7          | ClassStm .

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    $default  reduce using rule 7 (ClassStms)

    ClassStms   转到状态 30
    ClassStm    转到状态 16
    Fun         转到状态 17
    VarType     转到状态 18
    DeclareStm  转到状态 19


State 17

    8 ClassStm: Fun .

    $default  reduce using rule 8 (ClassStm)


State 18

   10 Fun: VarType . ID LP Args RP LC BaseStm RC
   36 DeclareStm: VarType . DeclareVarStm SEMI

    ID  shift, and go to state 31

    DeclareVarStm  转到状态 32


State 19

    9 ClassStm: DeclareStm .

    $default  reduce using rule 9 (ClassStm)


State 20

    5 Class: CLASS ID EXTENDS ID LC . ClassStms RC

    STATIC  shift, and go to state 11
    FINAL   shift, and go to state 12
    TYPE    shift, and go to state 13
    ID      shift, and go to state 14

    ClassStms   转到状态 33
    ClassStm    转到状态 16
    Fun         转到状态 17
    VarType     转到状态 18
    DeclareStm  转到状态 19


State 21

   39 DeclareStm: STATIC FINAL . VarType DeclareVarStm SEMI

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  转到状态 34


State 22

   14 VarType: ID . Arrays
   16        | ID .

    LB  shift, and go to state 25

    $default  reduce using rule 16 (VarType)

    Arrays  转到状态 28


State 23

   11 Fun: STATIC VarType . ID LP Args RP LC BaseStm RC
   37 DeclareStm: STATIC VarType . DeclareVarStm SEMI

    ID  shift, and go to state 35

    DeclareVarStm  转到状态 36


State 24

   38 DeclareStm: FINAL VarType . DeclareVarStm SEMI

    ID  shift, and go to state 37

    DeclareVarStm  转到状态 38


State 25

   17 Arrays: LB . RB

    RB  shift, and go to state 39


State 26

   13 VarType: TYPE Arrays .

    $default  reduce using rule 13 (VarType)


State 27

   12 Fun: ID LP . Args RP LC BaseStm RC

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    $default  reduce using rule 92 (EMPTY)

    VarType  转到状态 40
    Args     转到状态 41
    Arg      转到状态 42
    EMPTY    转到状态 43


State 28

   14 VarType: ID Arrays .

    $default  reduce using rule 14 (VarType)


State 29

    4 Class: CLASS ID LC ClassStms RC .

    $default  reduce using rule 4 (Class)


State 30

    6 ClassStms: ClassStm ClassStms .

    $default  reduce using rule 6 (ClassStms)


State 31

   10 Fun: VarType ID . LP Args RP LC BaseStm RC
   40 DeclareVarStm: ID .
   41              | ID . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 44
    LP        shift, and go to state 45

    $default  reduce using rule 40 (DeclareVarStm)


State 32

   36 DeclareStm: VarType DeclareVarStm . SEMI
   42 DeclareVarStm: DeclareVarStm . COMMA DeclareVarStm

    SEMI   shift, and go to state 46
    COMMA  shift, and go to state 47


State 33

    5 Class: CLASS ID EXTENDS ID LC ClassStms . RC

    RC  shift, and go to state 48


State 34

   39 DeclareStm: STATIC FINAL VarType . DeclareVarStm SEMI

    ID  shift, and go to state 37

    DeclareVarStm  转到状态 49


State 35

   11 Fun: STATIC VarType ID . LP Args RP LC BaseStm RC
   40 DeclareVarStm: ID .
   41              | ID . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 44
    LP        shift, and go to state 50

    $default  reduce using rule 40 (DeclareVarStm)


State 36

   37 DeclareStm: STATIC VarType DeclareVarStm . SEMI
   42 DeclareVarStm: DeclareVarStm . COMMA DeclareVarStm

    SEMI   shift, and go to state 51
    COMMA  shift, and go to state 47


State 37

   40 DeclareVarStm: ID .
   41              | ID . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 44

    $default  reduce using rule 40 (DeclareVarStm)


State 38

   38 DeclareStm: FINAL VarType DeclareVarStm . SEMI
   42 DeclareVarStm: DeclareVarStm . COMMA DeclareVarStm

    SEMI   shift, and go to state 52
    COMMA  shift, and go to state 47


State 39

   17 Arrays: LB RB .

    $default  reduce using rule 17 (Arrays)


State 40

   48 Arg: VarType . ID
   49    | VarType . ID COMMA Arg

    ID  shift, and go to state 53


State 41

   12 Fun: ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 54


State 42

   47 Args: Arg .

    $default  reduce using rule 47 (Args)


State 43

   46 Args: EMPTY .

    $default  reduce using rule 46 (Args)


State 44

   41 DeclareVarStm: ID ASSIGNOP . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 70
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 45

   10 Fun: VarType ID LP . Args RP LC BaseStm RC

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    $default  reduce using rule 92 (EMPTY)

    VarType  转到状态 40
    Args     转到状态 77
    Arg      转到状态 42
    EMPTY    转到状态 43


State 46

   36 DeclareStm: VarType DeclareVarStm SEMI .

    $default  reduce using rule 36 (DeclareStm)


State 47

   42 DeclareVarStm: DeclareVarStm COMMA . DeclareVarStm

    ID  shift, and go to state 37

    DeclareVarStm  转到状态 78


State 48

    5 Class: CLASS ID EXTENDS ID LC ClassStms RC .

    $default  reduce using rule 5 (Class)


State 49

   39 DeclareStm: STATIC FINAL VarType DeclareVarStm . SEMI
   42 DeclareVarStm: DeclareVarStm . COMMA DeclareVarStm

    SEMI   shift, and go to state 79
    COMMA  shift, and go to state 47


State 50

   11 Fun: STATIC VarType ID LP . Args RP LC BaseStm RC

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    $default  reduce using rule 92 (EMPTY)

    VarType  转到状态 40
    Args     转到状态 80
    Arg      转到状态 42
    EMPTY    转到状态 43


State 51

   37 DeclareStm: STATIC VarType DeclareVarStm SEMI .

    $default  reduce using rule 37 (DeclareStm)


State 52

   38 DeclareStm: FINAL VarType DeclareVarStm SEMI .

    $default  reduce using rule 38 (DeclareStm)


State 53

   48 Arg: VarType ID .
   49    | VarType ID . COMMA Arg

    COMMA  shift, and go to state 81

    $default  reduce using rule 48 (Arg)


State 54

   12 Fun: ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 82


State 55

   79 ArrayIndex: TYPE . LB Exp RB

    LB  shift, and go to state 83


State 56

   55 Exp: ID . DOT Call
   74 IdStm: ID .
   75      | ID . DOT ID
   80 ArrayIndex: ID . LB Exp RB
   87 Call: ID . LP CallArgs RP

    DOT  shift, and go to state 84
    LP   shift, and go to state 85
    LB   shift, and go to state 86

    $default  reduce using rule 74 (IdStm)


State 57

   66 Exp: NOT . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 87
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 58

   64 Exp: LP . Exp RP

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 88
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 59

   68 Exp: DPLUS . IdStm

    ID     shift, and go to state 89
    THIS   shift, and go to state 67
    SUPER  shift, and go to state 68

    IdStm         转到状态 90
    ClassPointer  转到状态 91


State 60

   70 Exp: DMINUS . IdStm

    ID     shift, and go to state 89
    THIS   shift, and go to state 67
    SUPER  shift, and go to state 68

    IdStm         转到状态 92
    ClassPointer  转到状态 91


State 61

   83 Constant: INT .

    $default  reduce using rule 83 (Constant)


State 62

   84 Constant: FLOAT .

    $default  reduce using rule 84 (Constant)


State 63

   86 Constant: STR .

    $default  reduce using rule 86 (Constant)


State 64

   85 Constant: BOOL .

    $default  reduce using rule 85 (Constant)


State 65

   65 Exp: MINUS . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 93
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 66

   72 Exp: NEW . Call
   73    | NEW . ArrayIndex

    TYPE  shift, and go to state 55
    ID    shift, and go to state 94

    ArrayIndex  转到状态 95
    Call        转到状态 96


State 67

   77 ClassPointer: THIS .

    $default  reduce using rule 77 (ClassPointer)


State 68

   78 ClassPointer: SUPER .

    $default  reduce using rule 78 (ClassPointer)


State 69

   61 Exp: BoolExp .

    $default  reduce using rule 61 (Exp)


State 70

   41 DeclareVarStm: ID ASSIGNOP Exp .
   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103

    $default  reduce using rule 41 (DeclareVarStm)


State 71

   57 Exp: IdStm .
   69    | IdStm . DPLUS
   71    | IdStm . DMINUS
   81 Lvalue: IdStm .

    DPLUS   shift, and go to state 104
    DMINUS  shift, and go to state 105

    ASSIGNOP  reduce using rule 81 (Lvalue)
    $default  reduce using rule 57 (Exp)


State 72

   56 Exp: ClassPointer . DOT Call
   76 IdStm: ClassPointer . DOT ID

    DOT  shift, and go to state 106


State 73

   67 Exp: ArrayIndex .
   82 Lvalue: ArrayIndex .

    ASSIGNOP  reduce using rule 82 (Lvalue)
    $default  reduce using rule 67 (Exp)


State 74

   58 Exp: Lvalue . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 107


State 75

   53 Exp: Constant .

    $default  reduce using rule 53 (Exp)


State 76

   54 Exp: Call .

    $default  reduce using rule 54 (Exp)


State 77

   10 Fun: VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 108


State 78

   42 DeclareVarStm: DeclareVarStm . COMMA DeclareVarStm
   42              | DeclareVarStm COMMA DeclareVarStm .

    COMMA  shift, and go to state 47

    COMMA     [reduce using rule 42 (DeclareVarStm)]
    $default  reduce using rule 42 (DeclareVarStm)


State 79

   39 DeclareStm: STATIC FINAL VarType DeclareVarStm SEMI .

    $default  reduce using rule 39 (DeclareStm)


State 80

   11 Fun: STATIC VarType ID LP Args . RP LC BaseStm RC

    RP  shift, and go to state 109


State 81

   49 Arg: VarType ID COMMA . Arg

    TYPE  shift, and go to state 13
    ID    shift, and go to state 22

    VarType  转到状态 40
    Arg      转到状态 110


State 82

   12 Fun: ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 111
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 112
    TYPE    shift, and go to state 113
    RETURN  shift, and go to state 114
    IF      shift, and go to state 115
    FOR     shift, and go to state 116
    WHILE   shift, and go to state 117
    ID      shift, and go to state 118
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        [reduce using rule 92 (EMPTY)]
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        [reduce using rule 92 (EMPTY)]
    NOT       [reduce using rule 92 (EMPTY)]
    LP        [reduce using rule 92 (EMPTY)]
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 92 (EMPTY)

    VarType       转到状态 119
    BaseStm       转到状态 120
    Lines         转到状态 121
    Line          转到状态 122
    BreakStm      转到状态 123
    IfStm         转到状态 124
    WhileStm      转到状态 125
    ForStm        转到状态 126
    DeclareStm    转到状态 127
    VarStm        转到状态 128
    ReturnStm     转到状态 129
    BoolExp       转到状态 69
    Exp           转到状态 130
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    EMPTY         转到状态 131


State 83

   79 ArrayIndex: TYPE LB . Exp RB

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 132
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 84

   55 Exp: ID DOT . Call
   75 IdStm: ID DOT . ID

    ID  shift, and go to state 133

    Call  转到状态 134


State 85

   87 Call: ID LP . CallArgs RP

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    $default  reduce using rule 92 (EMPTY)

    BoolExp       转到状态 69
    Exp           转到状态 135
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    CallArgs      转到状态 136
    CallArg       转到状态 137
    EMPTY         转到状态 138


State 86

   80 ArrayIndex: ID LB . Exp RB

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 139
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 87

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   66    | NOT Exp .

    $default  reduce using rule 66 (Exp)


State 88

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   64    | LP Exp . RP

    RELOP  shift, and go to state 97
    RP     shift, and go to state 140
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103


State 89

   74 IdStm: ID .
   75      | ID . DOT ID

    DOT  shift, and go to state 141

    $default  reduce using rule 74 (IdStm)


State 90

   68 Exp: DPLUS IdStm .

    $default  reduce using rule 68 (Exp)


State 91

   76 IdStm: ClassPointer . DOT ID

    DOT  shift, and go to state 142


State 92

   70 Exp: DMINUS IdStm .

    $default  reduce using rule 70 (Exp)


State 93

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   65    | MINUS Exp .

    STAR  shift, and go to state 100
    DIV   shift, and go to state 101

    $default  reduce using rule 65 (Exp)


State 94

   80 ArrayIndex: ID . LB Exp RB
   87 Call: ID . LP CallArgs RP

    LP  shift, and go to state 85
    LB  shift, and go to state 86


State 95

   73 Exp: NEW ArrayIndex .

    $default  reduce using rule 73 (Exp)


State 96

   72 Exp: NEW Call .

    $default  reduce using rule 72 (Exp)


State 97

   50 BoolExp: Exp RELOP . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 143
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 98

   59 Exp: Exp PLUS . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 144
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 99

   60 Exp: Exp MINUS . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 145
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 100

   62 Exp: Exp STAR . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 146
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 101

   63 Exp: Exp DIV . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 147
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 102

   52 BoolExp: Exp OR . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 148
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 103

   51 BoolExp: Exp AND . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 149
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 104

   69 Exp: IdStm DPLUS .

    $default  reduce using rule 69 (Exp)


State 105

   71 Exp: IdStm DMINUS .

    $default  reduce using rule 71 (Exp)


State 106

   56 Exp: ClassPointer DOT . Call
   76 IdStm: ClassPointer DOT . ID

    ID  shift, and go to state 150

    Call  转到状态 151


State 107

   58 Exp: Lvalue ASSIGNOP . Exp

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 152
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 108

   10 Fun: VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 153


State 109

   11 Fun: STATIC VarType ID LP Args RP . LC BaseStm RC

    LC  shift, and go to state 154


State 110

   49 Arg: VarType ID COMMA Arg .

    $default  reduce using rule 49 (Arg)


State 111

   37 DeclareStm: STATIC . VarType DeclareVarStm SEMI
   39           | STATIC . FINAL VarType DeclareVarStm SEMI

    FINAL  shift, and go to state 21
    TYPE   shift, and go to state 13
    ID     shift, and go to state 22

    VarType  转到状态 155


State 112

   29 BreakStm: BREAK . SEMI

    SEMI  shift, and go to state 156


State 113

   13 VarType: TYPE . Arrays
   15        | TYPE .
   79 ArrayIndex: TYPE . LB Exp RB

    LB  shift, and go to state 157

    $default  reduce using rule 15 (VarType)

    Arrays  转到状态 26


State 114

   44 ReturnStm: RETURN . SEMI
   45          | RETURN . Exp SEMI

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    SEMI    shift, and go to state 158
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 159
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 115

   30 IfStm: IF . LP BoolExp RP LC BaseStm RC

    LP  shift, and go to state 160


State 116

   35 ForStm: FOR . LP Exp SEMI BoolExp SEMI Exp RP LC BaseStm RC

    LP  shift, and go to state 161


State 117

   34 WhileStm: WHILE . LP BoolExp RP LC BaseStm RC

    LP  shift, and go to state 162


State 118

   14 VarType: ID . Arrays
   16        | ID .
   55 Exp: ID . DOT Call
   74 IdStm: ID .
   75      | ID . DOT ID
   80 ArrayIndex: ID . LB Exp RB
   87 Call: ID . LP CallArgs RP

    DOT  shift, and go to state 84
    LP   shift, and go to state 85
    LB   shift, and go to state 163

    ID        reduce using rule 16 (VarType)
    $default  reduce using rule 74 (IdStm)

    Arrays  转到状态 28


State 119

   36 DeclareStm: VarType . DeclareVarStm SEMI

    ID  shift, and go to state 37

    DeclareVarStm  转到状态 32


State 120

   12 Fun: ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 164


State 121

   18 BaseStm: Lines .

    $default  reduce using rule 18 (BaseStm)


State 122

   19 Lines: Line .
   20      | Line . Lines

    STATIC  shift, and go to state 111
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 112
    TYPE    shift, and go to state 113
    RETURN  shift, and go to state 114
    IF      shift, and go to state 115
    FOR     shift, and go to state 116
    WHILE   shift, and go to state 117
    ID      shift, and go to state 118
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        [reduce using rule 92 (EMPTY)]
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        [reduce using rule 92 (EMPTY)]
    NOT       [reduce using rule 92 (EMPTY)]
    LP        [reduce using rule 92 (EMPTY)]
    RC        reduce using rule 19 (Lines)
    RC        [reduce using rule 92 (EMPTY)]
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 19 (Lines)

    VarType       转到状态 119
    Lines         转到状态 165
    Line          转到状态 122
    BreakStm      转到状态 123
    IfStm         转到状态 124
    WhileStm      转到状态 125
    ForStm        转到状态 126
    DeclareStm    转到状态 127
    VarStm        转到状态 128
    ReturnStm     转到状态 129
    BoolExp       转到状态 69
    Exp           转到状态 130
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    EMPTY         转到状态 131


State 123

   27 Line: BreakStm .

    $default  reduce using rule 27 (Line)


State 124

   22 Line: IfStm .
   31 IfStm: IfStm . ElseStm

    ELSE  shift, and go to state 166

    STATIC    reduce using rule 22 (Line)
    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     reduce using rule 22 (Line)
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     reduce using rule 22 (Line)
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      reduce using rule 22 (Line)
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    reduce using rule 22 (Line)
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        reduce using rule 22 (Line)
    IF        [reduce using rule 92 (EMPTY)]
    ELSE      [reduce using rule 92 (EMPTY)]
    FOR       reduce using rule 22 (Line)
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     reduce using rule 22 (Line)
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        reduce using rule 22 (Line)
    ID        [reduce using rule 92 (EMPTY)]
    NOT       reduce using rule 22 (Line)
    NOT       [reduce using rule 92 (EMPTY)]
    LP        reduce using rule 22 (Line)
    LP        [reduce using rule 92 (EMPTY)]
    RC        reduce using rule 22 (Line)
    RC        [reduce using rule 92 (EMPTY)]
    DPLUS     reduce using rule 22 (Line)
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    reduce using rule 22 (Line)
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       reduce using rule 22 (Line)
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     reduce using rule 22 (Line)
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       reduce using rule 22 (Line)
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      reduce using rule 22 (Line)
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     reduce using rule 22 (Line)
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       reduce using rule 22 (Line)
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      reduce using rule 22 (Line)
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     reduce using rule 22 (Line)
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 22 (Line)

    ElseStm  转到状态 167
    EMPTY    转到状态 168


State 125

   23 Line: WhileStm .

    $default  reduce using rule 23 (Line)


State 126

   28 Line: ForStm .

    $default  reduce using rule 28 (Line)


State 127

   25 Line: DeclareStm .

    $default  reduce using rule 25 (Line)


State 128

   24 Line: VarStm . SEMI

    SEMI  shift, and go to state 169


State 129

   26 Line: ReturnStm .

    $default  reduce using rule 26 (Line)


State 130

   43 VarStm: Exp .
   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103

    $default  reduce using rule 43 (VarStm)


State 131

   21 Line: EMPTY .

    $default  reduce using rule 21 (Line)


State 132

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   79 ArrayIndex: TYPE LB Exp . RB

    RELOP  shift, and go to state 97
    RB     shift, and go to state 170
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103


State 133

   75 IdStm: ID DOT ID .
   87 Call: ID . LP CallArgs RP

    LP  shift, and go to state 85

    $default  reduce using rule 75 (IdStm)


State 134

   55 Exp: ID DOT Call .

    $default  reduce using rule 55 (Exp)


State 135

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   90 CallArg: Exp .
   91        | Exp . COMMA CallArg

    COMMA  shift, and go to state 171
    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103

    $default  reduce using rule 90 (CallArg)


State 136

   87 Call: ID LP CallArgs . RP

    RP  shift, and go to state 172


State 137

   89 CallArgs: CallArg .

    $default  reduce using rule 89 (CallArgs)


State 138

   88 CallArgs: EMPTY .

    $default  reduce using rule 88 (CallArgs)


State 139

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   80 ArrayIndex: ID LB Exp . RB

    RELOP  shift, and go to state 97
    RB     shift, and go to state 173
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103


State 140

   64 Exp: LP Exp RP .

    $default  reduce using rule 64 (Exp)


State 141

   75 IdStm: ID DOT . ID

    ID  shift, and go to state 174


State 142

   76 IdStm: ClassPointer DOT . ID

    ID  shift, and go to state 175


State 143

   50 BoolExp: Exp . RELOP Exp
   50        | Exp RELOP Exp .
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101

    $default  reduce using rule 50 (BoolExp)


State 144

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   59    | Exp PLUS Exp .
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    STAR  shift, and go to state 100
    DIV   shift, and go to state 101

    $default  reduce using rule 59 (Exp)


State 145

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   60    | Exp MINUS Exp .
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    STAR  shift, and go to state 100
    DIV   shift, and go to state 101

    $default  reduce using rule 60 (Exp)


State 146

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   62    | Exp STAR Exp .
   63    | Exp . DIV Exp

    $default  reduce using rule 62 (Exp)


State 147

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp
   63    | Exp DIV Exp .

    $default  reduce using rule 63 (Exp)


State 148

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   52        | Exp OR Exp .
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    AND    shift, and go to state 103

    $default  reduce using rule 52 (BoolExp)


State 149

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   51        | Exp AND Exp .
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101

    $default  reduce using rule 51 (BoolExp)


State 150

   76 IdStm: ClassPointer DOT ID .
   87 Call: ID . LP CallArgs RP

    LP  shift, and go to state 85

    $default  reduce using rule 76 (IdStm)


State 151

   56 Exp: ClassPointer DOT Call .

    $default  reduce using rule 56 (Exp)


State 152

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   58 Exp: Lvalue ASSIGNOP Exp .
   59    | Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103

    $default  reduce using rule 58 (Exp)


State 153

   10 Fun: VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 111
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 112
    TYPE    shift, and go to state 113
    RETURN  shift, and go to state 114
    IF      shift, and go to state 115
    FOR     shift, and go to state 116
    WHILE   shift, and go to state 117
    ID      shift, and go to state 118
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        [reduce using rule 92 (EMPTY)]
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        [reduce using rule 92 (EMPTY)]
    NOT       [reduce using rule 92 (EMPTY)]
    LP        [reduce using rule 92 (EMPTY)]
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 92 (EMPTY)

    VarType       转到状态 119
    BaseStm       转到状态 176
    Lines         转到状态 121
    Line          转到状态 122
    BreakStm      转到状态 123
    IfStm         转到状态 124
    WhileStm      转到状态 125
    ForStm        转到状态 126
    DeclareStm    转到状态 127
    VarStm        转到状态 128
    ReturnStm     转到状态 129
    BoolExp       转到状态 69
    Exp           转到状态 130
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    EMPTY         转到状态 131


State 154

   11 Fun: STATIC VarType ID LP Args RP LC . BaseStm RC

    STATIC  shift, and go to state 111
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 112
    TYPE    shift, and go to state 113
    RETURN  shift, and go to state 114
    IF      shift, and go to state 115
    FOR     shift, and go to state 116
    WHILE   shift, and go to state 117
    ID      shift, and go to state 118
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        [reduce using rule 92 (EMPTY)]
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        [reduce using rule 92 (EMPTY)]
    NOT       [reduce using rule 92 (EMPTY)]
    LP        [reduce using rule 92 (EMPTY)]
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 92 (EMPTY)

    VarType       转到状态 119
    BaseStm       转到状态 177
    Lines         转到状态 121
    Line          转到状态 122
    BreakStm      转到状态 123
    IfStm         转到状态 124
    WhileStm      转到状态 125
    ForStm        转到状态 126
    DeclareStm    转到状态 127
    VarStm        转到状态 128
    ReturnStm     转到状态 129
    BoolExp       转到状态 69
    Exp           转到状态 130
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    EMPTY         转到状态 131


State 155

   37 DeclareStm: STATIC VarType . DeclareVarStm SEMI

    ID  shift, and go to state 37

    DeclareVarStm  转到状态 36


State 156

   29 BreakStm: BREAK SEMI .

    $default  reduce using rule 29 (BreakStm)


State 157

   17 Arrays: LB . RB
   79 ArrayIndex: TYPE LB . Exp RB

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    RB      shift, and go to state 39
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 132
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 158

   44 ReturnStm: RETURN SEMI .

    $default  reduce using rule 44 (ReturnStm)


State 159

   45 ReturnStm: RETURN Exp . SEMI
   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    SEMI   shift, and go to state 178
    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103


State 160

   30 IfStm: IF LP . BoolExp RP LC BaseStm RC

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 179
    Exp           转到状态 180
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 161

   35 ForStm: FOR LP . Exp SEMI BoolExp SEMI Exp RP LC BaseStm RC

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 181
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 162

   34 WhileStm: WHILE LP . BoolExp RP LC BaseStm RC

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 182
    Exp           转到状态 180
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 163

   17 Arrays: LB . RB
   80 ArrayIndex: ID LB . Exp RB

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    RB      shift, and go to state 39
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 139
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 164

   12 Fun: ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 12 (Fun)


State 165

   20 Lines: Line Lines .

    $default  reduce using rule 20 (Lines)


State 166

   32 ElseStm: ELSE . LC BaseStm RC

    LC  shift, and go to state 183


State 167

   31 IfStm: IfStm ElseStm .

    $default  reduce using rule 31 (IfStm)


State 168

   33 ElseStm: EMPTY .

    $default  reduce using rule 33 (ElseStm)


State 169

   24 Line: VarStm SEMI .

    $default  reduce using rule 24 (Line)


State 170

   79 ArrayIndex: TYPE LB Exp RB .

    $default  reduce using rule 79 (ArrayIndex)


State 171

   91 CallArg: Exp COMMA . CallArg

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 135
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    CallArg       转到状态 184


State 172

   87 Call: ID LP CallArgs RP .

    $default  reduce using rule 87 (Call)


State 173

   80 ArrayIndex: ID LB Exp RB .

    $default  reduce using rule 80 (ArrayIndex)


State 174

   75 IdStm: ID DOT ID .

    $default  reduce using rule 75 (IdStm)


State 175

   76 IdStm: ClassPointer DOT ID .

    $default  reduce using rule 76 (IdStm)


State 176

   10 Fun: VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 185


State 177

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm . RC

    RC  shift, and go to state 186


State 178

   45 ReturnStm: RETURN Exp SEMI .

    $default  reduce using rule 45 (ReturnStm)


State 179

   30 IfStm: IF LP BoolExp . RP LC BaseStm RC
   61 Exp: BoolExp .

    RP  shift, and go to state 187

    $default  reduce using rule 61 (Exp)


State 180

   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103


State 181

   35 ForStm: FOR LP Exp . SEMI BoolExp SEMI Exp RP LC BaseStm RC
   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    SEMI   shift, and go to state 188
    RELOP  shift, and go to state 97
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103


State 182

   34 WhileStm: WHILE LP BoolExp . RP LC BaseStm RC
   61 Exp: BoolExp .

    RP  shift, and go to state 189

    $default  reduce using rule 61 (Exp)


State 183

   32 ElseStm: ELSE LC . BaseStm RC

    STATIC  shift, and go to state 111
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 112
    TYPE    shift, and go to state 113
    RETURN  shift, and go to state 114
    IF      shift, and go to state 115
    FOR     shift, and go to state 116
    WHILE   shift, and go to state 117
    ID      shift, and go to state 118
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        [reduce using rule 92 (EMPTY)]
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        [reduce using rule 92 (EMPTY)]
    NOT       [reduce using rule 92 (EMPTY)]
    LP        [reduce using rule 92 (EMPTY)]
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 92 (EMPTY)

    VarType       转到状态 119
    BaseStm       转到状态 190
    Lines         转到状态 121
    Line          转到状态 122
    BreakStm      转到状态 123
    IfStm         转到状态 124
    WhileStm      转到状态 125
    ForStm        转到状态 126
    DeclareStm    转到状态 127
    VarStm        转到状态 128
    ReturnStm     转到状态 129
    BoolExp       转到状态 69
    Exp           转到状态 130
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    EMPTY         转到状态 131


State 184

   91 CallArg: Exp COMMA CallArg .

    $default  reduce using rule 91 (CallArg)


State 185

   10 Fun: VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 10 (Fun)


State 186

   11 Fun: STATIC VarType ID LP Args RP LC BaseStm RC .

    $default  reduce using rule 11 (Fun)


State 187

   30 IfStm: IF LP BoolExp RP . LC BaseStm RC

    LC  shift, and go to state 191


State 188

   35 ForStm: FOR LP Exp SEMI . BoolExp SEMI Exp RP LC BaseStm RC

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 192
    Exp           转到状态 180
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 189

   34 WhileStm: WHILE LP BoolExp RP . LC BaseStm RC

    LC  shift, and go to state 193


State 190

   32 ElseStm: ELSE LC BaseStm . RC

    RC  shift, and go to state 194


State 191

   30 IfStm: IF LP BoolExp RP LC . BaseStm RC

    STATIC  shift, and go to state 111
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 112
    TYPE    shift, and go to state 113
    RETURN  shift, and go to state 114
    IF      shift, and go to state 115
    FOR     shift, and go to state 116
    WHILE   shift, and go to state 117
    ID      shift, and go to state 118
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        [reduce using rule 92 (EMPTY)]
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        [reduce using rule 92 (EMPTY)]
    NOT       [reduce using rule 92 (EMPTY)]
    LP        [reduce using rule 92 (EMPTY)]
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 92 (EMPTY)

    VarType       转到状态 119
    BaseStm       转到状态 195
    Lines         转到状态 121
    Line          转到状态 122
    BreakStm      转到状态 123
    IfStm         转到状态 124
    WhileStm      转到状态 125
    ForStm        转到状态 126
    DeclareStm    转到状态 127
    VarStm        转到状态 128
    ReturnStm     转到状态 129
    BoolExp       转到状态 69
    Exp           转到状态 130
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    EMPTY         转到状态 131


State 192

   35 ForStm: FOR LP Exp SEMI BoolExp . SEMI Exp RP LC BaseStm RC
   61 Exp: BoolExp .

    SEMI  shift, and go to state 196

    $default  reduce using rule 61 (Exp)


State 193

   34 WhileStm: WHILE LP BoolExp RP LC . BaseStm RC

    STATIC  shift, and go to state 111
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 112
    TYPE    shift, and go to state 113
    RETURN  shift, and go to state 114
    IF      shift, and go to state 115
    FOR     shift, and go to state 116
    WHILE   shift, and go to state 117
    ID      shift, and go to state 118
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        [reduce using rule 92 (EMPTY)]
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        [reduce using rule 92 (EMPTY)]
    NOT       [reduce using rule 92 (EMPTY)]
    LP        [reduce using rule 92 (EMPTY)]
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 92 (EMPTY)

    VarType       转到状态 119
    BaseStm       转到状态 197
    Lines         转到状态 121
    Line          转到状态 122
    BreakStm      转到状态 123
    IfStm         转到状态 124
    WhileStm      转到状态 125
    ForStm        转到状态 126
    DeclareStm    转到状态 127
    VarStm        转到状态 128
    ReturnStm     转到状态 129
    BoolExp       转到状态 69
    Exp           转到状态 130
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    EMPTY         转到状态 131


State 194

   32 ElseStm: ELSE LC BaseStm RC .

    $default  reduce using rule 32 (ElseStm)


State 195

   30 IfStm: IF LP BoolExp RP LC BaseStm . RC

    RC  shift, and go to state 198


State 196

   35 ForStm: FOR LP Exp SEMI BoolExp SEMI . Exp RP LC BaseStm RC

    TYPE    shift, and go to state 55
    ID      shift, and go to state 56
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    BoolExp       转到状态 69
    Exp           转到状态 199
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76


State 197

   34 WhileStm: WHILE LP BoolExp RP LC BaseStm . RC

    RC  shift, and go to state 200


State 198

   30 IfStm: IF LP BoolExp RP LC BaseStm RC .

    $default  reduce using rule 30 (IfStm)


State 199

   35 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp . RP LC BaseStm RC
   50 BoolExp: Exp . RELOP Exp
   51        | Exp . AND Exp
   52        | Exp . OR Exp
   59 Exp: Exp . PLUS Exp
   60    | Exp . MINUS Exp
   62    | Exp . STAR Exp
   63    | Exp . DIV Exp

    RELOP  shift, and go to state 97
    RP     shift, and go to state 201
    PLUS   shift, and go to state 98
    MINUS  shift, and go to state 99
    STAR   shift, and go to state 100
    DIV    shift, and go to state 101
    OR     shift, and go to state 102
    AND    shift, and go to state 103


State 200

   34 WhileStm: WHILE LP BoolExp RP LC BaseStm RC .

    $default  reduce using rule 34 (WhileStm)


State 201

   35 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP . LC BaseStm RC

    LC  shift, and go to state 202


State 202

   35 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP LC . BaseStm RC

    STATIC  shift, and go to state 111
    FINAL   shift, and go to state 12
    BREAK   shift, and go to state 112
    TYPE    shift, and go to state 113
    RETURN  shift, and go to state 114
    IF      shift, and go to state 115
    FOR     shift, and go to state 116
    WHILE   shift, and go to state 117
    ID      shift, and go to state 118
    NOT     shift, and go to state 57
    LP      shift, and go to state 58
    DPLUS   shift, and go to state 59
    DMINUS  shift, and go to state 60
    INT     shift, and go to state 61
    FLOAT   shift, and go to state 62
    STR     shift, and go to state 63
    BOOL    shift, and go to state 64
    MINUS   shift, and go to state 65
    NEW     shift, and go to state 66
    THIS    shift, and go to state 67
    SUPER   shift, and go to state 68

    STATIC    [reduce using rule 92 (EMPTY)]
    FINAL     [reduce using rule 92 (EMPTY)]
    BREAK     [reduce using rule 92 (EMPTY)]
    TYPE      [reduce using rule 92 (EMPTY)]
    RETURN    [reduce using rule 92 (EMPTY)]
    IF        [reduce using rule 92 (EMPTY)]
    FOR       [reduce using rule 92 (EMPTY)]
    WHILE     [reduce using rule 92 (EMPTY)]
    ID        [reduce using rule 92 (EMPTY)]
    NOT       [reduce using rule 92 (EMPTY)]
    LP        [reduce using rule 92 (EMPTY)]
    DPLUS     [reduce using rule 92 (EMPTY)]
    DMINUS    [reduce using rule 92 (EMPTY)]
    INT       [reduce using rule 92 (EMPTY)]
    FLOAT     [reduce using rule 92 (EMPTY)]
    STR       [reduce using rule 92 (EMPTY)]
    BOOL      [reduce using rule 92 (EMPTY)]
    MINUS     [reduce using rule 92 (EMPTY)]
    NEW       [reduce using rule 92 (EMPTY)]
    THIS      [reduce using rule 92 (EMPTY)]
    SUPER     [reduce using rule 92 (EMPTY)]
    $default  reduce using rule 92 (EMPTY)

    VarType       转到状态 119
    BaseStm       转到状态 203
    Lines         转到状态 121
    Line          转到状态 122
    BreakStm      转到状态 123
    IfStm         转到状态 124
    WhileStm      转到状态 125
    ForStm        转到状态 126
    DeclareStm    转到状态 127
    VarStm        转到状态 128
    ReturnStm     转到状态 129
    BoolExp       转到状态 69
    Exp           转到状态 130
    IdStm         转到状态 71
    ClassPointer  转到状态 72
    ArrayIndex    转到状态 73
    Lvalue        转到状态 74
    Constant      转到状态 75
    Call          转到状态 76
    EMPTY         转到状态 131


State 203

   35 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP LC BaseStm . RC

    RC  shift, and go to state 204


State 204

   35 ForStm: FOR LP Exp SEMI BoolExp SEMI Exp RP LC BaseStm RC .

    $default  reduce using rule 35 (ForStm)
